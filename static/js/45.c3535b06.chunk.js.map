{"version":3,"sources":["Page/StockEntry/StockTake/Upload/index.jsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","React","createElement","className","element","id","style","display","filename","data","warehouse","area","po","skuNumber","expiryDate","qty","grade","ripeness","name","label","value","FileUploader","nextPage","history","push","transaction","field","dataField","text","editable","sort","hidden","type"],"mappings":"mMAAA,sEAOA,MAAMA,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YAwG3BC,sBAvGCC,GAmEZC,IAAAC,cAAA,OAAKC,UAAU,QAEbF,IAAAC,cAACP,EAAS,CACRS,QAEEH,IAAAC,cAAA,UAAQG,GAAG,wBAAwBC,MAAO,CAAEC,QAAS,SAAU,iBAKjEC,SAAS,4BAETP,IAAAC,cAACL,EAAU,CAACY,KA1BD,CACf,CACEC,UAAW,GACXC,KAAM,GACNC,GAAI,GACJC,UAAW,GACXC,WAAY,GACZC,IAAK,GACLC,MAAO,GACPC,SAAU,KAiBoBC,KAAK,YAE/BjB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,OAAOC,MAAM,SAChCnB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,cAAcC,MAAM,OACvCnB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,aAAaC,MAAM,cACtCnB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,cAAcC,MAAM,eACvCnB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,eAAeC,MAAM,QACxCnB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,QAAQC,MAAM,UACjCnB,IAAAC,cAACJ,EAAW,CAACqB,MAAM,WAAWC,MAAM,eAKxCnB,IAAAC,cAACmB,IAAY,CACXC,SAAUA,IACRtB,EAAMuB,QAAQC,KAAK,iDAErBC,YAAa,aACbC,MA9FQ,CACZ,CACEC,UAAW,KACXC,KAAM,KACNC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,KAAM,UAQR,CAAEL,UAAW,WAAYC,KAAM,OAAQI,KAAM,SAAUF,MAAM,GAC7D,CACEH,UAAW,eACXC,KAAM,cACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,YACXC,KAAM,aACNI,KAAM,SACNF,MAAM,GAER,CACEH,UAAW,gBACXC,KAAM,cACNI,KAAM,YACNF,MAAM,GAQR,CAAEH,UAAW,MAAOC,KAAM,eAAgBI,KAAM,SAAUF,MAAM,GAChE,CAAEH,UAAW,WAAYC,KAAM,QAASI,KAAM,SAAUF,MAAM,GAC9D,CACEH,UAAW,cACXC,KAAM,WACNI,KAAM,SACNF,MAAM,S","file":"static/js/45.c3535b06.chunk.js","sourcesContent":["import React from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport FileUploader from \"Component/FileUploader\";\nimport ReactExport from \"react-export-excel\";\nimport \"./index.scss\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst Upload = (props) => {\n  // const dispatch = useDispatch();\n  // const [isDisplayProgress, setIsDisplayProgress] = React.useState(false);\n  const Field = [\n    {\n      dataField: \"id\", //field ini wajib ada untuk editable column\n      text: \"ID\",\n      editable: false,\n      sort: true,\n      hidden: true,\n      type: \"number\",\n    },\n    // {\n    //   dataField: \"warehouseCode\",\n    //   text: \"Warehouse\",\n    //   type: \"string\",\n    //   sort: true,\n    // },\n    { dataField: \"areaName\", text: \"Area\", type: \"string\", sort: true },\n    {\n      dataField: \"wmsPoSkuCode\",\n      text: \"PO SKU Code\",\n      type: \"number\",\n      sort: true,\n    },\n    {\n      dataField: \"skuNumber\",\n      text: \"SKU Number\",\n      type: \"number\",\n      sort: true,\n    },\n    {\n      dataField: \"expiryDateCol\",\n      text: \"Expiry Date\",\n      type: \"date_indo\",\n      sort: true,\n    },\n    // {\n    //   dataField: \"ripenessLevel\",\n    //   text: \"Ripeness\",\n    //   type: \"string\",\n    //   sort: true,\n    // },\n    { dataField: \"qty\", text: \"Input Weight\", type: \"number\", sort: true },\n    { dataField: \"newGrade\", text: \"Grade\", type: \"string\", sort: true },\n    {\n      dataField: \"newRipeness\",\n      text: \"Ripeness\",\n      type: \"string\",\n      sort: true,\n    },\n  ];\n\n  const dataSet1 = [\n    {\n      warehouse: \"\",\n      area: \"\",\n      po: \"\",\n      skuNumber: \"\",\n      expiryDate: \"\",\n      qty: \"\",\n      grade: \"\",\n      ripeness: \"\",\n    },\n  ];\n\n  return (\n    <div className=\"mb-5\">\n      {/* export this table to excel */}\n      <ExcelFile\n        element={\n          //dont change id and style please\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\n            Download Data\n          </button>\n        }\n        //file name without types\n        filename=\"StockTakeUpload_Template\"\n      >\n        <ExcelSheet data={dataSet1} name=\"template\">\n          {/* <ExcelColumn label=\"Warehouse\" value=\"warehouse\" /> */}\n          <ExcelColumn label=\"Area\" value=\"area\" />\n          <ExcelColumn label=\"PO SKU Code\" value=\"po\" />\n          <ExcelColumn label=\"SKU Number\" value=\"skuNumber\" />\n          <ExcelColumn label=\"Expiry Date\" value=\"expiryDate\" />\n          <ExcelColumn label=\"Input Weight\" value=\"qty\" />\n          <ExcelColumn label=\"Grade\" value=\"grade\" />\n          <ExcelColumn label=\"Ripeness\" value=\"ripeness\" />\n        </ExcelSheet>\n      </ExcelFile>\n      {/* end export this table to excel */}\n\n      <FileUploader\n        nextPage={() =>\n          props.history.push(\"/inventory-entry/stock-take/CSV-upload/review\")\n        }\n        transaction={\"stock_take\"}\n        field={Field}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(Upload);\n"],"sourceRoot":""}