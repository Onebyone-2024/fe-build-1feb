{"version":3,"sources":["Page/StockEntry/GeneralServices/index.js","assets/icons/loading/LOADING-MLS-GRAY.gif","Page/StockEntry/Repacking/services.js"],"names":["useDimension","hValue","wValue","dimention","document","documentElement","clientHeight","width","clientWidth","height","emptyItem","isMobile","useEntryDimention","showTargetRepack","heightAdj","loading","useStockTake","_ref","dispatch","useSelector","state","user","zeroQuantity","thereAreRequest","moduleFirstLoad","stockTakeFirstLoad","warehouseUuid","warehouseTypeName","isCentral","status","isLoading","stockTakeEntryData","summary","setSummary","useState","localEntryData","setLocalEntryData","search","setSearch","area","setArea","areaId","setAreaId","discard","setDiscard","useEffect","async","ripeness","getRipenessLevel","areaList","getWarehouseArea","storageList","filter","data","typeId","label","getUnfinishedEntries","moduleName","isExist","getData","e","console","log","useStockTakeEntry","_ref2","moduleEntry","activeSku","isSuccess","setIsSuccess","success","name","confirmation","setConfirmation","show","isSaved","setIsSaved","action","setAction","isRequired","setIsRequired","hideContent","setHideContent","allowPage","setAllowPage","skuName","skuNumber","poList","gradeList","totalQty","unitOfMeassures","jobPost","list","totalWeight","totalWeightCount","edited","jobSheetChecker","inputType","postInfo","useStockMovement","_ref3","_localEntryData$jobPo","_localEntryData$jobPo2","stockMovementFirstLoad","stockMovementDropdown","areaIdDesposition","areaMovement","stockMovementEntryData","wasteReasonList","isCheckedBefore","setIsCheckedBefore","areaMatched","setAreaMatched","isCheckedTotal","selectedSkuCheck","added","entryIsReady","length","stockMovementTargetRepack","getWasteReason","_","value","getStockTakeSummary","desc","setModule","module","useStockMovementEntry","_ref4","useStockTransferEntry","_ref6","useWaste","_ref7","wasteFirstLoad","wasteEntryData","getWasteWarehouseArea","useWasteEntry","_ref8","useAdditionalOutbound","_ref9","outboundFirstLoad","outboundEntryData","warehouseArea","outboundAddSku","next","setNext","useAdditionalOutboundEntry","_ref10","outboundTypeList","useRepacking","_ref11","repackFirstLoad","repackEntryData","targetRepack","areaDestinationId","setAreaDestinationId","aId","adId","setTargetRepack","type","IS_LOADING","useRepackingEntry","_ref12","invalidThreshold","setInvalidThreshold","activeTab","setActiveTab","totalPack","totalPackCount","useSingleView","_ref13","category","createPo","setCreatePo","singleViewData","setSingleViewData","fromBarcode","setFromBarcode","moveAll","setMoveAll","updateList","props","props2","setTimeout","singleView","useScanner","showScanner","setShowScanner","showSkuList","setShowSkuList","useTargetRepack","_ref14","_moduleEntry$jobPost","_moduleEntry$jobPost2","_moduleEntry$jobPost3","_moduleEntry$jobPost4","targetRepacks","slotList","slot","setSlot","tgtRpck","table","filterTargetRepack","setShowTargetRepack","totalEmptyThreshold","countThresholdIsEmpty","_table$data","_table$data2","useTargetMovement","_ref15","_moduleEntry$jobPost$","targetMovements","_table$data3","_table$data4","useOutside","_ref17","wrapperRef","setShow","handleClickOutside","event","current","contains","target","keyCode","addEventListener","removeEventListener","exports","selectSku","idx","checked","moduleSummary","moduleSummaryNew","GET_STOCK_TAKE_ACTION","concat","selectedData","ldata","jsSelector","map","jsList","skuUuid","push","jsD","a","sI","includes","grade","getGradeRepacking","skuId","getPORepacking","warehouseId","uom","addPoItem","itemList","expiryMs","inBoundyMs","expiryDate","inboundDate","packSize","initialWeight","Number","isInteger","parseInt","parseFloat","Promise","all","newJs","uncheckedSku","id","jobSheet","warehouseSource","warehouseDestination","areaSource","areaName","areaDestination","areaDestinationName","sort","b","filterBySkuName","CREATE_JOB_SHEET","preAddSku","preAddHandler","isFloat","isNewItem","submitValidation","_ref5","setActiveSKU","isClear","js","jsR","description","originalUom","po","qtyCount","totalListItemWeightCount","moduleList","item","qty","pack","note","_item$grade","_item$grade2","isNaN","qtyIsEmpty","gradeIsEmpty","noteIsEmpty","ratio","grd","multiplier","standardWeight","toLowerCase","inputWeight","packThresholdIsEmpty","packThreshold","packIsEmpty","qtyToCompareIsEmpty","slotIsEmpty","valid","checkIsSkuRequired","number","ls","listIndex","poListIdx","entryListIdx","excess"],"mappings":"0KAAA,qrBASO,MAAMA,EAAeA,CAACC,EAAQC,KACnC,MAAMC,EAAYC,SAASC,gBAAgBC,aACrCC,EAAQH,SAASC,gBAAgBG,YAIvC,MAAO,CAAEL,YAAWM,OAHLN,GAAaF,GAAkB,GAGlBS,UAFVP,GAAaF,GAAkB,GAEVM,QAAOI,SAD7BJ,GAAS,MAIfK,EAAqBC,IAChC,MAAMV,EAAYC,SAASC,gBAAgBG,YAC3C,IAAIC,EAASL,SAASC,gBAAgBC,aAClCQ,EAAYL,GAAUI,EAAmB,IAAM,KAGnD,OAFAJ,EAASN,GAAa,IAAOU,EAAoBC,EAAY,IAAOA,EAAaL,EAE1E,CAAEA,SAAQK,YAAWX,YAAWY,cAI5BC,EAAeC,IAAmB,IAAlB,SAAEC,GAAUD,EAC1BE,YAAaC,GAAUA,EAAMC,MAA1C,MAEMC,EAAeH,YAAYC,GAASA,EAAME,cAC1CC,EAAkBJ,YAAYC,GAASA,EAAMG,iBAC7CC,EAAkBL,YAAYC,GAASA,EAAMK,oBAC7CC,EAAgBP,YAAaC,GAAUA,EAAMC,KAAKK,eAClDC,EAAoBR,YAAaC,GAAUA,EAAMC,KAAKM,mBACtDC,EAAkC,cAAtBD,EACZE,EAASV,YAAaC,GAAUA,EAAMS,QACtCC,EAAYX,YAAaC,GAAUA,EAAMU,WACzCC,EAAqBZ,YAAaC,GAAUA,EAAMW,qBAEjDC,EAASC,GAAcC,mBAAS,OAChCC,EAAgBC,GAAqBF,sBACrCG,EAAQC,GAAaJ,sBACrBK,EAAMC,GAAWN,sBACjBO,EAAQC,GAAaR,mBAAS,KAC9BS,EAASC,GAAcV,qBA2B9B,OAxBAW,oBAAU,KAWR,KAVAC,iBACE,MAAMC,QAAiBC,YAAiB,CAAE9B,aACpC+B,QAAiBC,YAAiB,CAAEhC,WAAUQ,kBAC9CyB,EAAsB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAOC,GAAwB,IAAhBA,EAAKC,QACXZ,EAAb,cAAtBf,EAAwD,OAAXwB,QAAW,IAAXA,OAAW,EAAXA,EAAaC,OAAOC,GAAuB,oBAAfA,EAAKE,OAA6B,GACrF,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaC,OAAOC,GAAuB,YAAfA,EAAKE,OAAqB,IACrEf,EAAQS,GACRO,YAAqB,CAAEtC,WAAUuC,WA3BlB,YA2B8BC,UAAS3B,EAAmCgB,aAIzFY,GAEF,MAAOC,GACLC,QAAQC,IAAIF,KAEb,IAEHf,oBAAU,KACRT,IACAH,KACC,CAACQ,IAEG,CACLb,YACA6B,WA7CiB,YA8CjBlC,kBACAC,kBACAE,gBACAG,SACAC,YACAC,qBACAC,UACAC,aACAE,iBACAC,oBACAC,SACAC,YACAC,OACAC,UACAC,SACAC,YACAC,UACAC,aACAtB,iBAKSyC,EAAoBC,IAAiC,IAAhC,YAAEC,EAAW,UAAEC,GAAWF,EAC1D,MAAOG,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,QAC/D3B,EAASC,GAAcV,oBAAS,IAChCwC,EAASC,GAAczC,sBACvB0C,EAAQC,GAAa3C,sBACrB4C,EAAYC,GAAiB7C,oBAAS,IACtC8C,EAAaC,GAAkB/C,oBAAS,IACxCgD,EAAWC,GAAgBjD,mBAAS,CACzC,2CACA,sDACA,qDAGIJ,EAAYX,YAAYC,GAASA,EAAMU,WACvCD,EAASV,YAAYC,GAASA,EAAMS,SACpC,QAAEuD,EAAO,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,gBAAEC,GAAoBxB,EAAYyB,QAAQC,KAAKzB,GAChG0B,EAAcC,YAAiB,CAAE5B,cAAaC,cAC9C4B,EAASC,YAAgB,CAAE9B,gBAC3B+B,EAAY/B,EAAYyB,QAAQM,UAEhCC,KAAW9B,EAAUE,UAAWF,EAAUtC,QAiBhD,OAfAgB,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAEZ,CAACR,IAEJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IAEG,CACLP,YACAC,eACAG,eACAC,kBACA7B,UACAC,aACA8B,UACAC,aACAC,SACAC,YACAC,aACAC,gBACAC,cACAC,iBACAC,YACAC,eACArD,YACAsD,UACAC,YACAC,SACAC,YACAC,WACAC,kBACAG,cACAE,SACAG,WACApE,SACAmE,cAKSE,EAAmBC,IAAmB,IAADC,EAAAC,EAAA,IAAjB,SAAEnF,GAAUiF,EAC3C,MAEM5E,EAAkBJ,YAAYC,GAASA,EAAMG,iBAC7CC,EAAkBL,YAAYC,GAASA,EAAMkF,wBAC7C5E,EAAgBP,YAAaC,GAAUA,EAAMC,KAAKK,eAClD6E,EAAwBpF,YAAYC,GAASA,EAAMmF,uBACnD9D,EAAStB,YAAYC,GAASA,EAAMqB,QACpC+D,EAAoBrF,YAAYC,GAASA,EAAMoF,mBAC/CC,EAAetF,YAAYC,GAASA,EAAMqF,cAC1C5E,EAASV,YAAaC,GAAUA,EAAMS,QACtCC,EAAYX,YAAaC,GAAUA,EAAMU,WACzC4E,EAAyBvF,YAAaC,GAAUA,EAAMsF,wBACtDC,EAAkBxF,YAAYC,GAASA,EAAMuF,kBAE5C3E,EAASC,GAAcC,mBAAS,OAChCC,EAAgBC,GAAqBF,sBACrC0E,EAAiBC,GAAsB3E,mBAAS,IAChDG,EAAQC,GAAaJ,mBAAS,KAC9BK,EAAMC,GAAWN,sBACjB4E,EAAaC,GAAkB7E,sBAC/BS,EAASC,GAAcV,qBAExB8E,EAAiBC,YAAiB,CAAEhD,YAAa9B,EAAgBsB,WAtBpD,kBAuBbyD,EAAQN,IAAoBI,GAAkBA,EAAiB,EAE/DG,KAAehF,IAAgC,OAAdA,QAAc,IAAdA,GAAuB,QAATiE,EAAdjE,EAAgBuD,eAAO,IAAAU,GAAM,QAANC,EAAvBD,EAAyBT,YAAI,IAAAU,OAAf,EAAdA,EAA+Be,QAAS,GAGzEC,EAA4BlG,YAAYC,GAASA,EAAMiG,2BAiD7D,OA/CAxE,oBAAU,MACRC,iBACE,MAAMC,QAAiBC,YAAiB,CAAE9B,aACpC+B,QAAiBC,YAAiB,CAAEhC,WAAUQ,kBACpDc,EAAQS,SACQO,YAAqB,CAAEtC,WAAUuC,WAnClC,gBAmC8CC,UAASgD,EAAuC3D,cACzF,OAAf4D,QAAe,IAAfA,OAAe,EAAfA,EAAiBS,SACpBE,YAAe,CAAEpG,aAEnB2F,EAAmBG,GAErBrD,IACC,IAEHd,oBAAU0E,KACE,OAAN9E,QAAM,IAANA,OAAM,EAANA,EAAQ+E,SAA0B,OAAjBhB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBgB,SAAe,OAAN/E,QAAM,IAANA,OAAM,EAANA,EAAQ+E,UAA2B,OAAjBhB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBgB,OAAOT,GAAe,GACvGA,GAAe,IACnB,CAACtE,EAAQ+D,EAAmBU,IAE/BrE,oBAAU,KACRT,IACAH,KACC,CAACQ,EAAQ+D,IAEZ3D,oBAAU0E,IACR,GAAIF,EAA2B,EACG,OAAN5E,QAAM,IAANA,OAAM,EAANA,EAAQ+E,SAA0B,OAAjBhB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBgB,SAAe,OAAN/E,QAAM,IAANA,OAAM,EAANA,EAAQ+E,UAA2B,OAAjBhB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBgB,SAE1GvF,IACAwF,YAAoB,CAClBhE,WA5DW,gBA6DX4D,4BACAnG,WACAwG,KAAMrF,EACNX,gBACAe,SACA+D,oBACAmB,UAAW1F,EACX2F,OAAQzF,IAEVG,EAAUD,IAGTgF,GAA2BpF,KAC/B,CAACoF,IAGG,CACL5D,WA9EiB,gBA+EjBlC,kBACAC,kBACAE,gBACA6E,wBACA9D,SACA+D,oBACAC,eACA5E,SACAC,YACA4E,yBACA1E,UACAC,aACAE,iBACAC,oBACAwE,kBACAC,qBACAxE,SACAC,YACAC,OAAMC,UACNsE,cAAaC,iBACbpE,UACAC,aACAoE,iBACAE,QACAC,eACAE,8BAKSQ,EAAwBC,IAAiC,IAAhC,YAAE7D,EAAW,UAAEC,GAAW4D,EAC9D,MAAMhG,EAAYX,YAAYC,GAASA,EAAMU,WACvCD,EAASV,YAAYC,GAASA,EAAMS,QACpC4E,EAAetF,YAAYC,GAASA,EAAMqF,eAC1C,QAAErB,EAAO,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,gBAAEC,GAAoBxB,EAAYyB,QAAQC,KAAKzB,GAChG0B,EAAcC,YAAiB,CAAE5B,cAAaC,cAC9C4B,EAASC,YAAgB,CAAE9B,iBAC1BE,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,QAC/D3B,EAASC,GAAcV,oBAAS,IAChCwC,EAASC,GAAczC,sBACvB0C,EAAQC,GAAa3C,sBACrB4C,EAAYC,GAAiB7C,oBAAS,IACtC8C,EAAaC,GAAkB/C,oBAAS,IACxCgD,EAAWC,GAAgBjD,mBAAS,CACzC,yCACA,oDACA,mDAGFW,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAGZ,CAACR,IAEJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IACJ,MAAMuB,KAAW9B,EAAUE,UAAWF,EAAUtC,QAEhD,MAAO,CACLsC,YACAC,eACAG,eACAC,kBACA7B,UACAC,aACA8B,UACAC,aACAC,SACAC,YACAC,aACAC,gBACAC,cACAC,iBACAC,YACAC,eACArD,YACAsD,UACAC,YACAC,SACAC,YACAC,WACAC,kBACAG,cACAE,SACAG,WACAQ,eACA5E,WAoFSkG,EAAwBC,IAAiC,IAAhC,YAAE/D,EAAW,UAAEC,GAAW8D,EAC9D,MAAMnG,EAASV,YAAaC,GAAUA,EAAMS,QACtCC,EAAYX,YAAYC,GAASA,EAAMU,WACvC2E,EAAetF,YAAYC,GAASA,EAAMqF,eAC1C,QAAErB,EAAO,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,gBAAEC,GAAoBxB,EAAYyB,QAAQC,KAAKzB,GAChG0B,EAAcC,YAAiB,CAAE5B,cAAaC,cAC9C4B,EAASC,YAAgB,CAAE9B,iBAC1BE,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,QAC/D3B,EAASC,GAAcV,oBAAS,IAChCwC,EAASC,GAAczC,sBACvB0C,EAAQC,GAAa3C,sBACrB4C,EAAYC,GAAiB7C,oBAAS,IACtC8C,EAAaC,GAAkB/C,oBAAS,IACxCgD,EAAWC,GAAgBjD,mBAAS,CACzC,+CACA,0DACA,yDAGFW,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAGZ,CAACR,IAEJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IACJ,MAAMuB,KAAW9B,EAAUE,UAAWF,EAAUtC,QAEhD,MAAO,CACLsC,YACAC,eACAG,eACAC,kBACA7B,UACAC,aACA8B,UACAC,aACAC,SACAC,YACAC,aACAC,gBACAC,cACAC,iBACAC,YACAC,eACArD,YACAsD,UACAC,YACAC,SACAC,YACAC,WACAC,kBACAG,cACAE,SACAG,WACAQ,eACA5E,WAMSoG,EAAWC,IAAmB,IAAlB,SAAEhH,GAAUgH,EACnC,MAEM3G,EAAkBJ,YAAYC,GAASA,EAAMG,iBAC7CC,EAAkBL,YAAYC,GAASA,EAAM+G,gBAC7CzG,EAAgBP,YAAaC,GAAUA,EAAMC,KAAKK,eAClDG,EAASV,YAAaC,GAAUA,EAAMS,QACtCC,EAAYX,YAAaC,GAAUA,EAAMU,WACzCsG,EAAiBjH,YAAaC,GAAUA,EAAMgH,iBAE7C3F,EAAQC,GAAaR,sBACrBF,EAASC,GAAcC,mBAAS,OAChCC,EAAgBC,GAAqBF,sBACrC0E,EAAiBC,GAAsB3E,mBAAS,IAChDG,EAAQC,GAAaJ,sBACrBS,EAASC,GAAcV,qBAExB8E,EAAiBC,YAAiB,CAAEhD,YAAa9B,EAAgBsB,WAhBpD,UA6BnB,OAXAZ,oBAAU,MACRC,iBACE,MAAMC,QAAiBC,YAAiB,CAAE9B,mBAC1BgC,YAAiB,CAAEhC,WAAUQ,wBACxB2G,YAAsB,CAAE3G,gBAAegB,oBAC5Cc,YAAqB,CAAEtC,WAAUuC,WAvBlC,QAuB8CC,UAAS0E,EAA+BrF,aACrG8D,EAAmBG,GAErBrD,IACC,IAEI,CACLF,WA9BiB,QA+BjBlC,kBACAC,kBACAE,gBACAG,SACAC,YACAsG,iBACA3F,SACAC,YACAV,UACAC,aACAE,iBACAC,oBACAwE,kBACAC,qBACAxE,SACAC,YACAK,UACAC,aACAoE,mBAKSsB,EAAgBC,IAAiC,IAAhC,YAAEtE,EAAW,UAAEC,GAAWqE,EACtD,MAAMzG,EAAYX,YAAYC,GAASA,EAAMU,WACvCD,EAASV,YAAYC,GAASA,EAAMS,SACnCsC,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,QAC/D3B,EAASC,GAAcV,oBAAS,IAChCwC,EAASC,GAAczC,sBACvB0C,EAAQC,GAAa3C,sBACrB4C,EAAYC,GAAiB7C,oBAAS,IACtC8C,EAAaC,GAAkB/C,oBAAS,IACxCgD,EAAWC,GAAgBjD,mBAAS,CACzC,sCACA,iDACA,iDAGI,QAAEkD,EAAO,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,gBAAEC,GAAoBxB,EAAYyB,QAAQC,KAAKzB,GAChG0B,EAAcC,YAAiB,CAAE5B,cAAaC,cAC9C4B,EAASC,YAAgB,CAAE9B,gBAC3BgC,KAAW9B,EAAUE,UAAWF,EAAUtC,QAmBhD,OAjBAgB,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAGZ,CAACR,IAEJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IAGG,CACLP,YACAC,eACAG,eACAC,kBACA7B,UACAC,aACA8B,UACAC,aACAC,SACAC,YACAC,aACAC,gBACAC,cACAC,iBACAC,YACAC,eACArD,YACAsD,UACAC,YACAC,SACAC,YACAC,WACAC,kBACAG,cACAE,SACAG,WACApE,WAKS2G,EAAwBC,IAAmB,IAAlB,SAAEvH,GAAUuH,EAChD,MAEMlH,EAAkBJ,YAAYC,GAASA,EAAMG,iBAC7CC,EAAkBL,YAAYC,GAASA,EAAMsH,mBAC7ChH,EAAgBP,YAAaC,GAAUA,EAAMC,KAAKK,eAClDG,EAASV,YAAaC,GAAUA,EAAMS,QACtCC,EAAYX,YAAaC,GAAUA,EAAMU,WACzC6G,EAAoBxH,YAAaC,GAAUA,EAAMuH,mBACjDC,EAAgBzH,YAAYC,GAASA,EAAMwH,eAC3CC,EAAiB1H,YAAYC,GAASA,EAAMyH,iBAE3C7G,EAASC,GAAcC,mBAAS,OAChCC,EAAgBC,GAAqBF,sBACrC0E,EAAiBC,GAAsB3E,mBAAS,IAChD4G,EAAMC,GAAW7G,oBAAS,IAC1BK,EAAMC,GAAWN,sBACjBO,EAAQC,GAAaR,sBACrBG,EAAQC,GAAaJ,sBACrBS,EAASC,GAAcV,qBAExB8E,EAAiBC,YAAiB,CAAEhD,YAAa9B,EAAgBsB,WApBpD,aAqBbyD,EAAQN,IAAoBI,GAAkBA,EAAiB,EAkBrE,OAhBAnE,oBAAU,MACRC,uBACyBE,YAAiB,CAAE9B,aAA1C,MACM+B,QAAiBC,YAAiB,CAAEhC,WAAUQ,kBACpDc,EAAQS,SACQO,YAAqB,CAAEtC,WAAUuC,WA5BlC,WA4B8CC,UAASiF,IACtE9B,EAAmBG,GAErBrD,IACC,IAEHd,oBAAU,KACRT,IACAH,KACC,CAACQ,IAEG,CACLgB,WAxCiB,WAyCjBlC,kBACAC,kBACAE,gBACAG,SACAC,YACA6G,oBACAC,gBACAC,iBACA7G,UACAC,aACAE,iBACAC,oBACAwE,kBACAC,qBACAiC,OACAC,UACAxG,OACAC,UACAC,SACAC,YACAL,SACAC,YACAK,UACAC,aACAoE,iBACAE,UAKS8B,EAA6BC,IAAiC,IAAhC,YAAEhF,EAAW,UAAEC,GAAW+E,EACnE,MAAMnH,EAAYX,YAAYC,GAASA,EAAMU,WACvCD,EAASV,YAAYC,GAASA,EAAMS,SACpC,QAAEuD,EAAO,UAAEC,EAAS,OAAEC,EAAM,iBAAE4D,EAAgB,SAAE1D,EAAQ,gBAAEC,GAAoBxB,EAAYyB,QAAQC,KAAKzB,IACtGC,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,QAC/D3B,EAASC,GAAcV,oBAAS,IAChCwC,EAASC,GAAczC,sBACvB0C,EAAQC,GAAa3C,sBACrB4C,EAAYC,GAAiB7C,oBAAS,IACtC8C,EAAaC,GAAkB/C,oBAAS,IACxCgD,EAAWC,GAAgBjD,mBAAS,CACzC,oDACA,kDACA,iDAGI0D,EAAcC,YAAiB,CAAE5B,cAAaC,cAC9C4B,EAASC,YAAgB,CAAE9B,gBAC3BgC,KAAW9B,EAAUE,UAAWF,EAAUtC,QAkBhD,OAhBAgB,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAGZ,CAACR,IAEJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IAEG,CACLP,YACAC,eACAG,eACAC,kBACA7B,UACAC,aACA8B,UACAC,aACAC,SACAC,YACAC,aACAC,gBACAC,cACAC,iBACAC,YACAC,eACArD,YACAsD,UACAC,YACAC,SACAE,WACAC,kBACAG,cACAE,SACAG,WACAiD,mBACArH,WAKSsH,EAAeC,IAAmB,IAAlB,SAAElI,GAAUkI,EACvC,MAEM7H,EAAkBJ,YAAYC,GAASA,EAAMG,iBAC7CC,EAAkBL,YAAYC,GAASA,EAAMiI,iBAC7C3H,EAAgBP,YAAaC,GAAUA,EAAMC,KAAKK,eAClDG,EAASV,YAAaC,GAAUA,EAAMS,QACtCC,EAAYX,YAAaC,GAAUA,EAAMU,WACzCwH,EAAkBnI,YAAaC,GAAUA,EAAMkI,iBAC/CV,EAAgBzH,YAAYC,GAASA,EAAMwH,eAC3CW,EAAepI,YAAYC,GAASA,EAAMmI,eAEzCvH,EAASC,GAAcC,mBAAS,OAChCC,EAAgBC,GAAqBF,sBACrC0E,EAAiBC,GAAsB3E,mBAAS,IAChDG,EAAQC,GAAaJ,mBAAS,KAC9BK,EAAMC,GAAWN,sBACjBO,EAAQC,GAAaR,sBACrBsH,EAAmBC,GAAwBvH,sBAC3CS,EAASC,GAAcV,qBAExB8E,EAAiBC,YAAiB,CAAEhD,YAAa9B,EAAgBsB,WApBpD,WAqBbyD,EAAQN,IAAoBI,GAAkBA,EAAiB,EA2CrE,OArCAnE,oBAAU,MACRC,iBACE,MAAMC,QAAiBC,YAAiB,CAAE9B,aACpC+B,QAAiBC,YAAiB,CAAEhC,WAAUQ,kBACpDc,EAAQS,GACR,MAAMyG,EAAc,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAOb,GAAuB,eAAfA,EAAKgB,OACpCoG,EAAe,OAAR1G,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAOb,GAAuB,YAAfA,EAAKgB,QACpC,OAAHmG,QAAG,IAAHA,OAAG,EAAHA,EAAKtC,SAAQ1E,EAAUgH,EAAI,KACvB,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMvC,SAAQqC,EAAqBE,EAAK,UAC5BnG,YAAqB,CAAEtC,WAAUuC,WApClC,SAoC8CC,UAAS4F,EAAgCvG,aACtG8D,EAAmBG,GAErBrD,IACC,IACHd,oBAAU,KACRT,IACAH,KACC,CAACQ,IAEJI,oBAAU0E,IACJgC,IACFtH,IACIQ,GAAQgF,YAAoB,CAC9BhE,WAlDa,SAmDb8F,eACArI,WACAwG,KAAM,GACNhG,gBACAe,SACA+D,kBAAmBgD,EACnB7B,UAAW1F,EACX2F,OAAQzF,KAGPoH,GAActH,KAClB,CAACsH,EAAc9G,IAEX,CACLgB,WAjEiB,SAkEjBlC,kBACAC,kBACAE,gBACAG,SACAC,YACAwH,kBACAV,gBACA5G,UACAC,aACAE,iBACAC,oBACAwE,kBACAC,qBACAxE,SACAC,YACAC,OACAC,UACAC,SACAC,YACA8G,oBACAC,uBACA9G,UACAC,aACAoE,iBACAE,QACAqC,eACAK,gBArEuBpC,IACvBtG,EAAS,CAAE2I,KAAMC,IAAYP,aAAc/B,OAyElCuC,EAAoBC,IAAiC,IAAhC,YAAE/F,EAAW,UAAEC,GAAW8F,EAC1D,MAAMlI,EAAYX,YAAYC,GAASA,EAAMU,WACvCD,EAASV,YAAYC,GAASA,EAAMS,SACnCoI,EAAkBC,GAAuBhI,sBACzCiC,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,QAC/D3B,EAASC,GAAcV,oBAAS,IAChCwC,EAASC,GAAczC,sBACvB0C,EAAQC,GAAa3C,sBACrB4C,EAAYC,GAAiB7C,oBAAS,IACtC8C,EAAaC,GAAkB/C,oBAAS,IACxCgD,EAAWC,GAAgBjD,mBAAS,CACzC,0CACA,qDACA,qDAIKiI,EAAWC,GAAgBlI,mBAAS,IAErC,QAAEkD,EAAO,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,gBAAEC,GAAoBxB,EAAYyB,QAAQC,KAAKzB,GAChG0B,EAAcC,YAAiB,CAAE5B,cAAaC,cAC9CmG,EAAYC,YAAe,CAAErG,cAAaC,cAC1C4B,EAASC,YAAgB,CAAE9B,gBAC3BgC,KAAW9B,EAAUE,UAAWF,EAAUtC,QAiBhD,OAfAgB,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAGZ,CAACR,IACJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IAEG,CACL5C,YACAmI,mBACAC,sBACA/F,YACAC,eACAG,eACAC,kBACA7B,UACAC,aACA8B,UACAC,aACAC,SACAC,YACAC,aACAC,gBACAC,cACAC,iBACAC,YACAC,eACAM,kBACAG,cACAE,SACAG,WACAb,UACAC,YACAC,SACAC,YACAC,WACA6E,YACAxI,SACAsI,YACAC,iBAKSG,EAAgBC,IAAkL,IAAjL,SAAEC,EAAQ,SAAEvJ,EAAQ,kBAAEkB,EAAiB,WAAEH,EAAU,UAAEK,EAAS,oBAAEmF,EAAmB,OAAEpF,EAAM,cAAEX,EAAa,OAAEe,EAAM,eAAEN,EAAc,WAAEsB,EAAU,0BAAE4D,GAA2BmD,EAGvM,MAAO5F,EAAQC,GAAa3C,sBACrBqC,EAAcC,GAAmBtC,mBAAS,CAAEuC,MAAM,EAAOH,KAAM,YAC/DH,EAAWC,GAAgBlC,mBAAS,CAAEmC,SAAS,EAAOC,KAAM,QAC5DI,EAASC,GAAczC,sBAGvBwI,EAAUC,GAAezI,sBACzB0I,EAAgBC,GAAqB3I,sBACrC4I,EAAaC,GAAkB7I,sBAI/B8I,EAASC,GAAc/I,qBAE9BW,oBAAU,KACiB,MAArBsB,EAAUtC,QACZ8C,GAAW,GACXH,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,QAEtB,MAArBH,EAAUtC,SACjB2C,EAAgB,CAAEC,MAAM,EAAOH,KAAMC,EAAaD,OAClDK,GAAW,KAGZ,CAACR,IAEJtB,oBAAU,KACH6B,GAASN,EAAa,CAAEC,SAAS,EAAOC,KAAM,QAClD,CAACI,IACJ,MAAMuB,KAAW9B,EAAUE,UAAWF,EAAUtC,QA6BhD,MAAO,CAAEiJ,cAAaC,iBAAgBG,WAxBnBA,CAACC,EAAOC,EAAQ3H,KACjCrB,IACAH,IACe,YAAXI,IAEJnB,EAAS,CAAE2I,KAAMC,IAAYhI,WAAW,IACxCuJ,WAAW,KACT5D,EAAoB,CAClBgD,WACAhH,aACA4D,0BAA2B+D,EAC3B9J,aAAc6J,EACdG,YAAY,EACZpK,WACAwG,KAAMrF,EACNX,gBACAe,SACAkF,UAAW1F,EACX2F,OAAQzF,GAERG,EAAUD,KACX,MAG6CuC,SAAQC,YAAWN,eAAcC,kBAAiBL,YAAWC,eAAcM,UAASC,aAAY+F,WAAUC,cAAaC,iBAAgBC,oBAAmB5E,WAAU+E,UAASC,eAIpNM,EAAaA,KACxB,MAAOC,EAAaC,GAAkBvJ,sBAC/BwJ,EAAaC,GAAkBzJ,qBACtC,MAAO,CAAEsJ,cAAaC,iBAAgBC,cAAaC,mBAGxCC,EAAkBC,IAAuD,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAArD,YAAEhI,EAAW,UAAEC,EAAS,SAAEhD,EAAQ,WAAEuC,GAAYoI,EACxD1K,YAAYC,GAASA,EAAM8K,eAAjD,MACMC,EAAWhL,YAAYC,GAASA,EAAM+K,WAErCC,EAAMC,GAAWnK,sBAElB,UAAEqD,GAAyB,OAAXtB,QAAW,IAAXA,GAAoB,QAAT6H,EAAX7H,EAAayB,eAAO,IAAAoG,OAAT,EAAXA,EAAsBnG,KAAKzB,GAC3CoI,GAAqB,OAAXrI,QAAW,IAAXA,GAAoB,QAAT8H,EAAX9H,EAAayB,eAAO,IAAAqG,GAAiB,QAAjBC,EAApBD,EAAsBpG,KAAKzB,UAAU,IAAA8H,GAAW,QAAXC,EAArCD,EAAuC1G,OAAO,UAAE,IAAA2G,OAArC,EAAXA,EAAkDC,gBAAiB,GAC7EK,EAAQC,YAAmBF,EAAS/G,EAAWrB,EAAWD,EAAamI,IAEtEvL,EAAkB4L,GAAuBvK,oBAAS,GAEnDwK,EAAsBC,YAAsB1I,GAclD,OATApB,oBAAU0E,IACRqC,YAAgB,CAAE3F,cAAa/C,cAC9B,IAEH2B,oBAAU0E,IAAM,IAADqF,EAAAC,GACH,OAALN,QAAK,IAALA,GAAW,QAANK,EAALL,EAAOlJ,YAAI,IAAAuJ,OAAN,EAALA,EAAaxF,UAAe,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,SAAQqF,GAAoB,IACtD,OAALF,QAAK,IAALA,GAAW,QAANM,EAALN,EAAOlJ,YAAI,IAAAwJ,OAAN,EAALA,EAAazF,SAAQqF,GAAoB,IAC5C,CAACF,IAEG,CAAE1L,mBAAkB0L,QAAOH,OAAMC,UAASF,WAAUO,wBAIhDI,EAAoBC,IAAuD,IAADC,EAAA,IAArD,YAAE/I,EAAW,UAAEC,EAAS,SAAEhD,EAAQ,WAAEuC,GAAYsJ,EAChF,MAAMb,EAA6D,QAAhDc,EAAG/I,EAAYyB,QAAQC,KAAKzB,GAAWoB,OAAO,UAAE,IAAA0H,OAAA,EAA7CA,EAA+CC,gBAC/Dd,EAAWhL,YAAYC,GAASA,EAAM+K,UACtC9E,EAA4BlG,YAAYC,GAASA,EAAMiG,4BAEtD+E,EAAMC,GAAWnK,sBAElB,UAAEqD,GAActB,EAAYyB,QAAQC,KAAKzB,GACzCqI,EAAQC,YAAmBN,EAAe3G,EAAWrB,EAAWD,EAAamI,GAAM,IAElFvL,EAAkB4L,GAAuBvK,oBAAS,GAOzD,OALAW,oBAAU0E,IAAM,IAAD2F,EAAAC,GACH,OAALZ,QAAK,IAALA,GAAW,QAANW,EAALX,EAAOlJ,YAAI,IAAA6J,OAAN,EAALA,EAAa9F,UAAe,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,SAAQqF,GAAoB,IACtD,OAALF,QAAK,IAALA,GAAW,QAANY,EAALZ,EAAOlJ,YAAI,IAAA8J,OAAN,EAALA,EAAa/F,SAAQqF,GAAoB,IAC5C,CAACF,IAEG,CAAE1L,mBAAkB0L,QAAOH,OAAMC,UAASF,WAAU9E,8BAkBtD,SAAS+F,EAAUC,GAAiC,IAAhC,WAAEC,EAAU,QAAEC,EAAO,KAAE9I,GAAM4I,EACtDxK,oBAAU,KAER,SAAS2K,EAAmBC,GACtBhJ,GAAQ6I,EAAWI,UAAYJ,EAAWI,QAAQC,SAASF,EAAMG,SACnEL,GAAS9I,GAGPA,GAAQ6I,EAAWI,SAA8B,KAAd,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOI,UACvCN,GAAS9I,GAOb,OAFArE,SAAS0N,iBAAiB,YAAaN,GACvCpN,SAAS0N,iBAAiB,UAAWN,GAC9B,KAELpN,SAAS2N,oBAAoB,YAAaP,GAC1CpN,SAAS0N,iBAAiB,UAAWN,KAEtC,CAACF,EAAY7I,M,oBC3kClBmD,EAAOoG,QAAU,IAA0B,8C,iCCA3C,wLAQO,MAAMC,EAAYnL,UAUI,IAVG,IAC5BoL,EAAG,QACHC,EAAO,SACPjN,EAAQ,kBACRkB,EAAiB,WACjBqB,EAAU,cACV2K,EAAa,YACbnK,EAAW,cACXvC,EAAa,OACbe,EAAM,kBACN+G,GAAmBvI,EACnB,IAAK,IAAD6K,EACA,IAAIuC,EAAmB,IAAID,GAC3BC,EAAiBH,GAAKC,QAAUA,EAChCjN,EAAS,CAAE2I,KAAMyE,IAAuB,CAAC,GAADC,OAAI9K,EAAU,gBAAgB4K,IAEtE,MAAMG,EAA+B,OAAhBH,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBjL,OAAOqL,IAC1C,GAAIA,EAAMN,QAAS,OAAOM,IAE9B,IAAIC,EAAa,GACbzK,GACAA,EAAYyB,QAAQC,KAAKgJ,IAAItL,IACzB,MAAMuL,EAAS,CAAC5K,IAAA,IAAC,QAAE6K,GAAS7K,EAAA,MAAM,CAAE6K,YAArB,CAAiCxL,GAC5CuL,EAAOC,SACPH,EAAWI,KAAKF,EAAOC,WAInC,IAAIE,EAAM,GACV,MAAMC,EAAIR,EAAaG,IAAI7L,MAAO6C,EAAMsJ,KAEpC,IADkBP,EAAWQ,SAASvJ,EAAKkJ,SAC3B,CACZ,MAAMM,QAAcC,YAAkB,CAAEC,MAAO1J,EAAKkJ,UACpDlJ,EAAgB,UAAIwJ,EACpB,MAAM9L,QAAaiM,YAAe,CAAED,MAAO1J,EAAKkJ,QAASU,YAAa7N,EAAe8N,IAAK7J,EAAKF,kBAC/F,GAAIpC,EAAM,CACN,MAAMoM,EAAY,CACd,CACIC,SAAU,GACVC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,YAAa,KACbjB,QAASlJ,EAAKkJ,QACdW,IAAK7J,EAAKF,gBACVsK,SAAUpK,EAAKoK,SACftF,SAAU9E,EAAK8E,SACfuF,cAAeC,OAAOC,UAAc,OAAJ7M,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKuC,aAAeuK,SAAa,OAAJ9M,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKuC,aAAewK,WAAe,OAAJ/M,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKuC,aACnHsG,cAAmB,OAAJ7I,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK6I,gBAGlCvG,EAAa,OAAI8J,EACjBV,EAAID,KAAKnJ,aAKJ0K,QAAQC,IAAItB,GAC7B,IAAIuB,EAAQ,GACRtM,IACAsM,EAAQtM,EAAYyB,QAAQC,KAAK4I,OAAOQ,IAEvC9K,IAAasM,EAAQxB,GAE1B,MAAMyB,EAAenC,EAAiBH,GACjCsC,EAAarC,UACdoC,EAAQA,EAAMnN,OAAOC,GAAiBA,EAAKwL,UAAY2B,EAAa3B,UAGxE,MAAM4B,EAAgB,OAAXxM,QAAW,IAAXA,GAAoB,QAAT6H,EAAX7H,EAAayB,eAAO,IAAAoG,OAAT,EAAXA,EAAsB2E,GAC3BC,EAAW,CACbhL,QAAS,CACL+K,GAAIA,GAAU,EACdE,gBAAiBjP,EACjBkP,qBAAsBlP,EACtBmP,WAAYV,SAAe,OAAN1N,QAAM,IAANA,OAAM,EAANA,EAAQ+E,OAC7BsJ,SAAgB,OAANrO,QAAM,IAANA,OAAM,EAANA,EAAQc,MAClBwN,gBAAiBZ,SAA0B,OAAjB3G,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBhC,OAC7CwJ,oBAAsC,OAAjBxH,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBjG,MACxCoC,KAAM4K,EAAMU,MAAK,SAAUjC,EAAGkC,GAAK,OAAOC,YAAgBnC,EAAGkC,QAGhD,IAAjBX,EAAMnJ,QAAclG,EAAS,CAAE2I,KAAMuH,IAAkB,CAAC,GAAD7C,OAAI9K,EAAU,cAAc,OACvFrB,EAAkBsO,GAEtB,MAAO9M,GACHC,QAAQC,IAAIF,KAKPyN,EAAYvO,UASA,IATO,IAC5BoL,EAAG,QACHC,EAAO,SACPjN,EAAQ,WACRuC,EAAU,cACV2K,EAAa,YACbnK,EAAW,cACXvC,EAAa,OACbe,EAAM,cACN6O,GAAenL,EACf,IACI,IAAIkI,EAAmB,IAAID,GAC3BC,EAAiBH,GAAKC,QAAUA,EAEhC,MAAMK,EAA+B,OAAhBH,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBjL,OAAOqL,IAC1C,GAAIA,EAAMN,QAAS,OAAOM,IAE9B,IAAIC,EAAa,GACbzK,GACAA,EAAY0K,IAAItL,IACZ,MAAMuL,EAAS,CAAC9G,IAAA,IAAC,QAAE+G,GAAS/G,EAAA,MAAM,CAAE+G,YAArB,CAAiCxL,GAC5CuL,EAAOC,SACPH,EAAWI,KAAKF,EAAOC,WAInC,IAAIE,EAAM,GACV,MAAMC,EAAIR,EAAaG,IAAI7L,MAAO6C,EAAMsJ,KAEpC,IADkBP,EAAWQ,SAASvJ,EAAKkJ,SAC3B,CACZ,MAAMM,QAAcC,YAAkB,CAAEC,MAAO1J,EAAKkJ,UACpDlJ,EAAgB,UAAIwJ,EACpB,MAAM9L,QAAaiM,YAAe,CAAED,MAAO1J,EAAKkJ,QAASU,YAAa7N,EAAe8N,IAAK7J,EAAKF,kBAC/F,GAAIpC,EAAM,CACN,MAAMoM,EAAY,CACd,CACIC,SAAU,GACVC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,YAAa,KACbjB,QAASlJ,EAAKkJ,QACdW,IAAK7J,EAAKF,gBACVsK,SAAUpK,EAAKoK,SACftF,SAAU9E,EAAK8E,SACfuF,cAAeuB,YAAY,OAAJlO,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKuC,aAAe2L,YAAY,OAAJlO,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKuC,aAAmB,OAAJvC,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKuC,YAC9FsG,cAAmB,OAAJ7I,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK6I,gBAGlCvG,EAAa,OAAI8J,EACjB9J,EAAK6L,WAAY,EACjBzC,EAAID,KAAKnJ,aAKJ0K,QAAQC,IAAItB,GAC7B,IAAIuB,EAAQ,GACRtM,IACAsM,EAAQtM,EAAYsK,OAAOQ,IAE1B9K,IAAasM,EAAQxB,GAE1B,MAAMyB,EAAenC,EAAiBH,GACjCsC,EAAarC,UACdoC,EAAQA,EAAMnN,OAAOC,GAAiBA,EAAKwL,UAAY2B,EAAa3B,UAExEyC,EAAcf,GAElB,MAAO3M,GACHC,QAAQC,IAAIF,KAKP6N,EAAmBC,IAA+G,IAA9G,aAAEC,EAAY,YAAE1N,EAAW,WAAER,EAAU,gBAAEe,EAAe,SAAEtD,EAAQ,cAAE6D,EAAa,oBAAEmF,GAAqBwH,EACjIE,EAAU,GACVC,EAAK,IAAK5N,GACVgG,EAAmB,GACvB,MAAM6H,EAAM7N,EAAYyB,QAAQC,KAAKgJ,IAAItL,IACrC,IAAI0O,EAAc1O,EAAK2O,YA8DvB,OA7DA3O,EAAKiC,OAAOqJ,IAAIsD,IACZ,MAAMC,EAAWC,YAAyB,CAAEC,WAAYH,EAAGvC,YACrD,SAAEK,EAAQ,cAAE7D,GAAkB+F,EACC,OAAb/F,QAAa,IAAbA,KAAe9E,OAwDvC,OAvDA6K,EAAGvC,SAASf,IAAI0D,IACZ,MAAM,IAAEC,EAAG,MAAEnD,EAAK,KAAEoD,EAAI,KAAEC,GAASH,EAS7B,IAADI,EAAAC,EAPL,GAAY,GAAPJ,IAAYK,MAAML,IAA0B,QAAZ,OAALnD,QAAK,IAALA,OAAK,EAALA,EAAO3H,OAQnC,GAA2B,WAAnB,OAAJ6K,QAAI,IAAJA,GAAW,QAAPI,EAAJJ,EAAMlD,aAAK,IAAAsD,OAAP,EAAJA,EAAalP,QAA4C,gBAAnB,OAAJ8O,QAAI,IAAJA,GAAW,QAAPK,EAAJL,EAAMlD,aAAK,IAAAuD,OAAP,EAAJA,EAAanP,OAC/CoP,MAAML,IAAe,GAAPA,GAAoB,KAARA,GAAsB,OAARA,EAAeD,EAAKO,YAAa,EAAOP,EAAKO,YAAa,GAC5F,OAALzD,QAAK,IAALA,OAAK,EAALA,EAAO3H,OAAmC6K,EAAKQ,cAAe,EAA/CR,EAAKQ,cAAe,EACnB,WAAZ,OAAL1D,QAAK,IAALA,OAAK,EAALA,EAAO5L,QAAsBiP,EAAiCH,EAAKS,aAAc,EAA7CT,EAAKS,aAAc,MAEtD,CACD,IACIC,EADM1P,EAAKkC,UAAUnC,OAAO4P,GAAOA,EAAIxL,QAAU2H,EAAM3H,OAC3C,GAAGyL,WACfC,EAA+C,SAAnB,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,eAA0BpD,EAAW,IAAOA,EAC1EqD,EAAcd,EAAMC,EACxBa,GAA6BF,EAAiBH,EAC9CK,GAA6BF,EAAiBH,EAC9CK,GAA4B,IACxBA,GAAe,IAAMA,IAAgB,IACrCf,EAAKgB,sBAAuB,EAC5BpJ,EAAiB6E,MAAK,KAGtBuD,EAAKgB,sBAAuB,EAC5BpJ,EAAiB6E,MAAK,IAE1BuD,EAAKiB,cAAgB/B,YAAQ6B,GAC7BT,MAAML,IAAe,GAAPA,GAAoB,KAARA,GAAsB,OAARA,EAAeD,EAAKO,YAAa,EAAOP,EAAKO,YAAa,EAClGD,MAAMJ,IAAiB,GAARA,GAAsB,KAATA,GAAwB,OAATA,EAAgBF,EAAKkB,aAAc,EAAOlB,EAAKkB,aAAc,GAClG,OAALpE,QAAK,IAALA,OAAK,EAALA,EAAO3H,OAAmC6K,EAAKQ,cAAe,EAA/CR,EAAKQ,cAAe,EACnB,WAAZ,OAAL1D,QAAK,IAALA,OAAK,EAALA,EAAO5L,QAAsBiP,EAAiCH,EAAKS,aAAc,EAA7CT,EAAKS,aAAc,OAhC3DT,EAAKO,YAAa,EAClBP,EAAKQ,cAAe,EACpBR,EAAKS,aAAc,EACnBT,EAAKkB,aAAc,EACnBlB,EAAKgB,sBAAuB,EA6ChC,OAVKhB,EAAKO,aACF3C,OAAOiC,GAAYjC,OAAOgC,EAAGjC,eAC7BqC,EAAKO,YAAa,EAEjBP,EAAKO,YAAa,IAGnB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAAkB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,eAAgBR,EAAKkB,cAAmB,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMS,eAAmB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,uBAA2B,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,aAAa7B,EAAQ9C,MAAK,GAC/I8C,EAAQ9C,MAAK,GAEXuD,IAEJJ,IAEJ5O,IAKX,IAAIqQ,GAAQ,EA0BZ,GAzBA5B,EAAInD,IAAItL,IACJA,EAAKiC,OAAOqJ,IAAIsD,IACZA,EAAGvC,SAASf,IAAI0D,IACRA,EAAKC,MAAKoB,GAAQ,SAKlC7B,EAAGnM,QAAQC,KAAOmM,EAClB5Q,EAAS,CAAE2I,KAAMuH,IAAkB,CAAC,GAAD7C,OAAI9K,EAAU,cAAcoO,KAC1DD,EAAQ1C,UAAS,IAAUwE,EACG,oBAAnB3O,GAA+BA,GAAc,GAG1B,oBAAnBA,GAA+BA,GAAc,GAGxDkF,EAAiBiF,UAAS,GAIU,oBAAzBhF,GAAqCA,GAAoB,GAHhC,oBAAzBA,GAAqCA,GAAoB,IAOpE0H,EAAQ1C,UAAS,IAAUwE,EAAO,CACnC,GAAIzJ,EAAiBiF,UAAS,GAAO,OACJ,oBAArB1K,GAAiCA,EAAgB,CAAEC,MAAM,EAAMH,KAAM,eAGhD,oBAArBE,GAAiCA,EAAgB,CAAEC,MAAM,EAAOH,KAAM,OAGtFqP,YAAmB,CAAEhC,eAAc1N,cAAaR,gBAGvCkJ,EAAyBkF,IAElC,IAAI+B,EAAS,GAgBb,OAfI/B,EAAGnM,QAAQC,KAAKyB,QAChByK,EAAGnM,QAAQC,KAAKgJ,IAAI,CAACkF,EAAIC,KACjBD,EAAGvO,OAAO8B,QACVyM,EAAGvO,OAAOqJ,IAAI,CAACsD,EAAI8B,KACX9B,EAAGvC,SAAStI,QACZ6K,EAAGvC,SAASf,IAAI,CAAC0D,EAAM2B,KACf3B,EAAKgB,sBACLO,EAAO9E,KAAK,CAAE1J,QAASyO,EAAGzO,QAASqL,GAAG,QAADlC,OAAUwF,EAAS,KAAAxF,OAAIyF,GAAgBC,OAAQ5B,EAAKiB,cAAelH,KAAMiG,EAAKjG,KAAMlI,UAAW4P,UAQzJF","file":"static/js/0.7d1322bc.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useSelector } from \"react-redux\";\nimport { getUnfinishedEntries, getWasteWarehouseArea, getStockTakeSummary } from \"apiServices\";\nimport { getWarehouseArea, getRipenessLevel, getWasteReason } from \"apiServices/dropdown\";\nimport { IS_LOADING } from 'apiServices/action'\nimport { jobSheetChecker, totalWeightCount, selectedSkuCheck, totalPackCount, filterTargetRepack, setTargetRepack } from 'Page/StockEntry/GeneralServices/moduleServices'\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\nimport { countThresholdIsEmpty } from '../Repacking/services';\n//dimension\nexport const useDimension = (hValue, wValue) => {\n  const dimention = document.documentElement.clientHeight\n  const width = document.documentElement.clientWidth\n  const height = dimention - (hValue ? hValue : 0)\n  const emptyItem = dimention - (hValue ? hValue : 0)\n  const isMobile = width <= 500 ? true : false\n  return { dimention, height, emptyItem, width, isMobile }\n}\n\nexport const useEntryDimention = (showTargetRepack) => {\n  const dimention = document.documentElement.clientWidth\n  let height = document.documentElement.clientHeight\n  let heightAdj = height - (showTargetRepack ? 535 : 290)\n  height = dimention <= 500 ? (showTargetRepack ? (heightAdj + 100) : heightAdj) : height\n\n  return { height, heightAdj, dimention, loading }\n}\n\n// Stock Take\nexport const useStockTake = ({ dispatch }) => {\n  const user = useSelector((state) => state.user)\n  const moduleName = 'stockTake'\n  const zeroQuantity = useSelector(state => state.zeroQuantity)\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.stockTakeFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const warehouseTypeName = useSelector((state) => state.user.warehouseTypeName);\n  const isCentral = warehouseTypeName === 'Warehouse'\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const stockTakeEntryData = useSelector((state) => state.stockTakeEntryData);\n\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const [search, setSearch] = useState()\n  const [area, setArea] = useState()\n  const [areaId, setAreaId] = useState({})\n  const [discard, setDiscard] = useState()\n\n  // use Effect\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\n      const storageList = areaList?.filter(data => data.typeId === 1)\n      if (warehouseTypeName === 'Warehouse') setAreaId(storageList?.filter(data => data.label === 'Storage Ambient')[0])\n      else setAreaId(storageList?.filter(data => data.label === 'Storage')[0])\n      setArea(areaList)\n      getUnfinishedEntries({ dispatch, moduleName, isExist: stockTakeEntryData ? true : false, ripeness })\n    }\n\n    try {\n      getData()\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }, []);\n\n  useEffect(() => {\n    setLocalEntryData()\n    setSummary()\n  }, [areaId])\n\n  return {\n    isCentral,\n    moduleName,\n    thereAreRequest,\n    moduleFirstLoad,\n    warehouseUuid,\n    status,\n    isLoading,\n    stockTakeEntryData,\n    summary,\n    setSummary,\n    localEntryData,\n    setLocalEntryData,\n    search,\n    setSearch,\n    area,\n    setArea,\n    areaId,\n    setAreaId,\n    discard,\n    setDiscard,\n    zeroQuantity\n  }\n}\n\n// Stock Take Entry\nexport const useStockTakeEntry = ({ moduleEntry, activeSku }) => {\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\n  const [discard, setDiscard] = useState(false)\n  const [isSaved, setIsSaved] = useState()\n  const [action, setAction] = useState()\n  const [isRequired, setIsRequired] = useState(false)\n  const [hideContent, setHideContent] = useState(false)\n  const [allowPage, setAllowPage] = useState([\n    '/inventory-entry/stock-take/weight-entry',\n    '/inventory-entry/stock-take/weight-entry/remove-sku',\n    '/inventory-entry/stock-take/weight-entry/add-sku',\n  ])\n\n  const isLoading = useSelector(state => state.isLoading)\n  const status = useSelector(state => state.status)\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\n  const edited = jobSheetChecker({ moduleEntry })\n  const inputType = moduleEntry.jobPost.inputType\n\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n\n  return {\n    isSuccess,\n    setIsSuccess,\n    confirmation,\n    setConfirmation,\n    discard,\n    setDiscard,\n    isSaved,\n    setIsSaved,\n    action,\n    setAction,\n    isRequired,\n    setIsRequired,\n    hideContent,\n    setHideContent,\n    allowPage,\n    setAllowPage,\n    isLoading,\n    skuName,\n    skuNumber,\n    poList,\n    gradeList,\n    totalQty,\n    unitOfMeassures,\n    totalWeight,\n    edited,\n    postInfo,\n    status,\n    inputType\n  }\n}\n\n// Stock Movement\nexport const useStockMovement = ({ dispatch }) => {\n  const moduleName = 'stockMovement'\n\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.stockMovementFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const stockMovementDropdown = useSelector(state => state.stockMovementDropdown)\n  const areaId = useSelector(state => state.areaId)\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\n  const areaMovement = useSelector(state => state.areaMovement)\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const stockMovementEntryData = useSelector((state) => state.stockMovementEntryData);\n  const wasteReasonList = useSelector(state => state.wasteReasonList)\n\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\n  const [search, setSearch] = useState('')\n  const [area, setArea] = useState()\n  const [areaMatched, setAreaMatched] = useState()\n  const [discard, setDiscard] = useState()\n\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\n  // const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\n\n\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\n\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\n      setArea(areaList)\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockMovementEntryData ? true : false, ripeness })\n      if (!wasteReasonList?.length) {\n        getWasteReason({ dispatch })\n      }\n      setIsCheckedBefore(isCheckedTotal)\n    }\n    getData()\n  }, []);\n\n  useEffect(_ => {\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\n    else setAreaMatched(false)\n  }, [areaId, areaIdDesposition, added])\n\n  useEffect(() => {\n    setLocalEntryData()\n    setSummary()\n  }, [areaId, areaIdDesposition])\n\n  useEffect(_ => {\n    if (stockMovementTargetRepack) {\n      const isMatchedDropdown = areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value\n      if (isMatchedDropdown) {\n        setSummary()\n        getStockTakeSummary({\n          moduleName,\n          stockMovementTargetRepack,\n          dispatch,\n          desc: search,\n          warehouseUuid,\n          areaId,\n          areaIdDesposition,\n          setModule: setSummary,\n          module: localEntryData\n        })\n        setSearch(search)\n      }\n    }\n    if (!stockMovementTargetRepack) setSummary()\n  }, [stockMovementTargetRepack])\n\n\n  return {\n    moduleName,\n    thereAreRequest,\n    moduleFirstLoad,\n    warehouseUuid,\n    stockMovementDropdown,\n    areaId,\n    areaIdDesposition,\n    areaMovement,\n    status,\n    isLoading,\n    stockMovementEntryData,\n    summary,\n    setSummary,\n    localEntryData,\n    setLocalEntryData,\n    isCheckedBefore,\n    setIsCheckedBefore,\n    search,\n    setSearch,\n    area, setArea,\n    areaMatched, setAreaMatched,\n    discard,\n    setDiscard,\n    isCheckedTotal,\n    added,\n    entryIsReady,\n    stockMovementTargetRepack\n  }\n}\n\n// Stock Movement Entry\nexport const useStockMovementEntry = ({ moduleEntry, activeSku }) => {\n  const isLoading = useSelector(state => state.isLoading)\n  const status = useSelector(state => state.status)\n  const areaMovement = useSelector(state => state.areaMovement)\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\n  const edited = jobSheetChecker({ moduleEntry })\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\n  const [discard, setDiscard] = useState(false)\n  const [isSaved, setIsSaved] = useState()\n  const [action, setAction] = useState()\n  const [isRequired, setIsRequired] = useState(false)\n  const [hideContent, setHideContent] = useState(false)\n  const [allowPage, setAllowPage] = useState([\n    '/inventory-entry/movement/weight-entry',\n    '/inventory-entry/movement/weight-entry/remove-sku',\n    '/inventory-entry/movement/weight-entry/add-sku',\n  ])\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  return {\n    isSuccess,\n    setIsSuccess,\n    confirmation,\n    setConfirmation,\n    discard,\n    setDiscard,\n    isSaved,\n    setIsSaved,\n    action,\n    setAction,\n    isRequired,\n    setIsRequired,\n    hideContent,\n    setHideContent,\n    allowPage,\n    setAllowPage,\n    isLoading,\n    skuName,\n    skuNumber,\n    poList,\n    gradeList,\n    totalQty,\n    unitOfMeassures,\n    totalWeight,\n    edited,\n    postInfo,\n    areaMovement,\n    status\n  }\n}\n\n// Stock Transfer\nexport const useStockTransfer = ({ dispatch }) => {\n  const moduleName = 'stockTransfer'\n\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.stockTransferFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const stockTransferDropdown = useSelector(state => state.stockTransferDropdown)\n  const areaId = useSelector(state => state.areaId)\n  const areaIdDesposition = useSelector(state => state.areaIdDesposition)\n  const areaMovement = useSelector(state => state.areaMovement)\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const stockTransferEntryData = useSelector((state) => state.stockTransferEntryData);\n\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\n  const [search, setSearch] = useState()\n  const [area, setArea] = useState()\n  const [areaMatched, setAreaMatched] = useState()\n  const [discard, setDiscard] = useState()\n\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\n  const entryIsReady = localEntryData && localEntryData?.jobPost?.list?.length > 0 ? true : false\n\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\n      setArea(areaList)\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: stockTransferEntryData ? true : false, ripeness })\n      setIsCheckedBefore(isCheckedTotal)\n    }\n    getData()\n  }, []);\n\n  useEffect(_ => {\n    if (areaId?.value && areaIdDesposition?.value && areaId?.value !== areaIdDesposition?.value) setAreaMatched(true)\n    else setAreaMatched(false)\n  }, [areaId, areaIdDesposition, added])\n\n  useEffect(() => {\n    setLocalEntryData()\n    setSummary()\n  }, [areaId, areaIdDesposition])\n\n\n  return {\n    moduleName,\n    thereAreRequest,\n    moduleFirstLoad,\n    warehouseUuid,\n    stockTransferDropdown,\n    areaId,\n    areaIdDesposition,\n    areaMovement,\n    status,\n    isLoading,\n    stockTransferEntryData,\n    summary,\n    setSummary,\n    localEntryData,\n    setLocalEntryData,\n    isCheckedBefore,\n    setIsCheckedBefore,\n    search,\n    setSearch,\n    area, setArea,\n    areaMatched, setAreaMatched,\n    discard,\n    setDiscard,\n    isCheckedTotal,\n    added,\n    entryIsReady\n  }\n}\n\n// Stock Transfer Entry\nexport const useStockTransferEntry = ({ moduleEntry, activeSku }) => {\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector(state => state.isLoading)\n  const areaMovement = useSelector(state => state.areaMovement)\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\n  const edited = jobSheetChecker({ moduleEntry })\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\n  const [discard, setDiscard] = useState(false)\n  const [isSaved, setIsSaved] = useState()\n  const [action, setAction] = useState()\n  const [isRequired, setIsRequired] = useState(false)\n  const [hideContent, setHideContent] = useState(false)\n  const [allowPage, setAllowPage] = useState([\n    '/inventory-entry/stock-transfer/weight-entry',\n    '/inventory-entry/stock-transfer/weight-entry/remove-sku',\n    '/inventory-entry/stock-transfer/weight-entry/add-sku',\n  ])\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  return {\n    isSuccess,\n    setIsSuccess,\n    confirmation,\n    setConfirmation,\n    discard,\n    setDiscard,\n    isSaved,\n    setIsSaved,\n    action,\n    setAction,\n    isRequired,\n    setIsRequired,\n    hideContent,\n    setHideContent,\n    allowPage,\n    setAllowPage,\n    isLoading,\n    skuName,\n    skuNumber,\n    poList,\n    gradeList,\n    totalQty,\n    unitOfMeassures,\n    totalWeight,\n    edited,\n    postInfo,\n    areaMovement,\n    status\n  }\n}\n\n\n// Waste\nexport const useWaste = ({ dispatch }) => {\n  const moduleName = 'waste'\n\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.wasteFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const wasteEntryData = useSelector((state) => state.wasteEntryData);\n\n  const [areaId, setAreaId] = useState()\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\n  const [search, setSearch] = useState()\n  const [discard, setDiscard] = useState()\n\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\n\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\n      const areaId = await getWasteWarehouseArea({ warehouseUuid, setAreaId })\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: wasteEntryData ? true : false, ripeness })\n      setIsCheckedBefore(isCheckedTotal)\n    }\n    getData()\n  }, []);\n\n  return {\n    moduleName,\n    thereAreRequest,\n    moduleFirstLoad,\n    warehouseUuid,\n    status,\n    isLoading,\n    wasteEntryData,\n    areaId,\n    setAreaId,\n    summary,\n    setSummary,\n    localEntryData,\n    setLocalEntryData,\n    isCheckedBefore,\n    setIsCheckedBefore,\n    search,\n    setSearch,\n    discard,\n    setDiscard,\n    isCheckedTotal\n  }\n}\n\n// Waste Entry\nexport const useWasteEntry = ({ moduleEntry, activeSku }) => {\n  const isLoading = useSelector(state => state.isLoading)\n  const status = useSelector(state => state.status)\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\n  const [discard, setDiscard] = useState(false)\n  const [isSaved, setIsSaved] = useState()\n  const [action, setAction] = useState()\n  const [isRequired, setIsRequired] = useState(false)\n  const [hideContent, setHideContent] = useState(false)\n  const [allowPage, setAllowPage] = useState([\n    '/inventory-entry/waste/weight-entry',\n    '/inventory-entry/waste/weight-entry/remove-sku',\n    '/inventory-entry/waste/weight-entry/add-sku',\n  ])\n\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\n  const edited = jobSheetChecker({ moduleEntry })\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n\n\n  return {\n    isSuccess,\n    setIsSuccess,\n    confirmation,\n    setConfirmation,\n    discard,\n    setDiscard,\n    isSaved,\n    setIsSaved,\n    action,\n    setAction,\n    isRequired,\n    setIsRequired,\n    hideContent,\n    setHideContent,\n    allowPage,\n    setAllowPage,\n    isLoading,\n    skuName,\n    skuNumber,\n    poList,\n    gradeList,\n    totalQty,\n    unitOfMeassures,\n    totalWeight,\n    edited,\n    postInfo,\n    status\n  }\n}\n\n// Additional Outbound\nexport const useAdditionalOutbound = ({ dispatch }) => {\n  const moduleName = 'outbound'\n\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.outboundFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const outboundEntryData = useSelector((state) => state.outboundEntryData);\n  const warehouseArea = useSelector(state => state.warehouseArea);\n  const outboundAddSku = useSelector(state => state.outboundAddSku)\n\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\n  const [next, setNext] = useState(false)\n  const [area, setArea] = useState()\n  const [areaId, setAreaId] = useState()\n  const [search, setSearch] = useState()\n  const [discard, setDiscard] = useState()\n\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\n\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\n      setArea(areaList)\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: outboundEntryData ? true : false })\n      setIsCheckedBefore(isCheckedTotal)\n    }\n    getData()\n  }, []);\n\n  useEffect(() => {\n    setLocalEntryData()\n    setSummary()\n  }, [areaId])\n\n  return {\n    moduleName,\n    thereAreRequest,\n    moduleFirstLoad,\n    warehouseUuid,\n    status,\n    isLoading,\n    outboundEntryData,\n    warehouseArea,\n    outboundAddSku,\n    summary,\n    setSummary,\n    localEntryData,\n    setLocalEntryData,\n    isCheckedBefore,\n    setIsCheckedBefore,\n    next,\n    setNext,\n    area,\n    setArea,\n    areaId,\n    setAreaId,\n    search,\n    setSearch,\n    discard,\n    setDiscard,\n    isCheckedTotal,\n    added\n  }\n}\n\n// Additional Outbound Entry\nexport const useAdditionalOutboundEntry = ({ moduleEntry, activeSku }) => {\n  const isLoading = useSelector(state => state.isLoading)\n  const status = useSelector(state => state.status)\n  const { skuName, skuNumber, poList, outboundTypeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\n  const [discard, setDiscard] = useState(false)\n  const [isSaved, setIsSaved] = useState()\n  const [action, setAction] = useState()\n  const [isRequired, setIsRequired] = useState(false)\n  const [hideContent, setHideContent] = useState(false)\n  const [allowPage, setAllowPage] = useState([\n    '/inventory-entry/additional-outbound/weight-entry',\n    '/inventory-entry/additional-outbound/remove-sku',\n    '/inventory-entry/additional-outbound/add-sku',\n  ])\n\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\n  const edited = jobSheetChecker({ moduleEntry })\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n\n  return {\n    isSuccess,\n    setIsSuccess,\n    confirmation,\n    setConfirmation,\n    discard,\n    setDiscard,\n    isSaved,\n    setIsSaved,\n    action,\n    setAction,\n    isRequired,\n    setIsRequired,\n    hideContent,\n    setHideContent,\n    allowPage,\n    setAllowPage,\n    isLoading,\n    skuName,\n    skuNumber,\n    poList,\n    totalQty,\n    unitOfMeassures,\n    totalWeight,\n    edited,\n    postInfo,\n    outboundTypeList,\n    status\n  }\n}\n\n// Repacking\nexport const useRepacking = ({ dispatch }) => {\n  const moduleName = 'repack'\n\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.repackFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const repackEntryData = useSelector((state) => state.repackEntryData);\n  const warehouseArea = useSelector(state => state.warehouseArea);\n  const targetRepack = useSelector(state => state.targetRepack)\n\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\n  const [search, setSearch] = useState('')\n  const [area, setArea] = useState()\n  const [areaId, setAreaId] = useState()\n  const [areaDestinationId, setAreaDestinationId] = useState()\n  const [discard, setDiscard] = useState()\n\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName });\n  const added = isCheckedBefore !== isCheckedTotal && isCheckedTotal > 0 ? true : false\n\n  const setTargetRepack = (value) => {\n    dispatch({ type: IS_LOADING, targetRepack: value })\n  }\n\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const areaList = await getWarehouseArea({ dispatch, warehouseUuid })\n      setArea(areaList)\n      const aId = areaList?.filter(area => area.label === 'Production')\n      const adId = areaList?.filter(area => area.label === 'Staging')\n      if (aId?.length) setAreaId(aId[0])\n      if (adId?.length) setAreaDestinationId(adId[0])\n      const c = await getUnfinishedEntries({ dispatch, moduleName, isExist: repackEntryData ? true : false, ripeness })\n      setIsCheckedBefore(isCheckedTotal)\n    }\n    getData()\n  }, []);\n  useEffect(() => {\n    setLocalEntryData()\n    setSummary()\n  }, [areaId])\n\n  useEffect(_ => {\n    if (targetRepack) {\n      setSummary()\n      if (areaId) getStockTakeSummary({\n        moduleName,\n        targetRepack,\n        dispatch,\n        desc: '',\n        warehouseUuid,\n        areaId,\n        areaIdDesposition: areaDestinationId,\n        setModule: setSummary,\n        module: localEntryData\n      })\n    }\n    if (!targetRepack) setSummary()\n  }, [targetRepack, areaId])\n\n  return {\n    moduleName,\n    thereAreRequest,\n    moduleFirstLoad,\n    warehouseUuid,\n    status,\n    isLoading,\n    repackEntryData,\n    warehouseArea,\n    summary,\n    setSummary,\n    localEntryData,\n    setLocalEntryData,\n    isCheckedBefore,\n    setIsCheckedBefore,\n    search,\n    setSearch,\n    area,\n    setArea,\n    areaId,\n    setAreaId,\n    areaDestinationId,\n    setAreaDestinationId,\n    discard,\n    setDiscard,\n    isCheckedTotal,\n    added,\n    targetRepack,\n    setTargetRepack\n  }\n}\n\n// Repacking Entry\nexport const useRepackingEntry = ({ moduleEntry, activeSku }) => {\n  const isLoading = useSelector(state => state.isLoading)\n  const status = useSelector(state => state.status)\n  const [invalidThreshold, setInvalidThreshold] = useState()\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [confirmation, setConfirmation] = useState({ show: false, name: null })\n  const [discard, setDiscard] = useState(false)\n  const [isSaved, setIsSaved] = useState()\n  const [action, setAction] = useState()\n  const [isRequired, setIsRequired] = useState(false)\n  const [hideContent, setHideContent] = useState(false)\n  const [allowPage, setAllowPage] = useState([\n    '/inventory-entry/repacking/weight-entry',\n    '/inventory-entry/repacking/weight-entry/remove-sku',\n    '/inventory-entry/repacking/weight-entry/add-sku',\n  ])\n\n  //filter item by active slot\n  const [activeTab, setActiveTab] = useState(0)\n\n  const { skuName, skuNumber, poList, gradeList, totalQty, unitOfMeassures } = moduleEntry.jobPost.list[activeSku]\n  const totalWeight = totalWeightCount({ moduleEntry, activeSku })\n  const totalPack = totalPackCount({ moduleEntry, activeSku })\n  const edited = jobSheetChecker({ moduleEntry })\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n\n  }, [isSuccess])\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n\n  return {\n    isLoading,\n    invalidThreshold,\n    setInvalidThreshold,\n    isSuccess,\n    setIsSuccess,\n    confirmation,\n    setConfirmation,\n    discard,\n    setDiscard,\n    isSaved,\n    setIsSaved,\n    action,\n    setAction,\n    isRequired,\n    setIsRequired,\n    hideContent,\n    setHideContent,\n    allowPage,\n    setAllowPage,\n    unitOfMeassures,\n    totalWeight,\n    edited,\n    postInfo,\n    skuName,\n    skuNumber,\n    poList,\n    gradeList,\n    totalQty,\n    totalPack,\n    status,\n    activeTab,\n    setActiveTab\n  }\n}\n\n// Single view\nexport const useSingleView = ({ category, dispatch, setLocalEntryData, setSummary, setSearch, getStockTakeSummary, search, warehouseUuid, areaId, localEntryData, moduleName, stockMovementTargetRepack }) => {\n\n  //submit\n  const [action, setAction] = useState()\n  const [confirmation, setConfirmation] = useState({ show: false, name: 'submit' })\n  const [isSuccess, setIsSuccess] = useState({ success: false, name: null })\n  const [isSaved, setIsSaved] = useState()\n\n  // create po single view\n  const [createPo, setCreatePo] = useState()\n  const [singleViewData, setSingleViewData] = useState()\n  const [fromBarcode, setFromBarcode] = useState()\n\n\n  //condition move all\n  const [moveAll, setMoveAll] = useState()\n\n  useEffect(() => {\n    if (isSuccess.status === 500) {\n      setIsSaved(false)\n      setConfirmation({ show: false, name: confirmation.name })\n    }\n    else if (isSuccess.status === 200) {\n      setConfirmation({ show: false, name: confirmation.name })\n      setIsSaved(true)\n    }\n\n  }, [isSuccess])\n\n  useEffect(() => {\n    if (!isSaved) setIsSuccess({ success: false, name: null })\n  }, [isSaved])\n  const postInfo = isSuccess.success && isSuccess.status ? true : false\n\n  // end of submit\n\n  //singleview\n  const updateList = (props, props2, moduleName) => {\n    setLocalEntryData()\n    setSummary()\n    if (search === 'barcode') return\n\n    dispatch({ type: IS_LOADING, isLoading: true })\n    setTimeout(() => {\n      getStockTakeSummary({\n        category,\n        moduleName,\n        stockMovementTargetRepack: props2,\n        zeroQuantity: props,\n        singleView: true,\n        dispatch,\n        desc: search,\n        warehouseUuid,\n        areaId,\n        setModule: setSummary,\n        module: localEntryData\n      },\n        setSearch(search))\n    }, 10);\n  }\n\n  return { fromBarcode, setFromBarcode, updateList, action, setAction, confirmation, setConfirmation, isSuccess, setIsSuccess, isSaved, setIsSaved, createPo, setCreatePo, singleViewData, setSingleViewData, postInfo, moveAll, setMoveAll }\n}\n\n// Scanner\nexport const useScanner = () => {\n  const [showScanner, setShowScanner] = useState()\n  const [showSkuList, setShowSkuList] = useState()\n  return { showScanner, setShowScanner, showSkuList, setShowSkuList }\n}\n\nexport const useTargetRepack = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\n  const targetRepacks = useSelector(state => state.targetRepacks)\n  const slotList = useSelector(state => state.slotList)\n\n  const [slot, setSlot] = useState()\n\n  const { gradeList } = moduleEntry?.jobPost?.list[activeSku]\n  const tgtRpck = moduleEntry?.jobPost?.list[activeSku]?.poList[0]?.targetRepacks || []\n  const table = filterTargetRepack(tgtRpck, gradeList, activeSku, moduleEntry, slot)\n\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\n\n  const totalEmptyThreshold = countThresholdIsEmpty(moduleEntry)\n\n\n  //set Target Repack\n\n  useEffect(_ => {\n    setTargetRepack({ moduleEntry, dispatch })\n  }, [])\n\n  useEffect(_ => {\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\n    if (table?.data?.length) setShowTargetRepack(true)\n  }, [table])\n\n  return { showTargetRepack, table, slot, setSlot, slotList, totalEmptyThreshold }\n}\n\n//use target movement\nexport const useTargetMovement = ({ moduleEntry, activeSku, dispatch, moduleName }) => {\n  const targetRepacks = moduleEntry.jobPost.list[activeSku].poList[0]?.targetMovements\n  const slotList = useSelector(state => state.slotList)\n  const stockMovementTargetRepack = useSelector(state => state.stockMovementTargetRepack)\n\n  const [slot, setSlot] = useState()\n\n  const { gradeList } = moduleEntry.jobPost.list[activeSku]\n  const table = filterTargetRepack(targetRepacks, gradeList, activeSku, moduleEntry, slot, true)\n\n  const [showTargetRepack, setShowTargetRepack] = useState(true)\n\n  useEffect(_ => {\n    if (!table?.data?.length && !slot?.length) setShowTargetRepack(false)\n    if (table?.data?.length) setShowTargetRepack(true)\n  }, [table])\n\n  return { showTargetRepack, table, slot, setSlot, slotList, stockMovementTargetRepack }\n}\n\n//use filter new item to active\nexport const useIsNewItem = ({ setActiveSKU, moduleEntry, selectedSku, dispatch, moduleName }) => {\n  const sorted = null\n  useEffect(() => {\n    let skuName = null\n    const newSkuList = moduleEntry?.jobPost?.list?.filter(data => data.isNewItem)\n    const length = newSkuList?.length\n    if (length) skuName = newSkuList[length - 1]?.skuName\n    const idx = moduleEntry?.jobPost?.list?.findIndex(data => data.skuName === skuName)\n    if (idx >= 0) setActiveSKU(idx)\n\n  }, [selectedSku]);\n  return { sorted }\n}\n\nexport function useOutside({ wrapperRef, setShow, show }) {\n  useEffect(() => {\n\n    function handleClickOutside(event) {\n      if (show && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setShow(!show)\n      }\n\n      if (show && wrapperRef.current && event?.keyCode === 9) {\n        setShow(!show)\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    document.addEventListener(\"keydown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      document.addEventListener(\"keydown\", handleClickOutside);\n    };\n  }, [wrapperRef, show]);\n}","module.exports = __webpack_public_path__ + \"static/media/LOADING-MLS-GRAY.903088aa.gif\";","import { GET_STOCK_TAKE_ACTION, CREATE_JOB_SHEET } from 'apiServices/action'\nimport { getPORepacking } from 'apiServices'\nimport { getGradeRepacking } from 'apiServices/dropdown'\nimport { isFloat } from 'services'\nimport { checkIsSkuRequired, filterBySkuName, totalListItemWeightCount } from 'Page/StockEntry/GeneralServices/moduleServices'\n\n\n// update sku list tobe selected\nexport const selectSku = async ({\n    idx,\n    checked,\n    dispatch,\n    setLocalEntryData,\n    moduleName,\n    moduleSummary,\n    moduleEntry,\n    warehouseUuid,\n    areaId,\n    areaDestinationId }) => {\n    try {\n        let moduleSummaryNew = [...moduleSummary]\n        moduleSummaryNew[idx].checked = checked\n        dispatch({ type: GET_STOCK_TAKE_ACTION, [`${moduleName}summaryData`]: moduleSummaryNew })\n\n        const selectedData = moduleSummaryNew?.filter(ldata => {\n            if (ldata.checked) return ldata\n        })\n        let jsSelector = []\n        if (moduleEntry) {\n            moduleEntry.jobPost.list.map(data => {\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\n                if (jsList.skuUuid) {\n                    jsSelector.push(jsList.skuUuid)\n                }\n            })\n        }\n        let jsD = []\n        const a = selectedData.map(async (list, sI) => {\n            const isInclude = jsSelector.includes(list.skuUuid)\n            if (!isInclude) {\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\n                list['gradeList'] = grade\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\n                if (data) {\n                    const addPoItem = [\n                        {\n                            itemList: [],\n                            expiryMs: null,\n                            inBoundyMs: null,\n                            expiryDate: null,\n                            inboundDate: null,\n                            skuUuid: list.skuUuid,\n                            uom: list.unitOfMeassures,\n                            packSize: list.packSize,\n                            category: list.category,\n                            initialWeight: Number.isInteger(data?.data.totalWeight) ? parseInt(data?.data.totalWeight) : parseFloat(data?.data.totalWeight),\n                            targetRepacks: data?.data.targetRepacks\n                        }\n                    ]\n                    list['poList'] = addPoItem\n                    jsD.push(list)\n                }\n\n            }\n        })\n        const aF = await Promise.all(a)\n        let newJs = []\n        if (moduleEntry) {\n            newJs = moduleEntry.jobPost.list.concat(jsD)\n        }\n        if (!moduleEntry) newJs = jsD\n\n        const uncheckedSku = moduleSummaryNew[idx]\n        if (!uncheckedSku.checked) {\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\n        }\n\n        const id = moduleEntry?.jobPost?.id\n        const jobSheet = {\n            jobPost: {\n                id: id ? id : 0,\n                warehouseSource: warehouseUuid,\n                warehouseDestination: warehouseUuid,\n                areaSource: parseInt(areaId?.value),\n                areaName: areaId?.label,\n                areaDestination: parseInt(areaDestinationId?.value),\n                areaDestinationName: areaDestinationId?.label,\n                list: newJs.sort(function (a, b) { return filterBySkuName(a, b) })\n            }\n        }\n        if (newJs.length === 0) dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: null })\n        setLocalEntryData(jobSheet)\n    }\n    catch (e) {\n        console.log(e);\n    }\n}\n\n//pre Add SKU\nexport const preAddSku = async ({\n    idx,\n    checked,\n    dispatch,\n    moduleName,\n    moduleSummary,\n    moduleEntry,\n    warehouseUuid,\n    areaId,\n    preAddHandler }) => {\n    try {\n        let moduleSummaryNew = [...moduleSummary]\n        moduleSummaryNew[idx].checked = checked\n\n        const selectedData = moduleSummaryNew?.filter(ldata => {\n            if (ldata.checked) return ldata\n        })\n        let jsSelector = []\n        if (moduleEntry) {\n            moduleEntry.map(data => {\n                const jsList = (({ skuUuid }) => ({ skuUuid }))(data)\n                if (jsList.skuUuid) {\n                    jsSelector.push(jsList.skuUuid)\n                }\n            })\n        }\n        let jsD = []\n        const a = selectedData.map(async (list, sI) => {\n            const isInclude = jsSelector.includes(list.skuUuid)\n            if (!isInclude) {\n                const grade = await getGradeRepacking({ skuId: list.skuUuid })\n                list['gradeList'] = grade\n                const data = await getPORepacking({ skuId: list.skuUuid, warehouseId: warehouseUuid, uom: list.unitOfMeassures })\n                if (data) {\n                    const addPoItem = [\n                        {\n                            itemList: [],\n                            expiryMs: null,\n                            inBoundyMs: null,\n                            expiryDate: null,\n                            inboundDate: null,\n                            skuUuid: list.skuUuid,\n                            uom: list.unitOfMeassures,\n                            packSize: list.packSize,\n                            category: list.category,\n                            initialWeight: isFloat(data?.data.totalWeight) ? isFloat(data?.data.totalWeight) : data?.data.totalWeight,\n                            targetRepacks: data?.data.targetRepacks\n                        }\n                    ]\n                    list['poList'] = addPoItem\n                    list.isNewItem = true\n                    jsD.push(list)\n                }\n\n            }\n        })\n        const aF = await Promise.all(a)\n        let newJs = []\n        if (moduleEntry) {\n            newJs = moduleEntry.concat(jsD)\n        }\n        if (!moduleEntry) newJs = jsD\n\n        const uncheckedSku = moduleSummaryNew[idx]\n        if (!uncheckedSku.checked) {\n            newJs = newJs.filter(data => { return data.skuUuid !== uncheckedSku.skuUuid })\n        }\n        preAddHandler(newJs);\n    }\n    catch (e) {\n        console.log(e);\n    }\n}\n\n\nexport const submitValidation = ({ setActiveSKU, moduleEntry, moduleName, setConfirmation, dispatch, setIsRequired, setInvalidThreshold }) => {\n    let isClear = []\n    let js = { ...moduleEntry }\n    let invalidThreshold = []\n    const jsR = moduleEntry.jobPost.list.map(data => {\n        let description = data.originalUom\n        data.poList.map(po => {\n            const qtyCount = totalListItemWeightCount({ moduleList: po.itemList })\n            const { packSize, targetRepacks } = po\n            const isTargetRepacks = targetRepacks?.length ? true : false\n            po.itemList.map(item => {\n                const { qty, grade, pack, note } = item\n\n                if ((qty == 0 || isNaN(qty)) && grade?.value === null) {\n                    item.qtyIsEmpty = false\n                    item.gradeIsEmpty = false\n                    item.noteIsEmpty = false\n                    item.packIsEmpty = false\n                    item.packThresholdIsEmpty = false\n                }\n                else {\n                    if (item?.grade?.label === 'Waste' || item?.grade?.label === 'Semi Waste') {\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\n                    }\n                    else {\n                        let grd = data.gradeList.filter(grd => grd.value === grade.value)\n                        let ratio = grd[0].multiplier\n                        let standardWeight = description?.toLowerCase() == 'gram' ? packSize / 1000 : packSize\n                        let inputWeight = qty / pack\n                        inputWeight = inputWeight - (standardWeight / ratio)\n                        inputWeight = inputWeight / (standardWeight / ratio)\n                        inputWeight = inputWeight * 100\n                        if (inputWeight >= 51 || inputWeight <= -20) {\n                            item.packThresholdIsEmpty = true\n                            invalidThreshold.push(true)\n                        }\n                        else {\n                            item.packThresholdIsEmpty = false\n                            invalidThreshold.push(false)\n                        }\n                        item.packThreshold = isFloat(inputWeight)\n                        isNaN(qty) || qty == 0 || qty === \"\" || qty === null ? item.qtyIsEmpty = true : item.qtyIsEmpty = false\n                        isNaN(pack) || pack == 0 || pack === \"\" || pack === null ? item.packIsEmpty = true : item.packIsEmpty = false\n                        !grade?.value ? item.gradeIsEmpty = true : item.gradeIsEmpty = false\n                        grade?.label === 'Waste' && !note ? item.noteIsEmpty = true : item.noteIsEmpty = false\n                        if (isTargetRepacks) {\n                            // !slot?.value && slot?.value?.toString() !== '0' ? item.slotIsEmpty = true : item.slotIsEmpty = false\n                        }\n                    }\n                }\n\n                if (!item.qtyIsEmpty) {\n                    if (Number(qtyCount) > Number(po.initialWeight)) {\n                        item.qtyIsEmpty = true\n                    }\n                    else item.qtyIsEmpty = false\n                }\n\n                if (item?.qtyIsEmpty || item?.gradeIsEmpty || item.packIsEmpty || item?.noteIsEmpty || item?.qtyToCompareIsEmpty || item?.slotIsEmpty) isClear.push(false)\n                else isClear.push(true)\n\n                return item\n            })\n            return po\n        })\n        return data\n    })\n\n\n    //validate there is value\n    let valid = false\n    jsR.map(data => {\n        data.poList.map(po => {\n            po.itemList.map(item => {\n                if (item.qty) valid = true\n            })\n        })\n    })\n\n    js.jobPost.list = jsR\n    dispatch({ type: CREATE_JOB_SHEET, [`${moduleName}EntryData`]: js })\n    if (!isClear.includes(false) && valid) {\n        if (typeof (setIsRequired) === 'function') setIsRequired(false)\n    }\n    else {\n        if (typeof (setIsRequired) === 'function') setIsRequired(true)\n    }\n\n    if (!invalidThreshold.includes(true)) {\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(false)\n    }\n    else {\n        if (typeof (setInvalidThreshold) === 'function') setInvalidThreshold(true)\n    }\n\n    // if (!isClear.includes(false) && valid && !invalidThreshold.includes(true)) {\n    if (!isClear.includes(false) && valid) {\n        if (invalidThreshold.includes(true)) return\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: true, name: 'submit' })\n    }\n    else {\n        if (typeof (setConfirmation) === 'function') setConfirmation({ show: false, name: null })\n    }\n\n    checkIsSkuRequired({ setActiveSKU, moduleEntry, moduleName })\n}\n\nexport const countThresholdIsEmpty = (js) => {\n\n    let number = []\n    if (js.jobPost.list.length) {\n        js.jobPost.list.map((ls, listIndex) => {\n            if (ls.poList.length) {\n                ls.poList.map((po, poListIdx) => {\n                    if (po.itemList.length) {\n                        po.itemList.map((item, entryListIdx) => {\n                            if (item.packThresholdIsEmpty) {\n                                number.push({ skuName: ls.skuName, id: `pack_${poListIdx}_${entryListIdx}`, excess: item.packThreshold, slot: item.slot, activeSku: listIndex })\n                            }\n                        })\n                    }\n                })\n            }\n        })\n    }\n    return number\n}"],"sourceRoot":""}