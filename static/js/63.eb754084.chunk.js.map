{"version":3,"sources":["Page/ConfigModules/Settings/Saved.jsx","Page/ConfigModules/Settings/ActiveStock.jsx","Component/CustomTable/index.jsx","Page/ConfigModules/Settings/services.js"],"names":["Saved","_ref","_submit$data","submit","userName","status","show","setShow","useState","success","setSuccess","saved","headerIcon","textColor","button","date","dateFull","Date","title","message1","message2","message3","buttonText","failed","error","isError","code","data","isSuccess","console","log","window","onkeydown","e","keyCode","useEffect","_","React","createElement","CRow","className","CCol","CModal","onClose","size","style","minHeight","bodyOpenClassName","closeOnBackdrop","CModalBody","concat","backgroundColor","opacity","wordWrap","height","fontSize","CButton","onClick","location","reload","emptyItem","width","isMobile","useDimension","tableHeight","customTableClass","ActiveStock","props","dispatch","useDispatch","useSelector","state","syncHistories","user","email","thereAreRequest","warehouseUuid","setSubmit","getSyncHistories","length","maxHeight","isSaved","value","CustomTable","v","history","push","id","editColumn","styles","color","textAlign","columns","activeStockTableHeader","syncAllHistories","type","src","loading","alt","ReactTableFixedColumns","withFixedColumns","ReactTable","Component","constructor","super","getColumnWidth","rows","accessor","headerText","Math","max","map","row","toString","header","listHeader","h","index","obj","Header","Cell","sortable","resizable","headerClassName","this","showModal","activeTab","editColumnTemp","render","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","cursor","isNaN","defaultPageSize","placeholder","display","justifyContent","activeStockTableHeaderDetail"],"mappings":"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","file":"static/js/63.eb754084.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    CButton,\n    CCol,\n    CModal,\n    CModalBody,\n    CRow\n} from \"@coreui/react\";\nimport \"Component/Modal/PopUp/index.scss\";\nimport { dateFull } from 'services'\n\nconst Saved = ({ submit, userName, status }) => {\n    const [show, setShow] = useState(false)\n    const [success, setSuccess] = useState()\n    const saved = {\n        success: {\n            headerIcon: 'em em-tada',\n            textColor: 'green',\n            button: 'bg-green text-white',\n            date: dateFull({ date: new Date }),\n            title: 'Success',\n            message1: 'Active Stock already synchronize on all modules',\n            message2: '',\n            message3: '',\n            buttonText: 'Got it!',\n            userName: userName ? userName : ''\n        },\n        failed: {\n            headerIcon: 'em em-anguished',\n            textColor: 'red',\n            button: 'bg-red text-white',\n            date: '',\n            title: 'Failed',\n            message1: '',\n            message2: 'Please check the detail from the Active history table',\n            message3: 'Active Stock failed to synchronize.',\n            buttonText: 'Check history',\n            userName: ''\n        },\n        error: {\n            headerIcon: 'em em-anguished',\n            textColor: 'red',\n            button: 'bg-red text-white',\n            date: '',\n            title: 'Failed',\n            message1: '',\n            message2: 'Server error. Please Contact the admin',\n            message3: 'Active Stock failed to synchronize.',\n            buttonText: 'Check history',\n            userName: ''\n        }\n    }\n    const isError = status?.code === 500 ? false : submit?.data?.isSuccess\n    console.log(isError);\n    window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\n    useEffect(_ => {\n        if (isError === true || isError === false) setShow(true)\n        if (isError) setSuccess(true)\n        if (!isError) setSuccess(false)\n\n    }, [status?.code, submit])\n    const isSuccess = status?.code === 500 ? saved.error : (success ? saved.success : saved.failed)\n    return (\n        <CRow className={show ? null : 'd-none'}>\n            <CCol>\n                <CModal\n                    className={``}\n                    show={show}\n\n                    onClose={() => null}\n                    size=\"lg\"\n                    style={{ minHeight: \"280px\" }}\n                    bodyOpenClassName=\"p-3\"\n                    closeOnBackdrop={false}\n                >\n                    <div className=\"d-flex flex-row-reverse\">\n                        <i className=\"pr-3 iconU-modalClose\" ></i>\n                    </div>\n                    <CModalBody className=\"px-5 py-5 d-flex justify-content-between flex-column\">\n                        <div>\n                            <div>\n                                <label className={`${isSuccess.textColor} LatoBold mr-2 h5 mb-3`}>{isSuccess.title}</label> <span><i className={`${isSuccess.headerIcon}`}></i></span>\n                            </div>\n                            <div className='text mb-3'>{isSuccess.message1}</div>\n                        </div>\n                        <div style={{ backgroundColor: '#F5F7FA', opacity: 1 }} className={`w-100 border rounded px-3 pt-3 pb-3 mb-3 ${success ? null : 'd-none'}`}>\n                            <div className='mb-0'>\n                                <div className={`mr-1 ${success ? null : 'd-none'}`}>\n                                    <div style={{ wordWrap: 'break-word', opacity: 1, height: true ? false : 0 }} className={`mr-1`}>\n                                        <div className={`h5 text mb-3 ${success ? null : 'd-none'}`}>{isSuccess.date}</div>\n                                        <div style={{ fontSize: '1rem' }} className={`${success ? null : 'd-none'} font-green`}>{`By ${isSuccess.userName}`}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{ fontSize: '1rem' }} className={`${!success ? null : 'd-none'} text mb-3`}>{`${isSuccess.message3}`}</div>\n                        <div style={{ fontSize: '1rem' }} className={`${!success ? null : 'd-none'} text mb-3`}>{`${isSuccess.message2}`}</div>\n                        <div className='w-100 d-flex '>\n                            <CButton onClick={() => status?.code === 500 ? window.location.reload() : setShow(false)} className={`no-shadow px-5 mr-4 mb-3 ${isSuccess.button}`}>\n                                {isSuccess.buttonText}\n                            </CButton>\n                        </div>\n                    </CModalBody>\n                </CModal>\n            </CCol>\n        </CRow >\n    );\n};\n\nexport default Saved;\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useDimension } from 'Page/StockEntry/GeneralServices/'\nimport CustomTable from 'Component/CustomTable'\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\nimport { getSyncHistories, syncAllHistories } from 'apiServices'\nimport { activeStockTableHeader, data } from './services'\nimport Saved from './Saved'\n\nconst { height, emptyItem, width, isMobile } = useDimension(200)\nconst tableHeight = height + 50\nconst customTableClass = isMobile ? 'target-movement-mobile' : 'target-movement'\n\nconst ActiveStock = (props) => {\n    const dispatch = useDispatch()\n    const status = useSelector((state) => state.status);\n    const syncHistories = useSelector(state => state.syncHistories)\n    const userName = useSelector(state => state.user.email)\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\n    const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n    // const showSubmit = process.env.REACT_APP_API_URL === 'https://inventory-management-oss-prd.apps.aws.sayurbox.io/' ? false : true\n    const showSubmit = true\n    const [submit, setSubmit] = useState()\n    useEffect(_ => {\n        getSyncHistories({ dispatch, warehouseUuid })\n    }, [])\n\n    if (thereAreRequest !== 0 && !syncHistories?.length) return (\n        <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem + 200, maxHeight: emptyItem + 200 }}>\n            <img className=\"loading\" src={loading} alt=\"loading\" />\n        </div>\n    )\n    return (\n        <div className=\"bg-white border radius-all w-100 active-stock\" style={{ minHeight: height, height: height, maxHeight: height }} >\n            <Saved isSaved={true} submit={submit} setSubmit={(value) => setSubmit(value)} thereAreRequest={thereAreRequest} userName={userName} status={status} />\n            {/* <PopUp status={status} /> */}\n            <div style={{ minHeight: tableHeight }}>\n                <CustomTable\n                    onClick={(v) => props.history.push(`/settings/active-stock/${v?.id}`)}\n                    editColumn={'false'}\n                    className={`${customTableClass} pointer`}\n                    styles={{ color: 'red', textAlign: 'right', width: '100%', maxHeight: tableHeight }}\n                    data={syncHistories?.length ? syncHistories : []}\n                    columns={activeStockTableHeader} />\n            </div>\n\n            <div className='w-100 d-flex justify-content-end'>\n                <button onClick={() => syncAllHistories({ warehouseUuid, setSubmit })} type=\"button\" className={`${showSubmit ? null : 'd-none'} btn px-5 mt-3 sku-item no-shadow text-white ${!thereAreRequest && syncHistories?.length ? \"bg-green\" : \"bg-lineGrey\"}`}>{thereAreRequest ? 'Processing...' : 'Update Stock Active'}</button>\n            </div>\n        </div >\n    )\n}\n\nexport default ActiveStock","import ReactTable from 'react-table-v6'\nimport 'react-table-v6/react-table.css'\nimport './CustomTable.scss'\nimport React from 'react'\n\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\n\nclass CustomTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            activeTab: '1',\n            editColumnTemp: {},\n        }\n    }\n\n    getColumnWidth = (rows, accessor, headerText) => {\n        const cellLength = Math.max(\n            ...rows.map(row => {\n                let value = '';\n                value = accessor(row);\n                if (typeof value === 'number') return value.toString().length;\n                return (value || '').length;\n            }),\n            headerText.length\n        );\n        return cellLength * 12\n    }\n\n    headerIcon = (data, header, editColumn) => {\n        let listHeader = []\n        header && header.map((h, index) => {\n            if (!editColumn[index]) {\n                let withIcon = (<span>\n                    {h.Header} <i className=\"iconU-sort\"> </i>\n                </span>\n                )\n                let obj = {\n                    Header: withIcon,\n                    Cell: h.Cell,\n                    accessor: h.accessor,\n                    sortable: h.sortable === false ? false : true,\n                    resizable: h.resizable || false,\n                    className: h.className || null,\n                    headerClassName: h.headerClassName || null,\n                    style: h.style || null,\n                    width: h.width || null,\n                }\n                listHeader = [...listHeader, obj]\n                return listHeader\n            } else {\n                listHeader = [...listHeader]\n                return listHeader\n            }\n        })\n\n        if (this.props.editColumn !== 'false') {\n            let editBtn = (\n                <i className='iconU-tableEdit pencilTable' />\n            )\n            let obj = {\n                Header: editBtn,\n                accessor: 'editBtn',\n                width: 50,\n                style: { textAlign: 'center' },\n            };\n            listHeader = [...listHeader, obj];\n        }\n\n        return listHeader;\n    };\n\n    render() {\n        const { editColumnTemp } = this.state\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\n        return (\n\n            <React.Fragment>\n                <ReactTableFixedColumns\n                    className={className}\n                    columns={headerIcon}\n                    data={data}\n                    showPagination={false}\n                    style={styles}\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\n                    minRows='0'\n                    resizable={false}\n                    getTdProps={(state, rowInfo, column, instance) => {\n                        return {\n                            onClick: (e, handleOriginal) => {\n                                !!onClick &&\n                                    onClick(rowInfo.original, state, column, e, instance);\n                            },\n                            style: {\n                                height: \"3rem\",\n                                cursor: !!onClick && 'pointer',\n                                textAlign: isNaN(rowInfo?.original[column.id])\n                                    ? 'left'\n                                    : 'right',\n                            },\n                        };\n                    }}\n                    defaultPageSize={50}\n                />\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default CustomTable","export const activeStockTableHeader = [\n    { width: '100%', Header: 'SYNC DATE', placeholder: 'Sync Date', accessor: 'updatedAt', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\n    { width: '100%', Header: 'USER', placeholder: 'User', accessor: 'createdBy' },\n    { width: '100%', Header: 'MODULE', placeholder: 'Module', accessor: 'module', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-start' }, },\n    { width: '100%', Header: 'MESSAGE RESPONSE', placeholder: 'Message Response', accessor: 'responseMessage', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\n]\n\nexport const activeStockTableHeaderDetail = [\n    { width: '100%', Header: 'SKU DESCRIPTION', placeholder: 'Sku Description', accessor: 'skuDescription', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\n    { width: '100%', Header: 'SKU NUMBER', placeholder: 'Sku Number', accessor: 'skuNumber' },\n    { width: '100%', Header: 'REASON', placeholder: 'Reason', accessor: 'reason', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\n]\n\nexport const data = [\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n]\n"],"sourceRoot":""}