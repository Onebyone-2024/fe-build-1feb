{"version":3,"sources":["Page/ConfigModules/Settings/ActiveStockDetail.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/CustomTable/index.jsx","Page/ConfigModules/Settings/services.js"],"names":["height","emptyItem","width","isMobile","useDimension","tableHeight","customTableClass","ActiveStockDetail","props","detail","setDetail","useState","history","useHistory","status","useSelector","state","thereAreRequest","id","location","pathname","split","pop","useEffect","_","getSyncHistoriesDetail","length","React","createElement","className","style","minHeight","maxHeight","PopUp","CustomTable","editColumn","concat","styles","color","textAlign","data","columns","activeStockTableHeaderDetail","onClick","goBack","type","src","loading","alt","_ref","refresh","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","dispatch","useDispatch","code","message","show","setShow","window","onkeydown","e","keyCode","CRow","CCol","CModal","closeOnBackdrop","onClose","success","name","STATUS","size","bodyOpenClassName","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","_ref2","reload","refreshPage","parentOncCloseFunction","ReactTableFixedColumns","withFixedColumns","ReactTable","Component","constructor","super","getColumnWidth","rows","accessor","headerText","Math","max","map","row","value","toString","headerIcon","header","listHeader","h","index","obj","Header","Cell","sortable","resizable","headerClassName","this","showModal","activeTab","editColumnTemp","render","tableStatus","Fragment","showPagination","noDataText","minRows","getTdProps","rowInfo","column","instance","handleOriginal","original","cursor","isNaN","defaultPageSize","activeStockTableHeader","placeholder","display","justifyContent"],"mappings":"4KAAA,0GAUA,MAAM,OAAEA,EAAM,UAAEC,EAAS,MAAEC,EAAK,SAAEC,GAAaC,YAAa,KACtDC,EAAcL,EAAS,GACvBM,EAAmBH,EAAW,yBAA2B,kBA0ChDI,UAxCYC,IACvB,MAAOC,EAAQC,GAAaC,mBAAS,IAC/BC,EAAUC,cACVC,EAASC,YAAaC,GAAUA,EAAMF,QACtCG,EAAkBF,YAAYC,GAASA,EAAMC,iBAC7CC,EAAKV,EAAMW,SAASC,SAASC,MAAM,KAAKC,MAM9C,OAJAC,oBAAUC,IACFN,GAAIO,YAAuB,CAAEf,YAAWQ,QAC7C,CAACA,IAEoB,IAApBD,IAAgC,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQiB,QAOlCC,IAAAC,cAAA,OAAKC,UAAU,gDAAgDC,MAAO,CAAEC,UAAW/B,EAAQA,OAAQA,EAAQgC,UAAWhC,IAClH2B,IAAAC,cAACK,IAAK,CAACnB,OAAQA,IACfa,IAAAC,cAAA,OAAKE,MAAO,CAAEC,UAAW1B,GAAewB,UAAU,UACvC,OAANpB,QAAM,IAANA,OAAM,EAANA,EAAQiB,QAASC,IAAAC,cAACM,IAAW,CAC1BC,WAAY,QACZN,UAAS,GAAAO,OAAK9B,EAAgB,YAC9B+B,OAAQ,CAAEC,MAAO,MAAOC,UAAW,QAASrC,MAAO,OAAQ8B,UAAW3B,GACtEmC,MAAY,OAAN/B,QAAM,IAANA,OAAM,EAANA,EAAQiB,QAASjB,EAAS,GAChCgC,QAASC,MACTf,IAAAC,cAAA,OACIE,MAAO,CAAEC,UAAW1B,GAAewB,UAAU,qFAAoF,+CAK7IF,IAAAC,cAAA,OAAKC,UAAU,oCACXF,IAAAC,cAAA,UAAQe,QAASA,IAAM/B,EAAQgC,SAAUC,KAAK,SAAShB,UAAS,wDAA0D,UAtBlIF,IAAAC,cAAA,OAAKC,UAAU,gGAAgGC,MAAO,CAAEC,UAAW9B,EAAY,IAAK+B,UAAW/B,EAAY,MACvK0B,IAAAC,cAAA,OAAKC,UAAU,UAAUiB,IAAKC,IAASC,IAAI,e,+GCmKxCf,IA9KDgB,IAiBP,IAjBQ,QACbC,EAAO,OACPpC,EAAM,KACNqC,EAAI,cACJC,GAAgB,EAAK,MACrBC,EAAQ,GAAE,kBACVC,EAAoB,SAAQ,kBAC5BC,EAAoB,SAAQ,kBAC5BC,EAAoB,gBAAe,kBACnCC,EAAoB,gBAAe,kBACnCC,EAAoB,KAAI,UACxBC,EAAY,MAAK,KACjBC,EAAO,KAAI,KACXC,EAAO,KAAI,gBACXC,EAAkB,KAAI,gBACtBC,GAAkB,EAAI,aACtBC,GACDf,EACC,MAAMgB,EAAWC,cACI,OAAX,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQqD,QACVhB,EAAO,aACPE,EAAQ,eACRC,EAAoB,YACpBC,EAAoB,yBACpBI,EAAY,MACZC,EAAa,OAAN9C,QAAM,IAANA,OAAM,EAANA,EAAQsD,QACfP,EACE,+EACFL,EAAoB,WACpBJ,GAAgB,EAChBW,GAAkB,GAEC,OAAX,OAANjD,QAAM,IAANA,OAAM,EAANA,EAAQqD,QACVhB,EAAO,iBACPE,EAAQ,kBACRC,EAAoB,YACpBC,EAAoB,yBACpBI,EAAY,MACZC,EAAa,OAAN9C,QAAM,IAANA,OAAM,EAANA,EAAQsD,QACfP,EACE,+EACFL,EAAoB,WACpBJ,GAAgB,EAChBW,GAAkB,GAEC,OAAX,OAANjD,QAAM,IAANA,OAAM,EAANA,EAAQqD,QACVhB,EAAO,iBACPE,EAAQ,eACRC,EAAoB,YACpBC,EAAoB,yBACpBI,EAAY,MACZC,EAAa,OAAN9C,QAAM,IAANA,OAAM,EAANA,EAAQsD,QACfP,EACE,+EACFL,EAAoB,WACpBJ,GAAgB,EAChBW,GAAkB,GAEC,OAAX,OAANjD,QAAM,IAANA,OAAM,EAANA,EAAQqD,QACVd,EAAQ,uCACRC,EAAoB,YACpBC,EAAoB,yBACpBI,EAAY,MACZC,EAAa,OAAN9C,QAAM,IAANA,OAAM,EAANA,EAAQsD,QACfP,EACE,+EACFL,EAAoB,WACpBJ,GAAgB,EAChBW,GAAkB,GAGpB,MAAOM,EAAMC,GAAW3D,mBAASyC,GAWjC,OATA7B,oBAAU,KAER+C,EAAQlB,IACP,CAACA,IAEJ7B,oBAAU,OACP,CAAC8C,IAEJE,OAAOC,UAAYC,GAAmB,KAAdA,EAAEC,QAAiBJ,GAAQ,GAAS,KAE1D3C,IAAAC,cAAC+C,IAAI,CAAC9C,UAAS,GAAAO,OAAKiC,EAAO,KAAO,WAChC1C,IAAAC,cAACgD,IAAI,KACHjD,IAAAC,cAACiD,IAAM,CACLR,KAAMA,EACNS,iBAAiB,EACjBC,QAASA,KACPT,GAAQ,GACsB,oBAAlBN,GAA8BA,EAAa,CAAEgB,QAAS,KAAMC,KAAM,OAC9EhB,EAAS,CAAEpB,KAAMqC,IAAQpE,OAAQ,OAC7BgD,GACFA,KAGJqB,KAAK,KACLrD,MAAO,CAAEC,UAAW,SACpBqD,kBAAkB,OAUlBzD,IAAAC,cAAA,OAAKC,UAAU,2BACbF,IAAAC,cAAA,KACEC,UAAU,6BACVc,QAASA,KACP2B,GAAQ,GACsB,oBAAlBN,GAA8BA,EAAa,CAAEgB,QAAS,KAAMC,KAAM,OAC9EhB,EAAS,CAAEpB,KAAMqC,IAAQpE,OAAQ,OAC7BgD,GACFA,QAKRnC,IAAAC,cAACyD,IAAY,CAACxD,UAAU,yBACtBF,IAAAC,cAAC0D,IAAW,CAACzD,UAAS,iBAAAO,OAAmBuB,IACtCN,EAAM,IAAC1B,IAAAC,cAAA,YAAMD,IAAAC,cAAA,KAAGC,UAAS,MAAAO,OAAQe,QAGtCxB,IAAAC,cAAC2D,IAAU,CAAC1D,UAAU,aACpBF,IAAAC,cAAA,KAAGC,UAAU,aAAa+B,GAC1BjC,IAAAC,cAAA,KAAGC,UAAU,QAAQgC,IAGvBlC,IAAAC,cAAC4D,IAAY,CAAC3D,UAAU,oDACrByB,EACC3B,IAAAC,cAAC6D,IAAO,CACN5D,UAAS,GAAAO,OAAKoB,EAAiB,kCAC/Bb,QAASA,KACHoB,EACuB,oBAAbb,EAAyBA,ICjJ9BwC,KAAyB,IAAxB,QAAExC,GAAU,GAAMwC,GAC5B,IAAZxC,GACFqB,OAAOpD,SAASwE,QAAO,IDgJFC,CAAY,CAAE1C,SAAS,IC1JzBD,KAA0C,IAAzC,QAAEqB,EAAO,uBAAEuB,GAAwB5C,EACzDqB,GAAQ,GACJuB,GACFA,KDyJgBd,CAAQ,CACNT,UACAuB,uBAAwB/B,IAG5BG,EAAS,CAAEpB,KAAMqC,IAAQpE,OAAQ,SAGlCwC,GAED,KACHC,EACC5B,IAAAC,cAAC6D,IAAO,CACN5D,UAAS,GAAAO,OAAKqB,EAAiB,4CAC/Bd,QAASA,KACHe,GACFA,IACAY,GAAQ,IAERA,GAAQ,KAKXf,GAED,KAAM,U,iCEtLtB,sEAOA,MAAMuC,EAAyBC,IAAiBC,KAEhD,MAAM9D,UAAoBP,IAAMsE,UAC5BC,YAAY1F,GACR2F,MAAM3F,GAAO,KAQjB4F,eAAiB,CAACC,EAAMC,EAAUC,IAUV,GATDC,KAAKC,OACjBJ,EAAKK,IAAIC,IACR,IAAIC,EAAQ,GAEZ,OADAA,EAAQN,EAASK,GACI,kBAAVC,EAA2BA,EAAMC,WAAWnF,QAC/CkF,GAAS,IAAIlF,SAEzB6E,EAAW7E,QAGlB,KAEDoF,WAAa,CAACtE,EAAMuE,EAAQ5E,KACxB,IAAI6E,EAAa,GA0BjB,GAzBAD,GAAUA,EAAOL,IAAI,CAACO,EAAGC,KACrB,GAAK/E,EAAW+E,GAoBZ,OADAF,EAAa,IAAIA,GACVA,EApBa,CACpB,IAIIG,EAAM,CACNC,OALYzF,IAAAC,cAAA,YACXqF,EAAEG,OAAO,IAACzF,IAAAC,cAAA,KAAGC,UAAU,cAAa,MAKrCwF,KAAMJ,EAAEI,KACRf,SAAUW,EAAEX,SACZgB,UAAyB,IAAfL,EAAEK,SACZC,UAAWN,EAAEM,YAAa,EAC1B1F,UAAWoF,EAAEpF,WAAa,KAC1B2F,gBAAiBP,EAAEO,iBAAmB,KACtC1F,MAAOmF,EAAEnF,OAAS,KAClB5B,MAAO+G,EAAE/G,OAAS,MAGtB,OADA8G,EAAa,IAAIA,EAAYG,GACtBH,KAOe,UAA1BS,KAAKjH,MAAM2B,WAAwB,CACnC,IAGIgF,EAAM,CACNC,OAHAzF,IAAAC,cAAA,KAAGC,UAAU,gCAIbyE,SAAU,UACVpG,MAAO,GACP4B,MAAO,CAAES,UAAW,WAExByE,EAAa,IAAIA,EAAYG,GAGjC,OAAOH,GA5DPS,KAAKzG,MAAQ,CACT0G,WAAW,EACXC,UAAW,IACXC,eAAgB,IA4DxBC,SACI,MAAM,eAAED,GAAmBH,KAAKzG,MAChC,IAAI,QAAEyB,EAAO,KAAED,EAAI,QAAEG,EAAO,OAAEN,EAAM,YAAEyF,EAAW,UAAEjG,GAAc4F,KAAKjH,MAClEsG,EAAaW,KAAKX,WAAWtE,EAAMC,EAASmF,GAChD,OAEIjG,IAAAC,cAACD,IAAMoG,SAAQ,KACXpG,IAAAC,cAACkE,EAAsB,CACnBjE,UAAWA,EACXY,QAASqE,EACTtE,KAAMA,EACNwF,gBAAgB,EAChBlG,MAAOO,EACP4F,WAA2B,UAAfH,EAA0B,cAAgB,iBACtDI,QAAQ,IACRX,WAAW,EACXY,WAAYA,CAACnH,EAAOoH,EAASC,EAAQC,KAC1B,CACH3F,QAASA,CAAC8B,EAAG8D,KACP5F,GACEA,EAAQyF,EAAQI,SAAUxH,EAAOqH,EAAQ5D,EAAG6D,IAEpDxG,MAAO,CACH9B,OAAQ,OACRyI,SAAU9F,GAAW,UACrBJ,UAAWmG,MAAa,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASI,SAASH,EAAOnH,KACpC,OACA,WAIlByH,gBAAiB,OAQtBzG,O,uDClHf,oEAAO,MAAM0G,EAAyB,CAClC,CAAE1I,MAAO,OAAQkH,OAAQ,YAAayB,YAAa,YAAavC,SAAU,YAAaxE,MAAO,CAAES,UAAW,OAAQuG,QAAS,QAASC,eAAgB,eACrJ,CAAE7I,MAAO,OAAQkH,OAAQ,OAAQyB,YAAa,OAAQvC,SAAU,aAChE,CAAEpG,MAAO,OAAQkH,OAAQ,SAAUyB,YAAa,SAAUvC,SAAU,SAAUxE,MAAO,CAAES,UAAW,QAASuG,QAAS,OAAQC,eAAgB,eAC5I,CAAE7I,MAAO,OAAQkH,OAAQ,mBAAoByB,YAAa,mBAAoBvC,SAAU,kBAAmBxE,MAAO,CAAES,UAAW,mBAAoBuG,QAAS,OAAQC,eAAgB,cAAgBlH,UAAW,cAAe2F,gBAAiB,gBAGtO9E,EAA+B,CACxC,CAAExC,MAAO,OAAQkH,OAAQ,kBAAmByB,YAAa,kBAAmBvC,SAAU,iBAAkBxE,MAAO,CAAES,UAAW,OAAQuG,QAAS,QAASC,eAAgB,eACtK,CAAE7I,MAAO,OAAQkH,OAAQ,aAAcyB,YAAa,aAAcvC,SAAU,aAC5E,CAAEpG,MAAO,OAAQkH,OAAQ,SAAUyB,YAAa,SAAUvC,SAAU,SAAUxE,MAAO,CAAES,UAAW,mBAAoBuG,QAAS,OAAQC,eAAgB,cAAgBlH,UAAW,cAAe2F,gBAAiB","file":"static/js/55.d24fee6b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDimension } from 'Page/StockEntry/GeneralServices/'\nimport CustomTable from 'Component/CustomTable'\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\nimport { getSyncHistoriesDetail } from 'apiServices'\nimport { activeStockTableHeaderDetail, data } from './services'\nimport PopUp from \"Component/Modal/PopUp\";\nimport { useHistory } from 'react-router';\n\nconst { height, emptyItem, width, isMobile } = useDimension(200)\nconst tableHeight = height + 50\nconst customTableClass = isMobile ? 'target-movement-mobile' : 'target-movement'\n\nconst ActiveStockDetail = (props) => {\n    const [detail, setDetail] = useState([])\n    const history = useHistory()\n    const status = useSelector((state) => state.status);\n    const thereAreRequest = useSelector(state => state.thereAreRequest);\n    const id = props.location.pathname.split(\"/\").pop()\n\n    useEffect(_ => {\n        if (id) getSyncHistoriesDetail({ setDetail, id })\n    }, [id])\n\n    if (thereAreRequest !== 0 && !detail?.length) return (\n        <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem + 200, maxHeight: emptyItem + 200 }}>\n            <img className=\"loading\" src={loading} alt=\"loading\" />\n        </div>\n    )\n\n    return (\n        <div className=\"bg-white border radius-all w-100 active-stock\" style={{ minHeight: height, height: height, maxHeight: height }} >\n            <PopUp status={status} />\n            <div style={{ minHeight: tableHeight }} className='w-100'>\n                {detail?.length ? <CustomTable\n                    editColumn={'false'}\n                    className={`${customTableClass} pointer`}\n                    styles={{ color: 'red', textAlign: 'right', width: '100%', maxHeight: tableHeight }}\n                    data={detail?.length ? detail : []}\n                    columns={activeStockTableHeaderDetail} /> :\n                    <div\n                        style={{ minHeight: tableHeight }} className='emptyTextField d-flex flex-column justify-content-center align-items-center w-100'>\n                        No Data. Please select another Transaction\n                    </div>}\n            </div>\n\n            <div className='w-100 d-flex justify-content-end'>\n                <button onClick={() => history.goBack()} type=\"button\" className={`btn px-5 mt-3 sku-item no-shadow text-white bg-green`}>Back</button>\n            </div>\n        </div >\n    )\n}\n\nexport default ActiveStockDetail","import React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport \"./index.scss\";\nimport { onClose, refreshPage } from \"./services.js\";\nimport { useDispatch } from \"react-redux\";\nimport { STATUS } from \"apiServices/action\";\n\nconst PopUp = ({\n  refresh,\n  status,\n  icon,\n  statusDisplay = false,\n  title = \"\",\n  cancelButtonTitle = \"Cancel\",\n  actionButtonTitle = \"Submit\",\n  cancelButtonClass = \"bg-background\",\n  actionButtonClass = \"bg-background\",\n  actionButtonEvent = null,\n  colorText = \"red\",\n  msg1 = null,\n  msg2 = null,\n  onCloseFunction = null,\n  refreshOnCancel = true,\n  setIsSuccess\n}) => {\n  const dispatch = useDispatch();\n  if (status?.code === 500 ) {\n    icon = \"em-pensive\"\n    title = \"Server Error\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = true;\n  }\n  if (status?.code === 408 ) {\n    icon = \"em-alarm_clock\"\n    title = \"Request Timeout\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = true;\n  }\n  if (status?.code === 400 ) {\n    icon = \"em-alarm_clock\"\n    title = \"Server Error\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = false;\n  }\n  if (status?.code === 404) {\n    title = \"Something wrong with the application\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = false;\n  }\n\n  const [show, setShow] = useState(statusDisplay);\n\n  useEffect(() => {\n    //from outside change\n    setShow(statusDisplay);\n  }, [statusDisplay]);\n\n  useEffect(() => {\n  }, [show]);\n\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\n  return (\n    <CRow className={`${show ? null : \"d-none\"}`}>\n      <CCol>\n        <CModal\n          show={show}\n          closeOnBackdrop={false}\n          onClose={() => {\n            setShow(false)\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\n            dispatch({ type: STATUS, status: null });\n            if (onCloseFunction) {\n              onCloseFunction()\n            }\n          }}\n          size=\"lg\"\n          style={{ minHeight: \"280px\" }}\n          bodyOpenClassName=\"p-3\"\n        >\n          {/* <div className='d-flex flex-row-reverse'>\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\n          </div>\n          <CModalHeader className=\"px-5 pt-3 border-none\">\n              <CModalTitle className={`text LatoBold ${colorText}`}>\n                {title}\n              </CModalTitle> */}\n\n          <div className=\"d-flex flex-row-reverse\">\n            <i\n              className=\"pr-3 pt-3 iconU-modalClose\"\n              onClick={() => {\n                setShow(false)\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\n                dispatch({ type: STATUS, status: null });\n                if (onCloseFunction) {\n                  onCloseFunction()\n                }\n              }}\n            ></i>\n          </div>\n          <CModalHeader className=\"px-5 pt-5 border-none\">\n            <CModalTitle className={`text LatoBold ${colorText}`}>\n              {title} <span><i className={`em ${icon}`}></i></span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody className=\"px-5 py-0\">\n            <p className=\"text mb-2\">{msg1}</p>\n            <p className=\"text\">{msg2}</p>\n          </CModalBody>\n\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\n            {cancelButtonTitle ? (\n              <CButton\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\n                onClick={() => {\n                  if (refreshOnCancel) {\n                    if (typeof (refresh) === 'function') refresh()\n                    else refreshPage({ refresh: true });\n                  } else {\n                    onClose({\n                      setShow,\n                      parentOncCloseFunction: onCloseFunction,\n                    });\n                  }\n                  dispatch({ type: STATUS, status: null });\n                }}\n              >\n                {cancelButtonTitle}\n              </CButton>\n            ) : null}\n            {actionButtonTitle ? (\n              <CButton\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\n                onClick={() => {\n                  if (actionButtonEvent) {\n                    actionButtonEvent();\n                    setShow(false);\n                  } else {\n                    setShow(false)\n                  }\n                }\n                }\n              >\n                {actionButtonTitle}\n              </CButton>\n            ) : null}{\" \"}\n          </CModalFooter>\n        </CModal>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default PopUp;\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\n  setShow(false);\n  if (parentOncCloseFunction) {\n    parentOncCloseFunction();\n  }\n\n};\n\nexport const refreshPage = ({ refresh = true }) => {\n  if (refresh === true) {\n    window.location.reload(false);\n  }\n};\n","import ReactTable from 'react-table-v6'\nimport 'react-table-v6/react-table.css'\nimport './CustomTable.scss'\nimport React from 'react'\n\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\n\nclass CustomTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            activeTab: '1',\n            editColumnTemp: {},\n        }\n    }\n\n    getColumnWidth = (rows, accessor, headerText) => {\n        const cellLength = Math.max(\n            ...rows.map(row => {\n                let value = '';\n                value = accessor(row);\n                if (typeof value === 'number') return value.toString().length;\n                return (value || '').length;\n            }),\n            headerText.length\n        );\n        return cellLength * 12\n    }\n\n    headerIcon = (data, header, editColumn) => {\n        let listHeader = []\n        header && header.map((h, index) => {\n            if (!editColumn[index]) {\n                let withIcon = (<span>\n                    {h.Header} <i className=\"iconU-sort\"> </i>\n                </span>\n                )\n                let obj = {\n                    Header: withIcon,\n                    Cell: h.Cell,\n                    accessor: h.accessor,\n                    sortable: h.sortable === false ? false : true,\n                    resizable: h.resizable || false,\n                    className: h.className || null,\n                    headerClassName: h.headerClassName || null,\n                    style: h.style || null,\n                    width: h.width || null,\n                }\n                listHeader = [...listHeader, obj]\n                return listHeader\n            } else {\n                listHeader = [...listHeader]\n                return listHeader\n            }\n        })\n\n        if (this.props.editColumn !== 'false') {\n            let editBtn = (\n                <i className='iconU-tableEdit pencilTable' />\n            )\n            let obj = {\n                Header: editBtn,\n                accessor: 'editBtn',\n                width: 50,\n                style: { textAlign: 'center' },\n            };\n            listHeader = [...listHeader, obj];\n        }\n\n        return listHeader;\n    };\n\n    render() {\n        const { editColumnTemp } = this.state\n        let { columns, data, onClick, styles, tableStatus, className } = this.props\n        let headerIcon = this.headerIcon(data, columns, editColumnTemp);\n        return (\n\n            <React.Fragment>\n                <ReactTableFixedColumns\n                    className={className}\n                    columns={headerIcon}\n                    data={data}\n                    showPagination={false}\n                    style={styles}\n                    noDataText={tableStatus == \"noData\" ? 'Please Wait' : 'No  Data Found'}\n                    minRows='0'\n                    resizable={false}\n                    getTdProps={(state, rowInfo, column, instance) => {\n                        return {\n                            onClick: (e, handleOriginal) => {\n                                !!onClick &&\n                                    onClick(rowInfo.original, state, column, e, instance);\n                            },\n                            style: {\n                                height: \"3rem\",\n                                cursor: !!onClick && 'pointer',\n                                textAlign: isNaN(rowInfo?.original[column.id])\n                                    ? 'left'\n                                    : 'right',\n                            },\n                        };\n                    }}\n                    defaultPageSize={50}\n                />\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default CustomTable","export const activeStockTableHeader = [\n    { width: '100%', Header: 'SYNC DATE', placeholder: 'Sync Date', accessor: 'updatedAt', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\n    { width: '100%', Header: 'USER', placeholder: 'User', accessor: 'createdBy' },\n    { width: '100%', Header: 'MODULE', placeholder: 'Module', accessor: 'module', style: { textAlign: 'right', display: 'flex', justifyContent: 'flex-start' }, },\n    { width: '100%', Header: 'MESSAGE RESPONSE', placeholder: 'Message Response', accessor: 'responseMessage', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\n]\n\nexport const activeStockTableHeaderDetail = [\n    { width: '100%', Header: 'SKU DESCRIPTION', placeholder: 'Sku Description', accessor: 'skuDescription', style: { textAlign: 'left', display: 'start', justifyContent: 'flex-start' } },\n    { width: '100%', Header: 'SKU NUMBER', placeholder: 'Sku Number', accessor: 'skuNumber' },\n    { width: '100%', Header: 'REASON', placeholder: 'Reason', accessor: 'reason', style: { textAlign: 'right !important', display: 'flex', justifyContent: 'flex-start' }, className: 'flex-adjust', headerClassName: 'flex-adjust' },\n]\n\nexport const data = [\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n\n    {\n        syncDate: '19:03 30-03-2021',\n        user: 'dev@onebyone.io',\n        module: 'Stock Take',\n        messageResponse: 'Synchronize failed'\n    },\n]\n"],"sourceRoot":""}