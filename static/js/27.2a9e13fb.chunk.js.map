{"version":3,"sources":["Component/FileUploaderStockTransfer/services.js","Component/FileUploaderStockTransfer/index.jsx","Page/StockEntry/StockTransfer/Upload/index.jsx","Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploadProgress/index.jsx"],"names":["templateDownload","document","getElementById","click","baseStyle","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","_ref","field","transaction","nextPage","type","isProgressDisplay","setIsProgressDisplay","React","useState","isProgressStatus","setIsProgressStatus","isProgressPercent","setIsProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","setIsCheckingSchema","isCheckingArea","setIsCheckingArea","isResetCsvPersist","setIsResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","dispatch","useDispatch","selectorWarehouseArea","useSelector","state","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","status","selectorDistinctSKUNumber","csvDistinctPOSKUInfoId","csvDistinctSKUNumber","selectorSkuCodeValidated","skuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","csvData","warehousesData","warehouseData","selectorPayloadPO","payloadPO","async","resetStatus","_ref5","STOK_TAKE_UPLOAD_JSON","csvFileName","VALIDATE_PO_SKU_INFO_ID","STATUS","resetCsvResist","warehouseUuid","user","getWarehouseArea","getOutboundType","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","useDropzone","noClick","onDropAccepted","file","e","name","split","fieldArray","map","obj","dataField","jsonArray","csvField","putCsvFieldJson","setIsJsonArray","i","reader","FileReader","data","Promise","resolve","reject","onload","bstr","evt","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","csv","parse","err","index","newObject","escapeString","csvArray2","string","includes","concat","toString","x","ret","length","csvObj","csvIndex","push","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","fileName","warehouseArea","outboundType","_ref2","warehouseCodeList","warehouseUuidList","warehouseNameList","d","code","id","wh_area_label","label","toUpperCase","wh_area_value","value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","text","replace","distinctPOSKUInfoId","distinctSKUNumber","distinctAreaSource","distinctAreaDestination","checkSchema","schemaRow","key","keys","console","clear","log","shift","emptyRow","fieldData","fieldIndex","undefined","indexOf","warehouseDestinationData","warehouseAreaData","areaDestinationData","outboundData","arr_grade","parseInt","ripeness","tmp_data","stat","isNaN","regex_date","match","wmsPoSkuCode","skuNumber","areaSource","qty","validateColumn","accept","style","useMemo","useEffect","validateSkuNumber","skuNumberData","bulk","_ref3","poSkuNumberValidated","poNewPayload","validatePoSkuStockTransfer","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","imageMd","uom","skuData","indexId","skuUuid","poSkuCode","warehouseSource","weight","validatePOCode","poSkuInfoValidated","_ref4","POSKUCodeID","cleanData","areaDestination","wmsPoSkuCodeStatus","skuValidatedData","isExist","isValid","inboundDate","wmsPoSkuCodeReason","errorMessage","tmp_sku_number","idx","photo","skuNumberStatus","skuNumberReason","rowStatus","rowReason","cleaningData","createElement","PopUp","onCloseFunction","statusDisplay","title","cancelButtonTitle","actionButtonTitle","colorText","refreshOnCancel","msg1","msg2","cancelButtonClass","actionButtonClass","actionButtonEvent","className","Object","assign","fontSize","onClick","FileUploadProgress","progressPercent","cancelHandler","cancelCsv","window","location","reload","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","withRouter","props","getWarehouses","element","filename","warehouseDestination","expiryDate","po","inputWeight","history","editable","sort","hidden","refresh","icon","setIsSuccess","message","show","setShow","onkeydown","keyCode","CRow","CCol","CModal","closeOnBackdrop","onClose","success","size","minHeight","bodyOpenClassName","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","refreshPage","parentOncCloseFunction","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax"],"mappings":"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","file":"static/js/27.2a9e13fb.chunk.js","sourcesContent":["/* eslint-disable array-callback-return */\nimport csv from \"csv\";\nimport * as XLSX from \"xlsx\";\nimport {\n  STOK_TAKE_UPLOAD_JSON,\n  VALIDATE_PO_SKU_INFO_ID,\n  STATUS,\n} from \"apiServices/action\"; \n \n\nexport const templateDownload = () => {\n  document.getElementById(\"download-template-xls\").click();\n};\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\n  return new Promise((resolve, reject) => {\n    let i = 0;\n    let jsonArray = [];\n    const reader = new FileReader();\n    reader.onload = () => {\n      csv.parse(reader.result, (err, data) => {\n        if (data.length > 2001) {\n          //why 2001? , because line 1 is header\n          setIsProgressPercent(0);\n          resolve(false);\n        }\n        data.map((obj, index) => {\n          if (index === 0) {\n            i++;\n            return false; // skip\n          }\n\n          let newObject = {};\n          newObject[\"id\"] = index;\n\n          let csvArray = data[i].toString().split(\";\");\n          csvArray.map((csvObj, csvIndex) => {\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\n          });\n          i++;\n          jsonArray.push(newObject);\n\n          //count percent\n          let percentage = ((index + 1) * 25) / data.length;\n          setIsProgressPercent(Math.ceil(percentage));\n        });\n      });\n    };\n\n    //checking\n    setTimeout(() => {\n      resolve(jsonArray);\n    }, 200);\n    reader.readAsBinaryString(e[0]);\n  });\n};\n\nexport const xlsReader = async (\n  e,\n  fieldArray,\n  setIsProgressPercent,\n  setIsJsonArray,\n  dispatch\n) => {\n  let i = 0;\n  let jsonArray = [];\n  const reader = new FileReader();\n  let data = null;\n\n  return new Promise((resolve, reject) => {\n    reader.onload = async (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      /* Update state */\n\n      await csv.parse(data, (err, data) => {  \n        // if (data.length > 2001) {\n        //   //why 2001? , because line 1 is header\n        //   setIsProgressPercent(0);\n        //   resolve(false);\n        // } \n        data.map((obj, index) => {\n          let newObject = {};\n          newObject[\"id\"] = index;\n          // let csvArray = data[i].toString().split(\",\");  \n          let escapeString = [];\n          let csvArray2 = null;\n\n          if(i===0){\n            escapeString = data[i].map((string,i) => string.includes(\",\")  ?  `\\\"${string}\\\"` : `${string}`); \n            csvArray2 = escapeString.toString().split(',');   \n          }else{ \n            escapeString = data[i].map((string,x) => { \n              let ret = null;\n              if(string.includes(\",\")){\n                ret =  `\\\"${string}\\\"`;\n              }else if(x === 0){\n                ret = `${string}\"`;\n              }else if( x===data[i].length-1){\n                ret = `\"${string}`\n              }else{\n                ret = `\"${string}\"`\n              }\n              return ret; \n              // string.includes(\",\")  ?  `\\\"${string}\\\"` : (x === 0 || x===data.length-1  ? `${string}\"` : `\"${string}\"`)\n            }); \n            let x = escapeString.toString();\n            csvArray2 = x.split('\",\"');    \n          } \n \n          csvArray2.map((csvObj, csvIndex) => {\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\n          });\n          i++;\n          jsonArray.push(newObject);\n\n          //count percent\n          let percentage = ((index + 1) * 25) / data.length;\n          setIsProgressPercent(Math.ceil(percentage));\n        });\n      });\n\n      //checking\n      setTimeout(() => {\n        resolve(jsonArray);\n      }, 200);\n    };\n\n    reader.readAsBinaryString(e[0]);\n  });\n};\n\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\n};\n\nexport const validateColumn = async ({\n  field,\n  jsonArray,\n  setIsProgressPercent,\n  setModalShow,\n  fileName,\n  dispatch,\n  warehouseArea,\n  warehouseUuid,\n  outboundType,\n  setIsCheckingSchema,\n  setIsCheckingArea,\n  warehousesData,\n}) => {\n\n  // New Payload PO\n  let payloadPO = [];\n\n  //warehouse\n  let warehouseCodeList = [];\n  let warehouseUuidList = [];\n  let warehouseNameList = [];\n  if (warehousesData) {\n    warehousesData.data.map((d) => {\n      warehouseCodeList.push(d.code);\n      warehouseUuidList.push(d.id);\n      warehouseNameList.push(d.name);\n    });\n  }\n\n  //warehouse area\n  let wh_area_label = !warehouseArea\n    ? []\n    : warehouseArea.map((data) => data.label.toUpperCase());\n  let wh_area_value = !warehouseArea\n    ? []\n    : warehouseArea.map((data) => data.value);\n  let wh_outboundtype_label = !outboundType\n    ? []\n    : outboundType.map((data) => data.label.toUpperCase());\n  let wh_outboundtype_value = !outboundType\n    ? []\n    : outboundType.map((data) => data.value);\n  let csv_schema = !field\n    ? []\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\n  let distinctPOSKUInfoId = [];\n  let distinctSKUNumber = [];\n  let distinctAreaSource = [];\n  let distinctAreaDestination = [];\n\n  // check schema\n  let checkSchema = true;\n  let i = 0;\n  const schemaRow = jsonArray[0];\n  for (var key in schemaRow) {\n    if (key == \"id\") {\n      continue;\n    }\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\n    if (\n      key !== \"undefined\" &&\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\n    ) {\n      console.clear();\n      console.log(\"--Schema Not Same--\");\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\n      console.log(\"File SChema : \", keys);\n      checkSchema = false;\n      setIsCheckingSchema(false);\n      return 0;\n    }\n    i++;\n  }\n\n  jsonArray.shift();\n  await jsonArray.map((data, index) => {\n    let emptyRow = true; // if empty row dont show\n    field.map((fieldData, fieldIndex) => {\n      //if null then return\n      if (fieldData === undefined || fieldData === null) {\n        return;\n      } \n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\" ) {\n        return;\n      } else if (fieldData.dataField !== \"id\") {\n        emptyRow = false;\n      }\n      // end checking empty\n\n      //set warehouse id\n      data[\"warehouseSource\"] = warehouseUuid;\n\n      //checking warehouse\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\n          data[\"warehouseUuid\"] = \"\";\n          data[\"warehouseName\"] = \"\";\n          return;\n        } else {\n          let warehouseData = warehouseCodeList.indexOf(data[fieldData.dataField]);\n          data[\"warehouseUuid\"] = warehouseUuidList[warehouseData];\n          data[\"warehouseName\"] = warehouseNameList[warehouseData];\n        }\n      }\n\n      //checing warehouse Destination\n      if (warehouseCodeList && fieldData.dataField == \"warehouseDestination\") {\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\n          data[\"warehouseDestinationUuid\"] = \"\";\n          data[\"warehouseDestinationName\"] = \"\";\n          return;\n        } else {\n          let warehouseDestinationData = warehouseCodeList.indexOf(data[fieldData.dataField]);\n          data[\"warehouseDestinationUuid\"] = warehouseUuidList[warehouseDestinationData];\n          data[\"warehouseDestinationName\"] = warehouseNameList[warehouseDestinationData];\n        }\n      }\n\n      //checking warehouse area\n      if (fieldData.dataField == \"areaName\") {\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\n          data[\"areaSource\"] = null;\n          return;\n        } else {\n          let warehouseAreaData = wh_area_label.indexOf(\n            data[fieldData.dataField].toUpperCase()\n          );\n          data[\"areaSource\"] = wh_area_value[warehouseAreaData];\n\n          if (!distinctAreaSource.includes(wh_area_value[warehouseAreaData])) {\n            distinctAreaSource.push(wh_area_value[warehouseAreaData]);\n          }\n        }\n      }\n\n      if (fieldData.dataField == \"areaNameDestination\") {\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\n          data[\"areaDestination\"] = null;\n          return;\n        } else {\n          let areaDestinationData = wh_area_label.indexOf(\n            data[fieldData.dataField].toUpperCase()\n          );\n          data[\"areaDestination\"] = wh_area_value[areaDestinationData];\n\n          if (!distinctAreaDestination.includes(wh_area_value[areaDestinationData])) {\n            distinctAreaDestination.push(wh_area_value[areaDestinationData]);\n          }\n        }\n      }\n\n      //checking outbound type\n      if (\n        wh_outboundtype_value.length > 0 &&\n        fieldData.dataField == \"outboundType\"\n      ) {\n        if (\n          !wh_outboundtype_label.includes(\n            data[fieldData.dataField].toUpperCase()\n          )\n        ) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\n          data[\"outboundTypeCode\"] = null;\n          return;\n        } else {\n          let outboundData = wh_outboundtype_label.indexOf(\n            data[fieldData.dataField].toUpperCase()\n          );\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[outboundData];\n        }\n      }\n\n      //newgrade\n      if (fieldData.dataField == \"newGrade\") {\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\n        if (\n          data[fieldData.dataField] &&\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\n        ) {\n          //if not waste or semi waste\n          if (parseInt(data[fieldData.dataField])) {\n            //if number, check sku number\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\n              distinctSKUNumber.push(data[fieldData.dataField]);\n            }\n            data[fieldData.dataField + \"Status\"] = true;\n          } else if (data[fieldData.dataField] == \"\") {\n            //if null\n            data[fieldData.dataField + \"Status\"] = true;\n          } else {\n            //if not number => undefined\n            data[fieldData.dataField + \"Status\"] = false;\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\n          }\n        } else {\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\n        }\n      }\n\n      //set ripeness\n      let ripeness = null;\n      if (\n        (fieldData.dataField == \"ripenessLevel\" ||\n          fieldData.dataField == \"newRipeness\") &&\n        data[fieldData.dataField] !== undefined\n      ) {\n        let ripeness_ = data[fieldData.dataField].split(\" \");\n        ripeness = ripeness_[1];\n      }\n\n      //checking type\n      let tmp_data = data[fieldData.dataField];\n      let stat = null;\n      if (fieldData.type == \"number\") {\n        if (isNaN(tmp_data)) {\n          stat = false;\n        } else {\n          stat = true;\n\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\n              distinctPOSKUInfoId.push(tmp_data);\n            }\n          }\n\n          //distinct sku angka maka push ke array buat di cek\n          if (fieldData.dataField == \"skuNumber\") {\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\n              distinctSKUNumber.push(tmp_data);\n            }\n          }\n        }\n      } else if (fieldData.type == \"date_indo\") {\n        //checking date\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\n        if (tmp_data.match(regex_date)) {\n          stat = true;\n        } else {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[\n            fieldData.dataField + \"Reason\"\n          ] = `Date format must be 'dd-mm-yyyy'`;\n          return;\n        }\n      } else {\n        stat = true;\n      }\n\n      //grade can null\n      let canNull = [\n        \"grade\",\n        \"outboundReason\",\n        \"ripenessLevel\",\n        \"newRipeness\",\n        \"newGrade\",\n      ];\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\n        stat = true;\n      }\n\n      //check newGrade, jika angka maka cek ke distinct sku\n      if (fieldData.dataField == \"newGrade\") {\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\n          //if not waste or semi waste\n          if (parseInt(tmp_data)) {\n            //if number\n            stat = true;\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\n              distinctSKUNumber.push(tmp_data);\n            }\n          }\n        }\n      }\n\n      data[fieldData.dataField + \"Status\"] = stat;\n      if (!stat) {\n        data[\n          fieldData.dataField + \"Reason\"\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\n      } else {\n        data[fieldData.dataField + \"Reason\"] = \"\";\n      }\n\n      let percentage =\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\n        (parseInt(jsonArray.length) * 2);\n      setIsProgressPercent(Math.ceil(percentage));\n    });\n    data[\"emptyRow\"] = emptyRow; \n\n    // set payload PO\n    if(!emptyRow){\n      payloadPO.push({ \n          \"id\": data?.id || \"\",\n          \"poSkuCode\": data?.wmsPoSkuCode || \"\",\n          \"skuNumber\": data?.skuNumber || \"\",\n          \"skuUuid\": \"\",\n          \"warehouseSource\": data?.warehouseUuid || \"\" ,\n          \"areaSource\": data?.areaSource || \"\",\n          \"weight\": data?.qty  || \"\"\n      });   \n    } \n  });\n\n  console.log(payloadPO.length)\n  if (payloadPO.length > 2001) {\n    //why 2001? , because line 1 is header\n    setIsProgressPercent(0)\n    setModalShow(true)\n  } \n\n  setTimeout(() => {\n    console.log(\"payload PO\",payloadPO)\n  }, 4000);\n  \n  //checking area\n  if (distinctAreaSource.length > 1 || distinctAreaDestination.length > 1) {\n    console.log(\"area Destination :\" + distinctAreaDestination);\n    console.log(\"area Source :\" + distinctAreaSource);\n    setIsCheckingArea(false);\n    return;\n  }\n\n  //end checking type\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, payloadPO: payloadPO });\n  dispatch({\n    type: STOK_TAKE_UPLOAD_JSON,\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\n  });\n  dispatch({\n    type: STOK_TAKE_UPLOAD_JSON,\n    csvDistinctSKUNumber: distinctSKUNumber,\n  });\n};\n\nexport const validatePOCode = ({\n  poSkuNumberValidated,\n  poNewPayload,\n  validatePoSkuStockTransfer,\n  dispatch\n}) => {\n  if(!poSkuNumberValidated || !poNewPayload){\n      return;\n  }\n \n  //split sku number and skuUUid sku number\n  let skuNumberArray = [];\n  let skuUuidArray = [];\n  let skuPhotosArray = [];\n  let skuUomArray = [];\n  poSkuNumberValidated.map((data) => {\n    skuNumberArray.push(data.skuNumber);\n    skuUuidArray.push(data.id);\n    skuPhotosArray.push(data.imageMd);\n    skuUomArray.push(data.uom);\n  });\n\n  //renew payload\n  let newPO = poNewPayload.map((data) => {\n\n    //get sku UUID\n    let indexId = skuNumberArray.indexOf(data.skuNumber);\n    let skuUuid = null;\n    if(skuUuidArray[indexId]){\n      skuUuid = skuUuidArray[indexId];\n    }\n\n    return {\n      \"id\": data.id,\n      \"poSkuCode\": data.poSkuCode,\n      \"skuNumber\": data.skuNumber,\n      \"skuUuid\": skuUuid,\n      \"warehouseSource\": data.warehouseSource,\n      \"areaSource\": data.areaSource,\n      \"weight\": data.weight\n    } \n  });\n\n   validatePoSkuStockTransfer({\n    dispatch,\n    skuData: newPO,  \n  })\n\n}\n\nexport const cleaningData = async ({\n  poSkuInfoValidated,\n  poSkuNumberValidated,\n  csvData,\n  setIsProgressPercent,\n  dispatch,\n  status,\n  transaction,\n  setIsProgressStatus,\n  nextPage,\n}) => {\n  //checking\n  if (status === false || status === null) {\n    return 0;\n  }\n  if (\n    csvData === undefined ||\n    csvData === null ||\n    poSkuInfoValidated === null ||\n    poSkuInfoValidated === undefined ||\n    poSkuNumberValidated === null ||\n    poSkuNumberValidated === undefined\n  ) {\n    console.clear();\n    return 0;\n  }\n\n  //split data and id po sku code\n  const POSKUCodeID = []; \n  poSkuInfoValidated.map((d) => {\n    POSKUCodeID.push(d.id); \n  }); \n\n  //split sku number and skuUUid sku number\n  let skuNumberArray = [];\n  let skuUuidArray = [];\n  let skuPhotosArray = [];\n  let skuUomArray = [];\n  poSkuNumberValidated.map((data) => {\n    skuNumberArray.push(data.skuNumber);\n    skuUuidArray.push(data.id);\n    skuPhotosArray.push(data.imageMd);\n    skuUomArray.push(data.uom);\n  });\n\n  //cleaning data\n  let cleanData = [];\n  csvData.map((data, index) => {\n    //if empty row then skip\n    if (data.emptyRow === true) {\n      return 0;\n    }\n\n    //format fixing\n    data.areaSource = parseInt(data.areaSource);\n    data.areaDestination = parseInt(data.areaDestination); \n\n    //get validated data PO\n    let wmsPoSkuCodeStatus = false;\n    let indexId = POSKUCodeID.indexOf(data.id);\n    let skuValidatedData = poSkuInfoValidated[indexId];   \n    if(skuValidatedData){\n      if(skuValidatedData?.isExist && skuValidatedData?.isValid){\n        wmsPoSkuCodeStatus = true;\n      }\n      data.inboundDate = skuValidatedData?.inboundDate || \"\";\n      data.uom = skuValidatedData?.uom || \"\";\n      data.wmsPoSkuCodeStatus = wmsPoSkuCodeStatus || false;\n      data.wmsPoSkuCodeReason = skuValidatedData?.errorMessage || \"\";\n    }else{\n      data.wmsPoSkuCodeStatus = false;\n      data.wmsPoSkuCodeReason = \"Summaries not found or not active\"; \n    } \n\n    //check Sku Number\n    let tmp_sku_number = data.skuNumber;\n    if (!skuNumberArray.includes(tmp_sku_number)) {\n      data.skuNumberStatus = false;\n      data.skuNumberReason = \"SKU Number Not Found\";\n      data.skuUuid = \"\";\n    } else {\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\n      data.skuUuid = skuUuidArray[idx];\n      data.photo = skuPhotosArray[idx];\n      if(transaction==\"additional_inbound\"){\n        data.uom = skuUomArray[idx];\n      }\n    }\n    \n    // give all text red, if wmsposkucode failed\n    if(!wmsPoSkuCodeStatus){\n      data.rowStatus = false;\n      data.rowReason = data.wmsPoSkuCodeReason;\n    }else{\n      data.rowStatus = true;\n      data.rowReason = \"\";\n    }\n\n    //merging_array\n    cleanData.push({ ...data, ...skuValidatedData });\n  });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\n  setIsProgressPercent(Math.ceil(100));\n  setTimeout(() => {\n    nextPage();\n  }, 200);\n};\n\nexport const resetCsvResist = async ({\n  dispatch,\n  resetStatus,\n  setIsResetCsvPersist,\n}) => {\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\n  dispatch({\n    type: STOK_TAKE_UPLOAD_JSON,\n    csvDistinctPOSKUInfoId: null,\n  });\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\n  dispatch({ type: STATUS, status: null });\n  setIsResetCsvPersist(true);\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./FileUploader.scss\";\nimport {\n  templateDownload,\n  csvReader,\n  putCsvFieldJson,\n  validateColumn,\n  xlsReader,\n  cleaningData,\n  resetCsvResist,\n  validatePOCode\n} from \"./services.js\";\nimport FileUploadProgress from \"Component/FileUploadProgress\";\nimport PopUp from \"Component/Modal/PopUp\";\nimport { validatePoSkuStockTransfer, validateSkuNumber } from \"apiServices\";\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  paddingTop: \"20px\",\n  paddingBottom: \"20px\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n  height: \"400px\",\n};\n\nconst parentStyle = {\n  paddingTop: \"20px\",\n  paddingBottom: \"10px\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fff\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n  height: \"600px\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\n  const [isCheckingArea, setIsCheckingArea] = React.useState(null);\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShow2, setModalShow2] = React.useState(false);\n  const [modalShow3, setModalShow3] = React.useState(false);\n\n  //declare redux\n  const dispatch = useDispatch();\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\n  const selectorStatus = useSelector((state) => state.status);\n  const selectorDistinctPOSKUInfoId = useSelector(\n    (state) => state.csvDistinctPOSKUInfoId\n  );\n  const selectorDistinctSKUNumber = useSelector(\n    (state) => state.csvDistinctSKUNumber\n  );\n  const selectorSkuCodeValidated = useSelector(\n    (state) => state.skuCodeValidated\n  );\n  const selectorSkuNumberValidated = useSelector(\n    (state) => state.skuNumberValidated\n  );\n  const selectorCsvData = useSelector((state) => state.csvData);\n  const warehousesData = useSelector((state) => state.warehouseData);\n  const selectorPayloadPO = useSelector((state) => state.payloadPO);\n\n  //reset csv persist\n  if (isResetCsvPersist !== true) {\n    resetCsvResist({\n      dispatch,\n      resetStatus: isResetCsvPersist,\n      setIsResetCsvPersist,\n    });\n  }\n\n  //get warehouse & warehouse area data\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  if (isWarehouseArea === null) {\n    getWarehouseArea({\n      warehouseUuid: warehouseUuid,\n      dispatch,\n      type: \"csvValidator\",\n    });\n    setIsWarehouseArea(1);\n  }\n\n  //get additional outbound type\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\n    getOutboundType({\n      dispatch,\n      type: \"csvValidator\",\n    });\n    setIsAdditionalOutbound(1);\n  }\n\n  //when file droped or selected\n  const onDropAccepted = async (e) => {\n    //reset percent\n    setIsProgressPercent(0);\n    setIsUploadStatus(true);\n\n    //get file type\n    const file = e[0].name;\n    const fileArr = file.split(\".\");\n    const fileType = fileArr[1];\n\n    //read file\n    let fieldArray = field.map((obj) => obj.dataField);\n    putCsvFieldJson({ dispatch, jsonArray: field });\n\n    let jsonArray = null;\n    await setIsProgressStatus(\"Reading...\");\n    await setIsProgressFileName(file);\n    await setIsProgressDisplay(true);\n\n    // function csvReader Not Working\n    // if (fileType == \"csv\") {\n    //   jsonArray = await csvReader(\n    //     e,\n    //     fieldArray,\n    //     setIsProgressPercent,\n    //     setIsProgressStatus\n    //   );\n    // } else {\n      jsonArray = await xlsReader(\n        e,\n        fieldArray,\n        setIsProgressPercent,\n        setIsProgressStatus,\n        dispatch\n      );\n    // } \n    if (jsonArray === false) {\n      setModalShow(true);\n      return 0;\n    }\n\n    await setIsProgressStatus(\"Validating Column Type...\");\n    await validateColumn({\n      field,\n      jsonArray,\n      setModalShow,\n      setIsProgressPercent,\n      fileName: file,\n      dispatch,\n      warehouseArea: selectorWarehouseArea,\n      warehouseUuid,\n      outboundType: selectorOutboundType,\n      setIsCheckingSchema,\n      warehousesData,\n      setIsCheckingArea,\n    });\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    open,\n  } = useDropzone({\n    noClick: true,\n    onDropAccepted,\n    accept:\n      //accept csv, xls, and xlsx\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  const cancelCsv = () => {\n    window.location.reload();\n  };\n\n\n  useEffect(() => {\n    //setelah validasi column\n    //validasi SKU Number \n    setIsProgressStatus(\"Validating SKU Numbers\");\n    validateSkuNumber({\n      dispatch,\n      skuNumberData: selectorDistinctSKUNumber,\n      bulk: true,\n      status: isUploadStatus,\n    });\n  }, [selectorDistinctSKUNumber]);\n\n  useEffect(() => {\n    //setelah validasi  SKU Number\n    // validasi PO SKU Code \n    setIsProgressStatus(\"Validating PO SKU Code. . .\");\n    setIsProgressPercent(70); \n    validatePOCode({\n      poSkuNumberValidated: selectorSkuNumberValidated ,\n      poNewPayload: selectorPayloadPO ,\n      validatePoSkuStockTransfer,\n      dispatch \n    })\n  }, [selectorSkuNumberValidated]);\n\n  // Use Effect\n  useEffect(() => {\n    //setelah validasi po Code\n    //re arrange data yang akan digunakan di table\n    // console.clear();\n    setIsProgressPercent(90);\n    setIsProgressStatus(\"rearrange data. . .\");\n    cleaningData({\n      poSkuInfoValidated: selectorSkuCodeValidated,\n      poSkuNumberValidated: selectorSkuNumberValidated,\n      csvData: selectorCsvData,\n      transaction: transaction,\n      setIsProgressPercent,\n      dispatch,\n      status: isUploadStatus,\n      setIsProgressStatus,\n      nextPage,\n    });\n  }, [selectorSkuCodeValidated]); \n\n  useEffect(() => {\n    if (isCheckingSchema === false) {\n      console.log(isCheckingSchema);\n      setModalShow2(true);\n      setIsCheckingSchema(null);\n    }\n  }, [isCheckingSchema]);\n\n  useEffect(() => {\n    if (isCheckingArea === false) {\n      console.log(isCheckingArea);\n      setModalShow3(true);\n      setIsCheckingArea(null);\n    }\n  }, [isCheckingArea]);\n\n  return (\n    <div>\n      <PopUp\n        status={selectorStatus}\n        onCloseFunction={() => {\n          setModalShow(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        statusDisplay={modalShow}\n        title=\"Upload File Failed\"\n        cancelButtonTitle=\"Try Another File\"\n        actionButtonTitle={null}\n        colorText=\"red\"\n        refreshOnCancel={false}\n        msg1={\n          <div>\n            <div>\n              Upload failed because your file has more than 2000 lines.{\" \"}\n            </div>\n            <div> Please make it less than 2000 lines. </div>\n          </div>\n        }\n        msg2=\"Do you want to try another file?\"\n        cancelButtonClass=\"bg-red background\"\n        actionButtonClass=\" \"\n      />\n\n      <PopUp\n        status={200}\n        onCloseFunction={() => {\n          setModalShow2(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        actionButtonEvent={() => templateDownload()}\n        statusDisplay={modalShow2}\n        title=\"Different File Template\"\n        cancelButtonTitle=\"Cancel\"\n        actionButtonTitle=\"Download latest template\"\n        colorText=\"red\"\n        refreshOnCancel={false}\n        msg1={\n          <div>\n            <div> Your uploaded file has a different template.</div>\n          </div>\n        }\n        msg2=\"Do you want to download the latest file template ?\"\n        actionButtonClass=\"bg-green background\"\n        cancelButtonClass=\"\"\n      />\n\n      <PopUp\n        status={200}\n        onCloseFunction={() => {\n          setModalShow3(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        actionButtonEvent={() => {\n          setModalShow3(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        statusDisplay={modalShow3}\n        title=\"Upload File Failed!\"\n        actionButtonTitle=\"Try Another File\"\n        colorText=\"red\"\n        refreshOnCancel={false}\n        msg1={\n          <div>\n            <div>\n              {\" \"}\n              We detect that you've uploaded two or more areas at once.\n            </div>\n            <div>\n              {\" \"}\n              Please try again to upload the file with one specific area.\n            </div>\n          </div>\n        }\n        msg2=\"Do you want to try another file ?\"\n        actionButtonClass=\"bg-red margin-left-0 background\"\n        cancelButtonClass=\"d-none \"\n      />\n\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\n        <div\n          className=\"d-flex flex-column justify-content-between\"\n          style={parentStyle}\n        >\n          <div className=\"FileUploader\">\n            <div\n              className=\"d-flex flex-column justify-content-end\"\n              {...getRootProps({ style })}\n            >\n              <input {...getInputProps()} />\n              <i\n                style={{ fontSize: \"90px\" }}\n                className=\"lineGrey iconU-upload\"\n              ></i>\n              <b className=\"mt-2\">Drag and Drop files here</b>\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\n              <button\n                type=\"button\"\n                onClick={open}\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\n              >\n                Browse File\n              </button>\n\n              <div className=\"emptyTextField LatoBold mt-3 \">\n                Support only CSV, XLS, XLSX file\n              </div>\n            </div>\n          </div>\n          <div className=\"downloadTemplate w-100 align-right\">\n            <span onClick={() => templateDownload()} className=\"float-right\">\n              Download the File Template\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <FileUploadProgress\n        status={isProgressStatus}\n        progressPercent={isProgressPercent}\n        fileName={isProgressFileName}\n        display={isProgressDisplay}\n        cancelHandler={cancelCsv}\n      />\n    </div>\n  );\n};\n\nexport default FileUploader;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport FileUploader from \"Component/FileUploaderStockTransfer\";\nimport ReactExport from \"react-export-excel\";\nimport { getWarehouses } from \"apiServices\";\nimport \"./index.scss\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst Upload = (props) => {\n  const dispatch = useDispatch();\n  const warehousesData = useSelector((state) => state.warehouseData);\n  const Field = [\n    {\n      dataField: \"id\", //field ini wajib ada untuk editable column\n      text: \"ID\",\n      editable: false,\n      sort: true,\n      hidden: true,\n      type: \"number\",\n    },\n    {\n      dataField: \"wmsPoSkuCode\",\n      text: \"PO SKU Code\",\n      type: \"string\",\n      sort: true,\n    },\n    {\n      dataField: \"skuNumber\",\n      text: \"SKU Number\",\n      type: \"number\",\n      sort: true,\n    },\n    {\n      dataField: \"expiryDateCol\",\n      text: \"Expiry Date\",\n      type: \"date_indo\",\n      sort: true,\n    },\n    {\n      dataField: \"warehouse\",\n      text: \"Warehouse Source\",\n      type: \"string\",\n      sort: true,\n    },\n    { \n      dataField: \"areaName\", \n      text: \"Area Source\", \n      type: \"string\", \n      sort: true \n    },\n    {\n      dataField: \"warehouseDestination\",\n      text: \"Warehouse Destination\",\n      type: \"string\",\n      sort: true,\n    }, \n    { \n      dataField: \"qty\", \n      text: \"Input Weight\", \n      type: \"number\", \n      sort: true \n    },\n  ];\n\n  const dataSet1 = [\n    {\n      areaSource: \"\",\n      warehouseSource: \"\",\n      warehouseDestination: \"\",\n      expiryDate: \"\",\n      po: \"\",\n      skuNumber: \"\",\n      inputWeight: \"\",\n    },\n  ];\n\n  useEffect(() => {\n    if (!warehousesData) {\n      getWarehouses({ dispatch });\n    }\n  }, []);\n\n  return (\n    <div className=\"mb-5\">\n      {/* export this table to excel */}\n      <ExcelFile\n        element={\n          //dont change id and style please\n          <button id=\"download-template-xls\" style={{ display: \"none\" }}>\n            Download Data\n          </button>\n        }\n        //file name without types\n        filename=\"StockTransferUpload_Template\"\n      >\n        <ExcelSheet data={dataSet1} name=\"template\">\n          <ExcelColumn label=\"PO SKU Code\" value=\"po\" />\n          <ExcelColumn label=\"SKU Number\" value=\"skuNumber\" />\n          <ExcelColumn label=\"Expiry Date\" value=\"expiryDate\" />\n          <ExcelColumn label=\"Warehouse Source\" value=\"warehouseSource\" />\n          <ExcelColumn label=\"Area Source\" value=\"areaSource\" />\n          <ExcelColumn label=\"Warehouse Destination\" value=\"warehouseDestination\" />\n          <ExcelColumn label=\"Input Weight\" value=\"inputWeight\" />\n        </ExcelSheet>\n      </ExcelFile>\n      {/* end export this table to excel */}\n\n      <FileUploader\n        nextPage={() =>\n          props.history.push(\n            \"/inventory-entry/stock-transfer/CSV-upload/review\"\n          )\n        }\n        transaction={\"stockTransfer\"}\n        field={Field}\n        type=\"stockTransfer\"\n      />\n    </div>\n  );\n};\n\nexport default withRouter(Upload);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport \"./index.scss\";\nimport { onClose, refreshPage } from \"./services.js\";\nimport { useDispatch } from \"react-redux\";\nimport { STATUS } from \"apiServices/action\";\n\nconst PopUp = ({\n  refresh,\n  status,\n  icon,\n  statusDisplay = false,\n  title = \"\",\n  cancelButtonTitle = \"Cancel\",\n  actionButtonTitle = \"Submit\",\n  cancelButtonClass = \"bg-background\",\n  actionButtonClass = \"bg-background\",\n  actionButtonEvent = null,\n  colorText = \"red\",\n  msg1 = null,\n  msg2 = null,\n  onCloseFunction = null,\n  refreshOnCancel = true,\n  setIsSuccess\n}) => {\n  const dispatch = useDispatch();\n  if (status?.code === 500 ) {\n    icon = \"em-pensive\"\n    title = \"Server Error\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = true;\n  }\n  if (status?.code === 408 ) {\n    icon = \"em-alarm_clock\"\n    title = \"Request Timeout\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = true;\n  }\n  if (status?.code === 400 ) {\n    icon = \"em-alarm_clock\"\n    title = \"Server Error\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = false;\n  }\n  if (status?.code === 404) {\n    title = \"Something wrong with the application\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = false;\n  }\n\n  const [show, setShow] = useState(statusDisplay);\n\n  useEffect(() => {\n    //from outside change\n    setShow(statusDisplay);\n  }, [statusDisplay]);\n\n  useEffect(() => {\n  }, [show]);\n\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\n  return (\n    <CRow className={`${show ? null : \"d-none\"}`}>\n      <CCol>\n        <CModal\n          show={show}\n          closeOnBackdrop={false}\n          onClose={() => {\n            setShow(false)\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\n            dispatch({ type: STATUS, status: null });\n            if (onCloseFunction) {\n              onCloseFunction()\n            }\n          }}\n          size=\"lg\"\n          style={{ minHeight: \"280px\" }}\n          bodyOpenClassName=\"p-3\"\n        >\n          {/* <div className='d-flex flex-row-reverse'>\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\n          </div>\n          <CModalHeader className=\"px-5 pt-3 border-none\">\n              <CModalTitle className={`text LatoBold ${colorText}`}>\n                {title}\n              </CModalTitle> */}\n\n          <div className=\"d-flex flex-row-reverse\">\n            <i\n              className=\"pr-3 pt-3 iconU-modalClose\"\n              onClick={() => {\n                setShow(false)\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\n                dispatch({ type: STATUS, status: null });\n                if (onCloseFunction) {\n                  onCloseFunction()\n                }\n              }}\n            ></i>\n          </div>\n          <CModalHeader className=\"px-5 pt-5 border-none\">\n            <CModalTitle className={`text LatoBold ${colorText}`}>\n              {title} <span><i className={`em ${icon}`}></i></span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody className=\"px-5 py-0\">\n            <p className=\"text mb-2\">{msg1}</p>\n            <p className=\"text\">{msg2}</p>\n          </CModalBody>\n\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\n            {cancelButtonTitle ? (\n              <CButton\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\n                onClick={() => {\n                  if (refreshOnCancel) {\n                    if (typeof (refresh) === 'function') refresh()\n                    else refreshPage({ refresh: true });\n                  } else {\n                    onClose({\n                      setShow,\n                      parentOncCloseFunction: onCloseFunction,\n                    });\n                  }\n                  dispatch({ type: STATUS, status: null });\n                }}\n              >\n                {cancelButtonTitle}\n              </CButton>\n            ) : null}\n            {actionButtonTitle ? (\n              <CButton\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\n                onClick={() => {\n                  if (actionButtonEvent) {\n                    actionButtonEvent();\n                    setShow(false);\n                  } else {\n                    setShow(false)\n                  }\n                }\n                }\n              >\n                {actionButtonTitle}\n              </CButton>\n            ) : null}{\" \"}\n          </CModalFooter>\n        </CModal>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default PopUp;\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\n  setShow(false);\n  if (parentOncCloseFunction) {\n    parentOncCloseFunction();\n  }\n\n};\n\nexport const refreshPage = ({ refresh = true }) => {\n  if (refresh === true) {\n    window.location.reload(false);\n  }\n};\n","import React, { useEffect } from \"react\";\nimport \"./index.scss\";\n\nconst FileUploadProgress = ({\n  status,\n  progressPercent,\n  fileName,\n  display = false,\n  cancelButton = null,\n  cancelHandler,\n}) => {\n  useEffect(() => {\n}, [progressPercent, status]);\n  return (\n    <div\n      className={\n        \"w-100 d-flex flex-column progressBar \" +\n        (!display ? \"hiddenProgress\" : null)\n      }\n    >\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\n          <div className=\"uploadStatus w-100\">\n            <div className=\"row\">\n              <div className=\"col-md-7\">\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\n                {fileName}\n              </div>\n              <div className=\"col-md-5\">\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\n                  Cancel\n                </p>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar\"\n                role=\"progressbar\"\n                style={{ width: progressPercent + \"%\" }}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n            <div className=\"mt-2\">\n              <div className=\"emptyTextField inline\">{status}</div>\n              <div className=\"text inline font-weight-bold\">\n                {\"  \"}\n                {progressPercent}%\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUploadProgress;\n"],"sourceRoot":""}