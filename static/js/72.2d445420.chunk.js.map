{"version":3,"sources":["Page/StockEntry/AdditionalInbound/index.jsx","Component/Modal/PopUpUnfinished/index.jsx"],"names":["withRouter","props","_localEntryData$jobPo3","_localEntryData$jobPo4","dispatch","useDispatch","thereAreRequest","useHistory","useSelector","state","warehouseUuid","inboundFirstLoad","user","status","isLoading","inboundEntryData","warehouseArea","areaId","summary","setSummary","useState","localEntryData","setLocalEntryData","isCheckedTotal","selectedSkuCheck","moduleEntry","moduleName","isCheckedBefore","setIsCheckedBefore","search","setSearch","useEffect","async","ripeness","getRipenessLevel","getWarehouseArea","getUnfinishedEntries","isExist","getData","dimention","document","documentElement","clientHeight","height","emptyItem","React","createElement","className","PopUp","Dropdown","show","title","placeholder","options","onChangeDropdown","selected","setAreaId","selectedValue","showTitle","concat","Search","filter","searchHandler","desc","getStockTakeSummary","setModule","module","length","style","minHeight","maxHeight","map","data","idx","SKUItem","key","img","photo","skuDescription","skuName","skuNumber","uomLabel","uomValue","totalQty","uom","unitOfMeassures","isCheckedHandler","checked","selectSku","moduleSummary","check","responseCheck","label","src","loading","alt","onClick","history","push","type","_localEntryData$jobPo","_localEntryData$jobPo2","jobPost","list","CREATE_JOB_SHEET"],"mappings":"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","file":"static/js/72.2d445420.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { CREATE_JOB_SHEET } from 'apiServices/action'\nimport Dropdown from \"Component/Dropdown\";\nimport Search from \"Component/Search\";\nimport { getStockTakeSummary, getUnfinishedEntries } from \"apiServices\";\nimport { getWarehouseArea, getRipenessLevel } from \"apiServices/dropdown\";\nimport SKUItem from \"Component/SKUItem\";\nimport loading from \"assets/icons/loading/LOADING-MLS-GRAY.gif\";\nimport \"./index.scss\";\nimport {selectSku} from './services'\nimport { responseCheck, selectedSkuCheck, setAreaId } from \"Page/StockEntry/GeneralServices/moduleServices\";\nimport PopUp from \"Component/Modal/PopUp\";\nimport PopUpUnfinished from 'Component/Modal/PopUpUnfinished'\n\nconst Inbound = (props) => {\n  const dispatch = useDispatch();\n  const story = useHistory()\n  const thereAreRequest = useSelector(state => state.thereAreRequest);\n  const moduleFirstLoad = useSelector(state => state.inboundFirstLoad)\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  const status = useSelector((state) => state.status);\n  const isLoading = useSelector((state) => state.isLoading);\n  const inboundEntryData = useSelector((state) => state.inboundEntryData);\n  const warehouseArea = useSelector(state => state.warehouseArea);\n  const areaId = useSelector(state => state.areaId)\n  const [summary, setSummary] = useState(null)\n  const [localEntryData, setLocalEntryData] = useState()\n  const isCheckedTotal = selectedSkuCheck({ moduleEntry: localEntryData, moduleName: 'inbound' });\n  const [isCheckedBefore, setIsCheckedBefore] = useState(0)\n  const [search, setSearch] = useState()\n\n  useEffect(() => {\n    async function getData() {\n      const ripeness = await getRipenessLevel({ dispatch })\n      const b = await getWarehouseArea({ dispatch, warehouseUuid })\n      const c = await getUnfinishedEntries({ dispatch, moduleName: 'inbound', isExist: inboundEntryData ? true : false, ripeness })\n      setIsCheckedBefore(isCheckedTotal)\n    }\n    getData()\n  }, []);\n  \n  const dimention = document.documentElement.clientHeight\n  const height = dimention - 400\n  const emptyItem = dimention - 400\n  return (\n    <div className=\"w-100  stock-take-summary\">\n      {/* <PopUpUnfinished\n        moduleFirstLoad={moduleFirstLoad}\n        moduleEntry={inboundEntryData}\n        redirect={() => props.history.push(\"/inventory-entry/additional-inbound/weight-entry\")}\n        previousPage={() => story.goBack()}\n      /> */}\n      <PopUp status={status} />\n      <div className=\"px-3 pt-3 bg-white border-all radius-all d-md-flex dd-group\">\n        <div className=\"col-lg-3 px-0 stock-take-dropdown\">\n          <Dropdown\n            show={true}\n            title=\"Select Area\"\n            placeholder='Select Area'\n            options={warehouseArea}\n            onChangeDropdown={(selected) => setAreaId({ selected, dispatch })}\n            selectedValue={areaId}\n            showTitle={true}\n          />\n        </div>\n      </div>\n\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white mt-3 border-all radius-all mb-3\">\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\n          <div className=\"text LatoBold d-flex justify-content-between align-items-center sku-des\">\n            <div>\n              Enter SKU or Description{\" \"}\n              <span className=\"green\">{`(${isCheckedTotal} Selected SKU${isCheckedTotal > 1 ? \"s\" : \"\"\n                })`}</span>\n            </div>\n            {/* <div className=\"icon-unfinishEn\">\n              <i className=\"iconU-sideBarInventoryEntry emptyTextField\"></i>\n            </div> */}\n          </div>\n        </div>\n        <Search\n          placeholder={\"Enter SKU\"}\n          filter={false}\n          searchHandler={(desc) =>\n            areaId ?\n              getStockTakeSummary({ dispatch, desc, warehouseUuid, areaId, setModule: setSummary, module:localEntryData },setSearch(desc)) : setAreaId({ dispatch, selected: 'empty' })\n          }\n        />\n        <div\n          className={`mb-3 mt-3 d-flex align-items-center scroll-sku ${summary?.length ? \"flex-column\" : \"flex-row\"\n            } w-100 text-center`}\n          style={{ minHeight: height , maxHeight: height}}\n        >\n          {summary?.length ? (\n            summary?.map((data, idx) => {\n              return (\n                <SKUItem\n                  key={idx}\n                  img={data?.photo}\n                  skuDescription={data?.skuName}\n                  skuNumber={data?.skuNumber}\n                  uomLabel=\"weight\"\n                  uomValue={data?.totalQty}\n                  uom={data?.unitOfMeassures}\n                  isCheckedHandler={(checked) =>\n                    selectSku({\n                      idx,\n                      checked,\n                      dispatch,\n                      setLocalEntryData,\n                      moduleSummary: summary,\n                      moduleEntry: localEntryData,\n                      moduleName: 'inbound',\n                      warehouseUuid,\n                      areaId,\n                    })\n                  }\n                  check={data?.checked}\n                />\n              );\n            })\n          ) : (\n              <div className=\"w-100 text-center emptyTextField d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: emptyItem,maxHeight: emptyItem}}>\n                {!responseCheck({ isLoading, summary }) ? (\n                  <img className=\"loading\" src={loading} alt=\"loading\" />\n                ) : areaId && summary?.length === 0 ? (\n                  <div>\n                    Sorry, we couldn't find any matches\n                    for '<span className='LatoBold'>{search}</span>' in {areaId?.label} area.\n                    <br/>\n                    Please Try search with another term.\n                  </div>\n                ) : 'Enter SKU'}\n              </div>\n            )}\n        </div>\n      </div>\n      <div className=\"h-screen-summary-footer d-flex flex-column justify-content-start\">\n        <div className=\"w-100 d-flex align-items-center justify-content-between mb-1\">\n          <button\n            onClick={() => props.history.push(\"/inventory-entry/additional-inbound-upload\")}\n            type=\"button\"\n            className=\"btn px-4 no-shadow border-all bg-white fontSizeButton\"\n          >\n            Upload File\n          </button>\n          <button\n            onClick={() => {\n              if (thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0)) {\n                dispatch({ type: CREATE_JOB_SHEET, inboundEntryData: localEntryData })\n                props.history.push(\"/inventory-entry/additional-inbound/weight-entry\")\n              }\n            }\n            }\n            type=\"button\"\n            className={`btn px-5 fontSizeButton no-shadow text-white ${thereAreRequest === 0 && (localEntryData && localEntryData?.jobPost?.list?.length > 0) ? \"bg-green\" : \"bg-lineGrey\"\n              }`}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Inbound);\n","import React from \"react\";\nimport moment from 'moment'\nimport {\n    CButton,\n    CCol,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CRow,\n} from \"@coreui/react\";\nimport \"Component/Modal/ModalConfirmation/index.scss\";\nconst PopUpUnfinished = ({ moduleEntry, redirect, previousPage, discard, setDiscard, moduleFirstLoad }) => {\n    const dimention = document.documentElement.clientHeight\n    const height = dimention - 900\n    const show = discard || !moduleEntry ? false : true\n\n    if (!moduleFirstLoad) return (\n        <CModal\n            show={true}\n            size=\"lg\"\n            closeOnBackdrop={false}\n        >\n            <div className=\"green h4 w-100 text-center p-4\">\n                Checking Unfinished Entry\n            </div>\n        </CModal>\n    )\n    return (\n        <CRow onKeyDown={e => e.keyCode === 27 ? previousPage() : false} className={show ? null : 'd-none'}>\n            <CCol>\n                <CModal\n                    show={show}\n                    size=\"lg\"\n                    closeOnBackdrop={false}\n                >\n\n                    <div className=\"d-flex flex-row-reverse pr-3 pt-3 mt-1\">\n                        <i onClick={() => previousPage()} className='iconU-modalClose' ></i>\n                    </div>\n\n                    <CModalHeader className=\"px-5 pt-3 border-none\">\n                        <CModalTitle className=\"green LatoBold respon-txt\">Unfinished Entry Left! <span><i className=\"em em-speak_no_evil\"></i></span></CModalTitle>\n                    </CModalHeader>\n                    <CModalBody className=\"px-5 py-0\" style={{ minHeight: height }}>\n                        <p className=\"text mb-3 fontSizeWeightNumber\">\n                            You must complete the Entry that you worked on :\n                        </p>\n                        <div style={{ backgroundColor: '#F5F7FA' }} className='w-100  rounded p-3 d-flex justify-content-between align-items-center'>\n                            <div>\n                                <div className=\"respon-txt\">{moment(moduleEntry?.jobPost?.createdAt).format(\"dddd, MMMM DD YYYY, h:mm:ss a\")}</div>\n                                <div className=\"green respon-txt\">\n                                    {`${moduleEntry?.jobPost?.areaName} - ${moduleEntry?.jobPost?.list.length} SKU${moduleEntry?.jobPost?.list.length > 1 ? '(s)' : ''}`}\n                                </div>\n                            </div>\n                            <div onClick={() => setDiscard()} className='iconU-entryTrash emptyTextField' style={{ opacity: 0.5, fontSize: '1.2rem' }} />\n                        </div>\n                        <p className=\"text mt-3 fontSizeWeightNumber\">\n                            Do you want to continue this Entries ?\n                        </p>\n                        <br />\n                    </CModalBody>\n\n                    <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\n                        <CButton onClick={() => previousPage()} className=\"bg-background text no-shadow px-5 mb-0 mx-0\">\n                            Later\n                        </CButton>\n                        <CButton onClick={() => redirect()} className=\"bg-green no-shadow px-5 mb-0 ml-3 mr-0\">\n                            Continue\n                        </CButton>{\" \"}\n                    </CModalFooter>\n                </CModal>\n            </CCol>\n        </CRow>\n    );\n};\n\nexport default PopUpUnfinished\n"],"sourceRoot":""}