{"version":3,"sources":["Component/Modal/PopUp/index.jsx","Component/Modal/PopUp/services.js","Component/FileUploader/services.js","Component/FileUploader/index.jsx","Component/FileUploadProgress/index.jsx"],"names":["PopUp","_ref","refresh","status","icon","statusDisplay","title","cancelButtonTitle","actionButtonTitle","cancelButtonClass","actionButtonClass","actionButtonEvent","colorText","msg1","msg2","onCloseFunction","refreshOnCancel","setIsSuccess","dispatch","useDispatch","code","message","show","setShow","useState","useEffect","window","onkeydown","e","keyCode","React","createElement","CRow","className","concat","CCol","CModal","closeOnBackdrop","onClose","success","name","type","STATUS","size","style","minHeight","bodyOpenClassName","onClick","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton","_ref2","location","reload","refreshPage","parentOncCloseFunction","templateDownload","document","getElementById","click","baseStyle","flex","display","flexDirection","alignItems","paddingTop","paddingBottom","paddingLeft","paddingRight","outline","transition","height","parentStyle","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","activeStyle","acceptStyle","rejectStyle","FileUploader","field","transaction","nextPage","isProgressDisplay","setIsProgressDisplay","isProgressStatus","setIsProgressStatus","isProgressPercent","setIsProgressPercent","isProgressFileName","setIsProgressFileName","isWarehouseArea","setIsWarehouseArea","isAdditionalOutbound","setIsAdditionalOutbound","isUploadStatus","setIsUploadStatus","isCheckingSchema","setIsCheckingSchema","isCheckingArea","setIsCheckingArea","isResetCsvPersist","setIsResetCsvPersist","modalShow","setModalShow","modalShow2","setModalShow2","modalShow3","setModalShow3","selectorWarehouseArea","useSelector","state","warehouseAreaCsv","selectorOutboundType","outboundTypeCsv","selectorStatus","selectorDistinctPOSKUInfoId","csvDistinctPOSKUInfoId","selectorDistinctSKUNumber","csvDistinctSKUNumber","selectorSkuCodeValidated","skuCodeValidated","selectorSkuNumberValidated","skuNumberValidated","selectorCsvData","csvData","warehousesData","warehouseData","async","resetStatus","_ref4","STOK_TAKE_UPLOAD_JSON","csvFileName","VALIDATE_PO_SKU_INFO_ID","resetCsvResist","warehouseUuid","user","getWarehouseArea","getOutboundType","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","open","useDropzone","noClick","onDropAccepted","file","split","fieldArray","map","obj","dataField","jsonArray","csvField","putCsvFieldJson","setIsJsonArray","i","reader","FileReader","data","Promise","resolve","reject","onload","bstr","evt","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","csv","parse","err","length","index","newObject","escapeString","csvArray2","string","includes","toString","x","ret","csvObj","csvIndex","push","percentage","Math","ceil","setTimeout","readAsBinaryString","xlsReader","fileName","warehouseArea","outboundType","warehouseCodeList","warehouseUuidList","warehouseNameList","d","id","wh_area_label","label","toUpperCase","wh_area_value","value","wh_outboundtype_label","wh_outboundtype_value","csv_schema","text","replace","distinctPOSKUInfoId","distinctSKUNumber","distinctAreaSource","distinctAreaDestination","checkSchema","schemaRow","key","keys","console","clear","log","shift","emptyRow","fieldData","fieldIndex","undefined","indexOf","warehouseDestinationData","warehouseAreaData","areaDestinationData","outboundData","arr_grade","parseInt","ripeness","tmp_data","stat","isNaN","regex_date","match","validateColumn","accept","useMemo","validatePoSkuInfoId","skuData","validateSkuNumber","skuNumberData","bulk","poSkuInfoValidated","poSkuNumberValidated","_ref3","wmsPoSkuCode","wmsPoSkuUom","uom","skuNumberArray","skuUuidArray","skuPhotosArray","skuUomArray","skuNumber","imageMd","cleanData","areaSource","areaDestination","warehouseDestination","warehouseSource","indexId","skuValidatedData","isExist","inboundDate","wmsPoSkuCodeStatus","wmsPoSkuCodeReason","tmp_grade","newGrade","idx","newGradeStatus","newGradeUuid","newGradeReason","tmp_sku_number","skuUuid","photo","skuNumberStatus","skuNumberReason","tmp_new_grade","newGradeUom","cleaningData","Object","assign","fontSize","FileUploadProgress","progressPercent","cancelHandler","cancelCsv","cancelButton","lineHeight","cursor","class","role","width","aria-valuemin","aria-valuemax"],"mappings":"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","file":"static/js/6.6e48a013.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport \"./index.scss\";\nimport { onClose, refreshPage } from \"./services.js\";\nimport { useDispatch } from \"react-redux\";\nimport { STATUS } from \"apiServices/action\";\n\nconst PopUp = ({\n  refresh,\n  status,\n  icon,\n  statusDisplay = false,\n  title = \"\",\n  cancelButtonTitle = \"Cancel\",\n  actionButtonTitle = \"Submit\",\n  cancelButtonClass = \"bg-background\",\n  actionButtonClass = \"bg-background\",\n  actionButtonEvent = null,\n  colorText = \"red\",\n  msg1 = null,\n  msg2 = null,\n  onCloseFunction = null,\n  refreshOnCancel = true,\n  setIsSuccess\n}) => {\n  const dispatch = useDispatch();\n  if (status?.code === 500 ) {\n    icon = \"em-pensive\"\n    title = \"Server Error\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = true;\n  }\n  if (status?.code === 408 ) {\n    icon = \"em-alarm_clock\"\n    title = \"Request Timeout\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = true;\n  }\n  if (status?.code === 400 ) {\n    icon = \"em-alarm_clock\"\n    title = \"Server Error\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = false;\n  }\n  if (status?.code === 404) {\n    title = \"Something wrong with the application\";\n    cancelButtonTitle = \"Try Again\";\n    actionButtonTitle = \"Contact Administration\";\n    colorText = \"red\";\n    msg1 = status?.message;\n    msg2 =\n      \"Please try again or contact Sayurbox administration for further information.\";\n    cancelButtonClass = \"bg-green\";\n    statusDisplay = true;\n    refreshOnCancel = false;\n  }\n\n  const [show, setShow] = useState(statusDisplay);\n\n  useEffect(() => {\n    //from outside change\n    setShow(statusDisplay);\n  }, [statusDisplay]);\n\n  useEffect(() => {\n  }, [show]);\n\n  window.onkeydown = e => e.keyCode === 27 ? setShow(false) : null\n  return (\n    <CRow className={`${show ? null : \"d-none\"}`}>\n      <CCol>\n        <CModal\n          show={show}\n          closeOnBackdrop={false}\n          onClose={() => {\n            setShow(false)\n            if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\n            dispatch({ type: STATUS, status: null });\n            if (onCloseFunction) {\n              onCloseFunction()\n            }\n          }}\n          size=\"lg\"\n          style={{ minHeight: \"280px\" }}\n          bodyOpenClassName=\"p-3\"\n        >\n          {/* <div className='d-flex flex-row-reverse'>\n            <i className='pr-2 pt-2 iconU-modalClose' onClick={() => setShow(false)}></i>\n          </div>\n          <CModalHeader className=\"px-5 pt-3 border-none\">\n              <CModalTitle className={`text LatoBold ${colorText}`}>\n                {title}\n              </CModalTitle> */}\n\n          <div className=\"d-flex flex-row-reverse\">\n            <i\n              className=\"pr-3 pt-3 iconU-modalClose\"\n              onClick={() => {\n                setShow(false)\n                if (typeof (setIsSuccess) === 'function') setIsSuccess({ success: null, name: null })\n                dispatch({ type: STATUS, status: null });\n                if (onCloseFunction) {\n                  onCloseFunction()\n                }\n              }}\n            ></i>\n          </div>\n          <CModalHeader className=\"px-5 pt-5 border-none\">\n            <CModalTitle className={`text LatoBold ${colorText}`}>\n              {title} <span><i className={`em ${icon}`}></i></span>\n            </CModalTitle>\n          </CModalHeader>\n          <CModalBody className=\"px-5 py-0\">\n            <p className=\"text mb-2\">{msg1}</p>\n            <p className=\"text\">{msg2}</p>\n          </CModalBody>\n\n          <CModalFooter className=\"px-5 pb-5 pt-0 justify-content-start border-none\">\n            {cancelButtonTitle ? (\n              <CButton\n                className={`${cancelButtonClass} no-shadow px-5 mt-4 mb-0 mx-0`}\n                onClick={() => {\n                  if (refreshOnCancel) {\n                    if (typeof (refresh) === 'function') refresh()\n                    else refreshPage({ refresh: true });\n                  } else {\n                    onClose({\n                      setShow,\n                      parentOncCloseFunction: onCloseFunction,\n                    });\n                  }\n                  dispatch({ type: STATUS, status: null });\n                }}\n              >\n                {cancelButtonTitle}\n              </CButton>\n            ) : null}\n            {actionButtonTitle ? (\n              <CButton\n                className={`${actionButtonClass} text no-shadow px-5 mt-4 mb-0 ml-3 mr-0`}\n                onClick={() => {\n                  if (actionButtonEvent) {\n                    actionButtonEvent();\n                    setShow(false);\n                  } else {\n                    setShow(false)\n                  }\n                }\n                }\n              >\n                {actionButtonTitle}\n              </CButton>\n            ) : null}{\" \"}\n          </CModalFooter>\n        </CModal>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default PopUp;\n","export const onClose = ({ setShow, parentOncCloseFunction }) => {\n  setShow(false);\n  if (parentOncCloseFunction) {\n    parentOncCloseFunction();\n  }\n\n};\n\nexport const refreshPage = ({ refresh = true }) => {\n  if (refresh === true) {\n    window.location.reload(false);\n  }\n};\n","/* eslint-disable array-callback-return */\nimport csv from \"csv\";\nimport * as XLSX from \"xlsx\";\nimport {\n  STOK_TAKE_UPLOAD_JSON,\n  VALIDATE_PO_SKU_INFO_ID,\n  STATUS,\n} from \"apiServices/action\";\n\nexport const templateDownload = () => {\n  document.getElementById(\"download-template-xls\").click();\n};\nexport const csvReader = (e, fieldArray, setIsProgressPercent) => {\n  return new Promise((resolve, reject) => {\n    let i = 0;\n    let jsonArray = [];\n    const reader = new FileReader();\n    reader.onload = () => {\n      csv.parse(reader.result, (err, data) => {\n        if (data.length > 2001) {\n          //why 2001? , because line 1 is header\n          setIsProgressPercent(0);\n          resolve(false);\n        }\n        data.map((obj, index) => {\n          if (index === 0) {\n            i++;\n            return false; // skip\n          }\n\n          let newObject = {};\n          newObject[\"id\"] = index;\n\n          let csvArray = data[i].toString().split(\";\");\n          csvArray.map((csvObj, csvIndex) => {\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\n          });\n          i++;\n          jsonArray.push(newObject);\n\n          //count percent\n          let percentage = ((index + 1) * 25) / data.length;\n          setIsProgressPercent(Math.ceil(percentage));\n        });\n      });\n    };\n\n    //checking\n    setTimeout(() => {\n      resolve(jsonArray);\n    }, 200);\n    reader.readAsBinaryString(e[0]);\n  });\n};\n\nexport const xlsReader = async (\n  e,\n  fieldArray,\n  setIsProgressPercent,\n  setIsJsonArray,\n  dispatch\n) => {\n  let i = 0;\n  let jsonArray = [];\n  const reader = new FileReader();\n  let data = null;\n\n  return new Promise((resolve, reject) => {\n    reader.onload = async (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      /* Update state */\n\n      await csv.parse(data, (err, data) => {\n        if (data.length > 2001) {\n          //why 2001? , because line 1 is header\n          setIsProgressPercent(0);\n          resolve(false);\n        } \n        data.map((obj, index) => {\n          let newObject = {};\n          newObject[\"id\"] = index;\n\n          // let csvArray = data[i].toString().split(\",\");  \n          let escapeString = [];\n          let csvArray2 = null;\n\n          if(i===0){\n            escapeString = data[i].map((string,i) => string.includes(\",\")  ?  `\\\"${string}\\\"` : `${string}`); \n            csvArray2 = escapeString.toString().split(',');   \n          }else{ \n            escapeString = data[i].map((string,x) => { \n              let ret = null;\n              if(string.includes(\",\")){\n                ret =  `\\\"${string}\\\"`;\n              }else if(x === 0){\n                ret = `${string}\"`;\n              }else if( x===data[i].length-1){\n                ret = `\"${string}`\n              }else{\n                ret = `\"${string}\"`\n              }\n              return ret; \n              // string.includes(\",\")  ?  `\\\"${string}\\\"` : (x === 0 || x===data.length-1  ? `${string}\"` : `\"${string}\"`)\n            }); \n            let x = escapeString.toString();\n            csvArray2 = x.split('\",\"');    \n          } \n \n          csvArray2.map((csvObj, csvIndex) => {\n            newObject[fieldArray[csvIndex + 1]] = csvObj;\n          });\n          i++;\n          jsonArray.push(newObject);\n\n          //count percent\n          let percentage = ((index + 1) * 25) / data.length;\n          setIsProgressPercent(Math.ceil(percentage));\n        });\n      });\n\n      //checking\n      setTimeout(() => {\n        resolve(jsonArray);\n      }, 200);\n    };\n\n    reader.readAsBinaryString(e[0]);\n  });\n};\n\nexport const putCsvFieldJson = ({ dispatch, jsonArray }) => {\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvField: jsonArray });\n};\n\nexport const validateColumn = async ({\n  field,\n  jsonArray,\n  setIsProgressPercent,\n  fileName,\n  dispatch,\n  warehouseArea,\n  warehouseUuid,\n  outboundType,\n  setIsCheckingSchema,\n  setIsCheckingArea,\n  warehousesData,\n}) => {\n  //warehouse\n  let warehouseCodeList = [];\n  let warehouseUuidList = [];\n  let warehouseNameList = [];\n  if (warehousesData) {\n    warehousesData.data.map((d) => {\n      warehouseCodeList.push(d.code);\n      warehouseUuidList.push(d.id);\n      warehouseNameList.push(d.name);\n    });\n  }\n\n  //warehouse area\n  let wh_area_label = !warehouseArea\n    ? []\n    : warehouseArea.map((data) => data.label.toUpperCase());\n  let wh_area_value = !warehouseArea\n    ? []\n    : warehouseArea.map((data) => data.value);\n  let wh_outboundtype_label = !outboundType\n    ? []\n    : outboundType.map((data) => data.label.toUpperCase());\n  let wh_outboundtype_value = !outboundType\n    ? []\n    : outboundType.map((data) => data.value);\n  let csv_schema = !field\n    ? []\n    : field.map((data) => data.text.toUpperCase().replace(/\\s/g, \"\"));\n  let distinctPOSKUInfoId = [];\n  let distinctSKUNumber = [];\n  let distinctAreaSource = [];\n  let distinctAreaDestination = [];\n\n  // check schema\n  let checkSchema = true;\n  let i = 0;\n  const schemaRow = jsonArray[0];\n  for (var key in schemaRow) {\n    if (key == \"id\") {\n      continue;\n    }\n    let keys = schemaRow[key].toUpperCase().replace(/\\s/g, \"\");\n    if (\n      key !== \"undefined\" &&\n      (csv_schema[i + 1] !== keys || !csv_schema.includes(keys))\n    ) {\n      console.clear();\n      console.log(\"--Schema Not Same--\");\n      console.log(\"Schema \\t\\t: \", csv_schema[i + 1]);\n      console.log(\"File SChema : \", keys);\n      checkSchema = false;\n      setIsCheckingSchema(false);\n      return 0;\n    }\n    i++;\n  }\n\n  jsonArray.shift();\n  await jsonArray.map((data, index) => {\n    let emptyRow = true; // if empty row dont show\n    field.map((fieldData, fieldIndex) => {\n      //if null then return\n      if (fieldData === undefined || fieldData === null) {\n        return;\n      } \n      if (fieldData.dataField !== \"id\" && data[fieldData.dataField] == \"\" ) {\n        return;\n      } else if (fieldData.dataField !== \"id\") {\n        emptyRow = false;\n      }\n      // end checking empty\n\n      //set warehouse id\n      data[\"warehouseSource\"] = warehouseUuid;\n\n      //checking warehouse\n      if (warehouseCodeList && fieldData.dataField == \"warehouse\") {\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\n          data[\"warehouseUuid\"] = \"\";\n          data[\"warehouseName\"] = \"\";\n          return;\n        } else {\n          let warehouseData = warehouseCodeList.indexOf(data[fieldData.dataField]);\n          data[\"warehouseUuid\"] = warehouseUuidList[warehouseData];\n          data[\"warehouseName\"] = warehouseNameList[warehouseData];\n        }\n      }\n\n      //checing warehouse Destination\n      if (warehouseCodeList && fieldData.dataField == \"warehouseDestination\") {\n        if (!warehouseCodeList.includes(data[fieldData.dataField])) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Not Found`;\n          data[\"warehouseDestinationUuid\"] = \"\";\n          data[\"warehouseDestinationName\"] = \"\";\n          return;\n        } else {\n          let warehouseDestinationData = warehouseCodeList.indexOf(data[fieldData.dataField]);\n          data[\"warehouseDestinationUuid\"] = warehouseUuidList[warehouseDestinationData];\n          data[\"warehouseDestinationName\"] = warehouseNameList[warehouseDestinationData];\n        }\n      }\n\n      //checking warehouse area\n      if (fieldData.dataField == \"areaName\") {\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\n          data[\"areaSource\"] = null;\n          return;\n        } else {\n          let warehouseAreaData = wh_area_label.indexOf(\n            data[fieldData.dataField].toUpperCase()\n          );\n          data[\"areaSource\"] = wh_area_value[warehouseAreaData];\n\n          if (!distinctAreaSource.includes(wh_area_value[warehouseAreaData])) {\n            distinctAreaSource.push(wh_area_value[warehouseAreaData]);\n          }\n        }\n      }\n\n      if (fieldData.dataField == \"areaNameDestination\") {\n        if (!wh_area_label.includes(data[fieldData.dataField].toUpperCase())) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Warehouse Area Not Found`;\n          data[\"areaDestination\"] = null;\n          return;\n        } else {\n          let areaDestinationData = wh_area_label.indexOf(\n            data[fieldData.dataField].toUpperCase()\n          );\n          data[\"areaDestination\"] = wh_area_value[areaDestinationData];\n\n          if (!distinctAreaDestination.includes(wh_area_value[areaDestinationData])) {\n            distinctAreaDestination.push(wh_area_value[areaDestinationData]);\n          }\n        }\n      }\n\n      //checking outbound type\n      if (\n        wh_outboundtype_value.length > 0 &&\n        fieldData.dataField == \"outboundType\"\n      ) {\n        if (\n          !wh_outboundtype_label.includes(\n            data[fieldData.dataField].toUpperCase()\n          )\n        ) {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[fieldData.dataField + \"Reason\"] = `Outbound Type Not Found`;\n          data[\"outboundTypeCode\"] = null;\n          return;\n        } else {\n          let outboundData = wh_outboundtype_label.indexOf(\n            data[fieldData.dataField].toUpperCase()\n          );\n          data[\"outboundTypeCode\"] = wh_outboundtype_value[outboundData];\n        }\n      }\n\n      //newgrade\n      if (fieldData.dataField == \"newGrade\") {\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\n        if (\n          data[fieldData.dataField] &&\n          !arr_grade.includes(data[fieldData.dataField].toUpperCase())\n        ) {\n          //if not waste or semi waste\n          if (parseInt(data[fieldData.dataField])) {\n            //if number, check sku number\n            if (!distinctSKUNumber.includes(data[fieldData.dataField])) {\n              distinctSKUNumber.push(data[fieldData.dataField]);\n            }\n            data[fieldData.dataField + \"Status\"] = true;\n          } else if (data[fieldData.dataField] == \"\") {\n            //if null\n            data[fieldData.dataField + \"Status\"] = true;\n          } else {\n            //if not number => undefined\n            data[fieldData.dataField + \"Status\"] = false;\n            data[fieldData.dataField + \"Reason\"] = `Grade Undefined`;\n          }\n        } else {\n          data[\"newGradeUuid\"] = data[fieldData.dataField];\n        }\n      }\n\n      //set ripeness\n      let ripeness = null;\n      if (\n        (fieldData.dataField == \"ripenessLevel\" ||\n          fieldData.dataField == \"newRipeness\") &&\n        data[fieldData.dataField] !== undefined\n      ) {\n        let ripeness_ = data[fieldData.dataField].split(\" \");\n        ripeness = ripeness_[1];\n      }\n\n      //checking type\n      let tmp_data = data[fieldData.dataField];\n      let stat = null;\n      if (fieldData.type == \"number\") {\n        if (isNaN(tmp_data)) {\n          stat = false;\n        } else {\n          stat = true;\n\n          if (fieldData.dataField == \"wmsPoSkuCode\") {\n            if (!distinctPOSKUInfoId.includes(tmp_data)) {\n              distinctPOSKUInfoId.push(tmp_data);\n            }\n          }\n\n          //distinct sku angka maka push ke array buat di cek\n          if (fieldData.dataField == \"skuNumber\") {\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\n              distinctSKUNumber.push(tmp_data);\n            }\n          }\n        }\n      } else if (fieldData.type == \"date_indo\") {\n        //checking date\n        let regex_date = /(0[1-9]|[12][0-9]|3[01])[-.](0[1-9]|1[012])[-.](19|20)\\d\\d/;\n        if (tmp_data.match(regex_date)) {\n          stat = true;\n        } else {\n          data[fieldData.dataField + \"Status\"] = false;\n          data[\n            fieldData.dataField + \"Reason\"\n          ] = `Date format must be 'dd-mm-yyyy'`;\n          return;\n        }\n      } else {\n        stat = true;\n      }\n\n      //grade can null\n      let canNull = [\n        \"grade\",\n        \"outboundReason\",\n        \"ripenessLevel\",\n        \"newRipeness\",\n        \"newGrade\",\n      ];\n      if (canNull.includes(fieldData.dataField) && tmp_data == \"\") {\n        stat = true;\n      }\n\n      //check newGrade, jika angka maka cek ke distinct sku\n      if (fieldData.dataField == \"newGrade\") {\n        let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\n        if (!arr_grade.includes(tmp_data.toUpperCase())) {\n          //if not waste or semi waste\n          if (parseInt(tmp_data)) {\n            //if number\n            stat = true;\n            if (!distinctSKUNumber.includes(tmp_data) && tmp_data !== \"\") {\n              distinctSKUNumber.push(tmp_data);\n            }\n          }\n        }\n      }\n\n      data[fieldData.dataField + \"Status\"] = stat;\n      if (!stat) {\n        data[\n          fieldData.dataField + \"Reason\"\n        ] = `Invalid ${fieldData.text} \\nShould be a ${fieldData.type}`;\n      } else {\n        data[fieldData.dataField + \"Reason\"] = \"\";\n      }\n\n      let percentage =\n        ((index + 1 + parseInt(jsonArray.length)) * 50) /\n        (parseInt(jsonArray.length) * 2);\n      setIsProgressPercent(Math.ceil(percentage));\n    });\n    data[\"emptyRow\"] = emptyRow;\n  });\n\n  //checking area\n  if (distinctAreaSource.length > 1 || distinctAreaDestination.length > 1) {\n    console.log(\"area Destination :\" + distinctAreaDestination);\n    console.log(\"area Source :\" + distinctAreaSource);\n    setIsCheckingArea(false);\n    return;\n  }\n\n  //end checking type\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: jsonArray });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: fileName });\n  dispatch({\n    type: STOK_TAKE_UPLOAD_JSON,\n    csvDistinctPOSKUInfoId: distinctPOSKUInfoId,\n  });\n  dispatch({\n    type: STOK_TAKE_UPLOAD_JSON,\n    csvDistinctSKUNumber: distinctSKUNumber,\n  });\n};\n\nexport const cleaningData = async ({\n  poSkuInfoValidated,\n  poSkuNumberValidated,\n  csvData,\n  setIsProgressPercent,\n  dispatch,\n  status,\n  transaction,\n  setIsProgressStatus,\n  nextPage,\n}) => {\n  //checking\n  if (status === false || status === null) {\n    return 0;\n  }\n  if (\n    csvData === undefined ||\n    csvData === null ||\n    poSkuInfoValidated === null ||\n    poSkuInfoValidated === undefined ||\n    poSkuNumberValidated === null ||\n    poSkuNumberValidated === undefined\n  ) {\n    console.clear();\n    return 0;\n  }\n\n  //split data and id po sku code\n  const wmsPoSkuCode = [];\n  const wmsPoSkuUom = [];\n  poSkuInfoValidated.map((data) => {\n    wmsPoSkuCode.push(data.wmsPoSkuCode);\n    wmsPoSkuUom.push(data.uom);\n  });\n\n  //split sku number and skuUUid sku number\n  let skuNumberArray = [];\n  let skuUuidArray = [];\n  let skuPhotosArray = [];\n  let skuUomArray = [];\n  poSkuNumberValidated.map((data) => {\n    skuNumberArray.push(data.skuNumber);\n    skuUuidArray.push(data.id);\n    skuPhotosArray.push(data.imageMd);\n    skuUomArray.push(data.uom);\n  });\n\n  //cleaning data\n  let cleanData = [];\n  csvData.map((data, index) => {\n    //if empty row then skip\n    if (data.emptyRow === true) {\n      return 0;\n    }\n\n    //format fixing\n    data.areaSource = parseInt(data.areaSource);\n    data.areaDestination = parseInt(data.areaDestination);\n\n    //if transaction stocktake then source and destination is same\n    if (\n      transaction == \"stock_take\" ||\n      transaction == \"repacking\" ||\n      transaction == \"outbound\"\n    ) {\n      data.areaDestination = parseInt(data.areaSource);\n      data.warehouseDestination = parseInt(data.warehouseSource);\n    }\n    //get index dari poskucode\n    let indexId = wmsPoSkuCode.indexOf(data.wmsPoSkuCode);\n\n    //get validated data\n    let skuValidatedData = poSkuInfoValidated[indexId];  \n    if(transaction !== \"additional_inbound\"){ \n        if (\n          !skuValidatedData ||\n          skuValidatedData.isExist === undefined ||\n          skuValidatedData.isExist === false ||\n          skuValidatedData.isExist === null\n        ) {\n          data.wmsPoSkuCodeStatus = false;\n          data.wmsPoSkuCodeReason = \"PO SKU Code Not Found\";\n        } else {\n          // skuValidatedData.expiryDate = skuValidatedData.expiryDate\n          data.inboundDate = skuValidatedData.inboundDate;\n          data.uom = wmsPoSkuUom[indexId];\n        } \n    } \n\n    //check grade\n    let tmp_grade = data.newGrade;\n    let arr_grade = [\"WASTE\", \"SEMI WASTE\", \"\"];\n    if (\n      tmp_grade !== undefined &&\n      !arr_grade.includes(tmp_grade.toUpperCase())\n    ) {\n      //if not waste or semi waste\n      if (skuNumberArray.includes(tmp_grade)) {\n        let idx = skuNumberArray.indexOf(tmp_grade);\n        data.newGradeStatus = true;\n        data.newGradeUuid = skuUuidArray[idx];\n      } else if (tmp_grade == \"\") {\n        data.newGradeUuid = \"\";\n        data.newGradeStatus = true;\n      } else {\n        //if not number => undefined\n        data.newGradeReason = \"Grade Undefined\";\n        data.newGradeStatus = false;\n      }\n    }\n\n    //check Sku Number\n    let tmp_sku_number = data.skuNumber;\n    if (!skuNumberArray.includes(tmp_sku_number)) {\n      data.skuNumberStatus = false;\n      data.skuNumberReason = \"SKU Number Not Found\";\n      data.skuUuid = \"\";\n    } else {\n      let idx = skuNumberArray.indexOf(tmp_sku_number);\n      data.skuUuid = skuUuidArray[idx];\n      data.photo = skuPhotosArray[idx];\n      if(transaction==\"additional_inbound\"){\n        data.uom = skuUomArray[idx];\n      }\n    }\n\n    //check New Grade\n    let tmp_new_grade = data.newGrade;\n    console.log(\"tmp_new_grade\", tmp_new_grade);\n    if( transaction !== \"additional_inbound\"){\n      if (\n        (tmp_new_grade && arr_grade.includes(tmp_new_grade.toUpperCase())) ||\n        tmp_new_grade == \"\"\n      ) {\n        data.newGradeReason = \"\";\n        data.newGradeStatus = true;\n        data.newGradeUuid = null;\n        data.newGradeUom = null;\n      } else {\n        if (skuNumberArray.includes(tmp_new_grade)) {\n          let idx = skuNumberArray.indexOf(tmp_new_grade);\n          data.newGradeReason = \"\";\n          data.newGradeStatus = true;\n          data.newGradeUuid = skuUuidArray[idx];\n          data.newGradeUom = skuUomArray[idx];\n        } else {\n          data.newGradeReason = \"SKU Number Not Found\";\n          data.newGradeStatus = false;\n          data.newGradeUuid = null;\n          data.newGradeUom = null;\n        }\n      }\n    }\n    \n\n    //merging_array\n    cleanData.push({ ...data, ...skuValidatedData });\n  });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: cleanData });\n  setIsProgressPercent(Math.ceil(100));\n  setTimeout(() => {\n    nextPage();\n  }, 200);\n};\n\nexport const resetCsvResist = async ({\n  dispatch,\n  resetStatus,\n  setIsResetCsvPersist,\n}) => {\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvData: null });\n  dispatch({ type: STOK_TAKE_UPLOAD_JSON, csvFileName: null });\n  dispatch({\n    type: STOK_TAKE_UPLOAD_JSON,\n    csvDistinctPOSKUInfoId: null,\n  });\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\n  dispatch({ type: VALIDATE_PO_SKU_INFO_ID, skuCodeValidated: null });\n  dispatch({ type: STATUS, status: null });\n  setIsResetCsvPersist(true);\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./FileUploader.scss\";\nimport {\n  templateDownload,\n  csvReader,\n  putCsvFieldJson,\n  validateColumn,\n  xlsReader,\n  cleaningData,\n  resetCsvResist,\n} from \"./services.js\";\nimport FileUploadProgress from \"Component/FileUploadProgress\";\nimport PopUp from \"Component/Modal/PopUp\";\nimport { validatePoSkuInfoId, validateSkuNumber } from \"apiServices\";\nimport { getWarehouseArea, getOutboundType } from \"apiServices/dropdown\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  paddingTop: \"20px\",\n  paddingBottom: \"20px\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n  height: \"400px\",\n};\n\nconst parentStyle = {\n  paddingTop: \"20px\",\n  paddingBottom: \"10px\",\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fff\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n  height: \"600px\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst FileUploader = ({ field, transaction, nextPage = null, type = null }) => {\n  const [isProgressDisplay, setIsProgressDisplay] = React.useState(false);\n  const [isProgressStatus, setIsProgressStatus] = React.useState();\n  const [isProgressPercent, setIsProgressPercent] = React.useState(0);\n  const [isProgressFileName, setIsProgressFileName] = React.useState(null);\n  const [isWarehouseArea, setIsWarehouseArea] = React.useState(null);\n  const [isAdditionalOutbound, setIsAdditionalOutbound] = React.useState(null);\n  const [isUploadStatus, setIsUploadStatus] = React.useState(null);\n  const [isCheckingSchema, setIsCheckingSchema] = React.useState(null);\n  const [isCheckingArea, setIsCheckingArea] = React.useState(null);\n  const [isResetCsvPersist, setIsResetCsvPersist] = React.useState(false);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShow2, setModalShow2] = React.useState(false);\n  const [modalShow3, setModalShow3] = React.useState(false);\n\n  //declare redux\n  const dispatch = useDispatch();\n  const selectorWarehouseArea = useSelector((state) => state.warehouseAreaCsv);\n  const selectorOutboundType = useSelector((state) => state.outboundTypeCsv);\n  const selectorStatus = useSelector((state) => state.status);\n  const selectorDistinctPOSKUInfoId = useSelector(\n    (state) => state.csvDistinctPOSKUInfoId\n  );\n  const selectorDistinctSKUNumber = useSelector(\n    (state) => state.csvDistinctSKUNumber\n  );\n  const selectorSkuCodeValidated = useSelector(\n    (state) => state.skuCodeValidated\n  );\n  const selectorSkuNumberValidated = useSelector(\n    (state) => state.skuNumberValidated\n  );\n  const selectorCsvData = useSelector((state) => state.csvData);\n  const warehousesData = useSelector((state) => state.warehouseData);\n\n  //reset csv persist\n  if (isResetCsvPersist !== true) {\n    resetCsvResist({\n      dispatch,\n      resetStatus: isResetCsvPersist,\n      setIsResetCsvPersist,\n    });\n  }\n\n  //get warehouse & warehouse area data\n  const warehouseUuid = useSelector((state) => state.user.warehouseUuid);\n  if (isWarehouseArea === null) {\n    getWarehouseArea({\n      warehouseUuid: warehouseUuid,\n      dispatch,\n      type: \"csvValidator\",\n    });\n    setIsWarehouseArea(1);\n  }\n\n  //get additional outbound type\n  if (isAdditionalOutbound === null && type == \"additionalOutbound\") {\n    getOutboundType({\n      dispatch,\n      type: \"csvValidator\",\n    });\n    setIsAdditionalOutbound(1);\n  }\n\n  //when file droped or selected\n  const onDropAccepted = async (e) => {\n    //reset percent\n    setIsProgressPercent(0);\n    setIsUploadStatus(true);\n\n    //get file type\n    const file = e[0].name;\n    const fileArr = file.split(\".\");\n    const fileType = fileArr[1];\n\n    //read file\n    let fieldArray = field.map((obj) => obj.dataField);\n    putCsvFieldJson({ dispatch, jsonArray: field });\n\n    let jsonArray = null;\n    await setIsProgressStatus(\"Reading...\");\n    await setIsProgressFileName(file);\n    await setIsProgressDisplay(true);\n    \n  // function csvReader Not Working\n    // if (fileType == \"csv\") {\n    //   jsonArray = await csvReader(\n    //     e,\n    //     fieldArray,\n    //     setIsProgressPercent,\n    //     setIsProgressStatus\n    //   );\n    // } else {\n      jsonArray = await xlsReader(\n        e,\n        fieldArray,\n        setIsProgressPercent,\n        setIsProgressStatus,\n        dispatch\n      );\n    // } \n    if (jsonArray === false) {\n      setModalShow(true);\n      return 0;\n    }\n\n    await setIsProgressStatus(\"Validating Column Type...\");\n    await validateColumn({\n      field,\n      jsonArray,\n      setIsProgressPercent,\n      fileName: file,\n      dispatch,\n      warehouseArea: selectorWarehouseArea,\n      warehouseUuid,\n      outboundType: selectorOutboundType,\n      setIsCheckingSchema,\n      warehousesData,\n      setIsCheckingArea,\n    });\n    await setIsProgressStatus(\"Validating PO SKU Code. . .\");\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    open,\n  } = useDropzone({\n    noClick: true,\n    onDropAccepted,\n    accept:\n      //accept csv, xls, and xlsx\n      \"text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  const cancelCsv = () => {\n    window.location.reload();\n  };\n\n  // Use Effect\n  useEffect(() => {\n    //setelah validasi kolom\n    // validasi PO SKU Code\n    // console.clear();\n    validatePoSkuInfoId({\n      dispatch,\n      skuData: selectorDistinctPOSKUInfoId,\n      status: isUploadStatus,\n    });\n  }, [selectorDistinctPOSKUInfoId]);\n\n  useEffect(() => {\n    //setelah validasi PO SKU Code\n    //validasi SKU Number\n    // console.clear();\n    setIsProgressPercent(70);\n    setIsProgressStatus(\"Validating SKU Numbers\");\n    validateSkuNumber({\n      dispatch,\n      skuNumberData: selectorDistinctSKUNumber,\n      bulk: true,\n      status: isUploadStatus,\n    });\n  }, [selectorSkuCodeValidated]);\n\n  useEffect(() => {\n    //setelah validasi sku number\n    //re arrange data yang akan digunakan di table\n    // console.clear();\n    setIsProgressPercent(90);\n    setIsProgressStatus(\"rearrange data. . .\");\n    cleaningData({\n      poSkuInfoValidated: selectorSkuCodeValidated,\n      poSkuNumberValidated: selectorSkuNumberValidated,\n      csvData: selectorCsvData,\n      transaction: transaction,\n      setIsProgressPercent,\n      dispatch,\n      status: isUploadStatus,\n      setIsProgressStatus,\n      nextPage,\n    });\n  }, [selectorSkuNumberValidated]);\n\n  useEffect(() => {\n    if (isCheckingSchema === false) {\n      console.log(isCheckingSchema);\n      setModalShow2(true);\n      setIsCheckingSchema(null);\n    }\n  }, [isCheckingSchema]);\n\n  useEffect(() => {\n    if (isCheckingArea === false) {\n      console.log(isCheckingArea);\n      setModalShow3(true);\n      setIsCheckingArea(null);\n    }\n  }, [isCheckingArea]);\n\n  return (\n    <div>\n      <PopUp\n        status={selectorStatus}\n        onCloseFunction={() => {\n          setModalShow(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        statusDisplay={modalShow}\n        title=\"Upload File Failed\"\n        cancelButtonTitle=\"Try Another File\"\n        actionButtonTitle={null}\n        colorText=\"red\"\n        refreshOnCancel={false}\n        msg1={\n          <div>\n            <div>\n              Upload failed because your file has more than 2000 lines.{\" \"}\n            </div>\n            <div> Please make it less than 2000 lines. </div>\n          </div>\n        }\n        msg2=\"Do you want to try another file?\"\n        cancelButtonClass=\"bg-red background\"\n        actionButtonClass=\" \"\n      />\n\n      <PopUp\n        status={200}\n        onCloseFunction={() => {\n          setModalShow2(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        actionButtonEvent={() => templateDownload()}\n        statusDisplay={modalShow2}\n        title=\"Different File Template\"\n        cancelButtonTitle=\"Cancel\"\n        actionButtonTitle=\"Download latest template\"\n        colorText=\"red\"\n        refreshOnCancel={false}\n        msg1={\n          <div>\n            <div> Your uploaded file has a different template.</div>\n          </div>\n        }\n        msg2=\"Do you want to download the latest file template ?\"\n        actionButtonClass=\"bg-green background\"\n        cancelButtonClass=\"\"\n      />\n\n      <PopUp\n        status={200}\n        onCloseFunction={() => {\n          setModalShow3(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        actionButtonEvent={() => {\n          setModalShow3(false);\n          setIsProgressPercent(0);\n          setIsProgressDisplay(false);\n        }}\n        statusDisplay={modalShow3}\n        title=\"Upload File Failed!\"\n        actionButtonTitle=\"Try Another File\"\n        colorText=\"red\"\n        refreshOnCancel={false}\n        msg1={\n          <div>\n            <div>\n              {\" \"}\n              We detect that you've uploaded two or more areas at once.\n            </div>\n            <div>\n              {\" \"}\n              Please try again to upload the file with one specific area.\n            </div>\n          </div>\n        }\n        msg2=\"Do you want to try another file ?\"\n        actionButtonClass=\"bg-red margin-left-0 background\"\n        cancelButtonClass=\"d-none \"\n      />\n\n      <div className=\"w-100 d-flex flex-column p-3 mb-3 bg-white\">\n        <div\n          className=\"d-flex flex-column justify-content-between\"\n          style={parentStyle}\n        >\n          <div className=\"FileUploader\">\n            <div\n              className=\"d-flex flex-column justify-content-end\"\n              {...getRootProps({ style })}\n            >\n              <input {...getInputProps()} />\n              <i\n                style={{ fontSize: \"90px\" }}\n                className=\"lineGrey iconU-upload\"\n              ></i>\n              <b className=\"mt-2\">Drag and Drop files here</b>\n              <p className=\"mt-2 mb-2 emptyTextField\"> Or </p>\n              <button\n                type=\"button\"\n                onClick={open}\n                className=\"btn px-5 py-2 text-white bg-green LatoBold no-shadow\"\n              >\n                Browse File\n              </button>\n\n              <div className=\"emptyTextField LatoBold mt-3 \">\n                Support only CSV, XLS, XLSX file\n              </div>\n            </div>\n          </div>\n          <div className=\"downloadTemplate w-100 align-right\">\n            <span onClick={() => templateDownload()} className=\"float-right\">\n              Download the File Template\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <FileUploadProgress\n        status={isProgressStatus}\n        progressPercent={isProgressPercent}\n        fileName={isProgressFileName}\n        display={isProgressDisplay}\n        cancelHandler={cancelCsv}\n      />\n    </div>\n  );\n};\n\nexport default FileUploader;\n","import React, { useEffect } from \"react\";\nimport \"./index.scss\";\n\nconst FileUploadProgress = ({\n  status,\n  progressPercent,\n  fileName,\n  display = false,\n  cancelButton = null,\n  cancelHandler,\n}) => {\n  useEffect(() => {\n}, [progressPercent, status]);\n  return (\n    <div\n      className={\n        \"w-100 d-flex flex-column progressBar \" +\n        (!display ? \"hiddenProgress\" : null)\n      }\n    >\n      <div className=\"pt-3 pb-0 pl-3 pr-3 bg-white border-all radius-all mb-3 mt-0\">\n        <div className=\"d-md-flex d-lg-flex mb-3 justify-content-between\">\n          <div className=\"uploadStatus w-100\">\n            <div className=\"row\">\n              <div className=\"col-md-7\">\n                <i className=\"iconU-sideBarInventoryEntry green\"></i> File\n                {fileName}\n              </div>\n              <div className=\"col-md-5\">\n                <p className=\"float-right\" style={{ lineHeight: \"30px\", cursor: \"pointer\" }} onClick={() => { cancelHandler() }}>\n                  Cancel\n                </p>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar\"\n                role=\"progressbar\"\n                style={{ width: progressPercent + \"%\" }}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              ></div>\n            </div>\n            <div className=\"mt-2\">\n              <div className=\"emptyTextField inline\">{status}</div>\n              <div className=\"text inline font-weight-bold\">\n                {\"  \"}\n                {progressPercent}%\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUploadProgress;\n"],"sourceRoot":""}