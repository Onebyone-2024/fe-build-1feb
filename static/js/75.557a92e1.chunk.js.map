{"version":3,"sources":["Page/Authenticate.jsx"],"names":["Authenticate","_ref","location","dispatch","useDispatch","user","useSelector","state","status","complete","setComplete","useState","useEffect","_location$search","email","search","slice","get","XMLHttpRequest","open","document","send","headers","headerSplit","getAllResponseHeaders","split","i","length","thisItem","key","substring","lastIndexOf","value","replace","getUserData","sessionId","React","createElement","Redirect","to","code","window","href","config","REACT_APP_LOGIN","className"],"mappings":"4KAAA,oDAsCeA,UAjCMC,IAAmB,IAAlB,SAAEC,GAAUD,EAC9B,MAAME,EAAWC,cACXC,EAAOC,YAAYC,GAASA,EAAMF,MAClCG,EAASF,YAAYC,GAASA,EAAMC,SACnCC,EAAUC,GAAeC,oBAAS,GAsBzC,OArBAC,oBAAU,KAAO,IAADC,EAEZ,MAAMC,EAAgB,OAARZ,QAAQ,IAARA,GAAgB,QAARW,EAARX,EAAUa,cAAM,IAAAF,OAAR,EAARA,EAAkBG,MAAM,IAChCC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAOC,SAASlB,UAAU,GACnCe,EAAII,KAAK,MACT,IAAIC,EAAU,GAEd,IAAIC,EADWN,EAAIO,wBACMC,MAAM,MAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAYI,OAAQD,IAAK,CACzC,IAAIE,EAAWL,EAAYG,GACvBG,EAAMD,EAASE,UAAU,EAAGF,EAASG,YAAY,MACjDC,EAAQJ,EAASE,UAAUF,EAASG,YAAY,KAAO,GAC3DF,EAAMA,EAAII,QAAQ,KAAM,IACxBD,EAAQA,EAAMC,QAAQ,IAAK,IAC3BX,EAAQO,GAAOG,EAInBE,YAAY,CAAE/B,WAAUE,OAAMG,SAAQ2B,UAAWrB,GAD/B,aAC0DJ,iBAC7E,IACCL,GAAQI,EAAiB2B,IAAAC,cAACC,IAAQ,CAACC,GAAG,QACrClC,GAAQI,GAA6B,OAAX,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQgC,QAAcC,OAAOvC,SAASwC,KAAOD,OAAOE,OAAOC,iBAChFvC,GAAQI,GAA6B,OAAX,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQgC,QAAcC,OAAOvC,SAASwC,KAAOD,OAAOE,OAAOC,kBAC9EvC,GAAQI,GAA6B,OAAX,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQgC,MAAqBJ,IAAAC,cAACC,IAAQ,CAACC,GAAG,kBAC5DH,IAAAC,cAAA,OAAKQ,UAAU,MAAK","file":"static/js/75.557a92e1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUserData } from 'apiServices'\n\nconst Authenticate = ({ location }) => {\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.user)\n    const status = useSelector(state => state.status)\n    const [complete, setComplete] = useState(false)\n    useEffect(() => {\n\n        const email = location?.search?.slice(11)\n        const get = new XMLHttpRequest()\n        get.open('GET', document.location, false)\n        get.send(null)\n        let headers = {}\n        const header = get.getAllResponseHeaders()\n        let headerSplit = header.split('\\r')\n        for (let i = 0; i < headerSplit.length; i++) {\n            let thisItem = headerSplit[i];\n            let key = thisItem.substring(0, thisItem.lastIndexOf(':'));\n            let value = thisItem.substring(thisItem.lastIndexOf(':') + 1);\n            key = key.replace('\\n', '')\n            value = value.replace(' ', '')\n            headers[key] = value;\n        }\n        //const sessionId = headers.sessionid;\n        const sessionId = 'session123';\n        getUserData({ dispatch, user, status, sessionId: email ? email : sessionId, setComplete })\n    }, [])\n    if (user && complete) return <Redirect to='/' />\n    if (!user && complete && status?.code === 401) window.location.href = window.config.REACT_APP_LOGIN\n    if (user && complete && status?.code === 401) window.location.href = window.config.REACT_APP_LOGIN\n    if (!user && complete && status?.code === 500) return <Redirect to='/server-error' />\n    return <div className='h5'>...Authenticate</div>\n}\n\nexport default Authenticate\n"],"sourceRoot":""}